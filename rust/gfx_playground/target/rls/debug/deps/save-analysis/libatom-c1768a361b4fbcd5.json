{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5","program":"C:\\Users\\Ollie\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","atom","C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=c1768a361b4fbcd5","-C","extra-filename=-c1768a361b4fbcd5","--out-dir","c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Ollie\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\libatom-c1768a361b4fbcd5.rmeta"},"prelude":{"crate_id":{"name":"atom","disambiguator":[1200912315018677700,485063897876699185]},"crate_root":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src","external_crates":[{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12578048494495979596,2047601184299498072]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[9458200224090790355,13573932773036415113]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17212932621614837670,6562776948220383497]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[760535750034822653,11118367618612043106]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9863315158332858256,17125058067034963864]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[4687805557387852666,9943473115938981341]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11895006708321731812,14562333644307237348]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3795917533932740915,1352930594861700352]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14246119625412523820,1488400038702589601]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[301469929213911528,4015090225475952437]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[2057170103176572375,2047842178592089941]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5373388065014169986,7291481803049279744]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[11217907578908536000,17992819105755382748]}}],"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":612,"byte_end":9613,"line_start":15,"line_end":340,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":612,"byte_end":9613,"line_start":15,"line_end":340,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":66},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":70},{"krate":0,"index":78},{"krate":0,"index":83},{"krate":0,"index":87},{"krate":0,"index":91}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":931,"byte_end":935,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"Atom","qualname":"::Atom","value":"Atom {  }","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26}],"decl_id":null,"docs":" An Atom wraps an AtomicPtr, it allows for safe mutation of an atomic\n into common Rust Types.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":1337,"byte_end":1342,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"empty","qualname":"<Atom<P>>::empty","value":"fn () -> Atom<P>","parent":null,"children":[],"decl_id":null,"docs":" Create a empty Atom\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":1527,"byte_end":1530,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<Atom<P>>::new","value":"fn (value: P) -> Atom<P>","parent":null,"children":[],"decl_id":null,"docs":" Create a new Atomic from Pointer P\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":1820,"byte_end":1824,"line_start":65,"line_end":65,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atom<P>>::swap","value":"fn (&self, v: P) -> Option<P>","parent":null,"children":[],"decl_id":null,"docs":" Swap a new value into the Atom, This will try multiple\n times until it succeeds. The old value will be returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":2269,"byte_end":2273,"line_start":78,"line_end":78,"column_start":12,"column_end":16},"name":"take","qualname":"<Atom<P>>::take","value":"fn (&self) -> Option<P>","parent":null,"children":[],"decl_id":null,"docs":" Take the value of the Atom replacing it with null pointer\n Returning the contents. If the contents was a `null` pointer the\n result will be `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":2762,"byte_end":2773,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"set_if_none","qualname":"<Atom<P>>::set_if_none","value":"fn (&self, v: P) -> Option<P>","parent":null,"children":[],"decl_id":null,"docs":" This will do a `CAS` setting the value only if it is NULL\n this will return `None` if the value was written,\n otherwise a `Some(v)` will be returned, where the value was\n the same value that you passed into this function\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":3320,"byte_end":3340,"line_start":106,"line_end":106,"column_start":12,"column_end":32},"name":"replace_and_set_next","qualname":"<Atom<P>>::replace_and_set_next","value":"fn (&self, mut value: P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Take the current content, write it into P then do a CAS to extent this\n Atom with the previous contents. This can be used to create a LIFO","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":4337,"byte_end":4344,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"is_none","qualname":"<Atom<P>>::is_none","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check to see if an atom is None","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":4903,"byte_end":4913,"line_start":166,"line_end":166,"column_start":11,"column_end":21},"name":"IntoRawPtr","qualname":"::IntoRawPtr","value":"IntoRawPtr","parent":null,"children":[{"krate":0,"index":47}],"decl_id":null,"docs":" Convert from into a raw pointer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":4930,"byte_end":4938,"line_start":167,"line_end":167,"column_start":15,"column_end":23},"name":"into_raw","qualname":"::IntoRawPtr::into_raw","value":"fn (self) -> *mut ()","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":5012,"byte_end":5022,"line_start":171,"line_end":171,"column_start":11,"column_end":21},"name":"FromRawPtr","qualname":"::FromRawPtr","value":"FromRawPtr","parent":null,"children":[{"krate":0,"index":49}],"decl_id":null,"docs":" Convert from a raw ptr into a pointer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":5039,"byte_end":5047,"line_start":172,"line_end":172,"column_start":15,"column_end":23},"name":"from_raw","qualname":"::FromRawPtr::from_raw","value":"fn (ptr: *mut ()) -> Self","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":6289,"byte_end":6300,"line_start":221,"line_end":221,"column_start":12,"column_end":23},"name":"AtomSetOnce","qualname":"::AtomSetOnce","value":"AtomSetOnce {  }","parent":null,"children":[{"krate":0,"index":96}],"decl_id":null,"docs":" This is a restricted version of the Atom. It allows for only\n `set_if_none` to be called.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":6479,"byte_end":6484,"line_start":233,"line_end":233,"column_start":12,"column_end":17},"name":"empty","qualname":"<AtomSetOnce<P>>::empty","value":"fn () -> AtomSetOnce<P>","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `AtomSetOnce`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":6641,"byte_end":6644,"line_start":240,"line_end":240,"column_start":12,"column_end":15},"name":"new","qualname":"<AtomSetOnce<P>>::new","value":"fn (value: P) -> AtomSetOnce<P>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `AtomSetOnce` from Pointer P\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":7013,"byte_end":7024,"line_start":250,"line_end":250,"column_start":12,"column_end":23},"name":"set_if_none","qualname":"<AtomSetOnce<P>>::set_if_none","value":"fn (&self, v: P) -> Option<P>","parent":null,"children":[],"decl_id":null,"docs":" This will do a `CAS` setting the value only if it is NULL\n this will return `OK(())` if the value was written,\n otherwise a `Err(P)` will be returned, where the value was\n the same value that you passed into this function\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":7153,"byte_end":7162,"line_start":255,"line_end":255,"column_start":12,"column_end":21},"name":"into_atom","qualname":"<AtomSetOnce<P>>::into_atom","value":"fn (self) -> Atom<P>","parent":null,"children":[],"decl_id":null,"docs":" Convert an `AtomSetOnce` into an `Atom`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":7283,"byte_end":7287,"line_start":260,"line_end":260,"column_start":12,"column_end":16},"name":"atom","qualname":"<AtomSetOnce<P>>::atom","value":"fn (&mut self) -> &mut Atom<P>","parent":null,"children":[],"decl_id":null,"docs":" Allow access to the atom if exclusive access is granted\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":7479,"byte_end":7486,"line_start":267,"line_end":267,"column_start":12,"column_end":19},"name":"is_none","qualname":"<AtomSetOnce<P>>::is_none","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check to see if an atom is None","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":7681,"byte_end":7684,"line_start":277,"line_end":277,"column_start":12,"column_end":15},"name":"get","qualname":"<AtomSetOnce<P>>::get","value":"fn <'a> (&'a self) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" If the Atom is set, get the value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":8279,"byte_end":8286,"line_start":296,"line_end":296,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AtomSetOnce<Box<T>>>::get_mut","value":"fn <'a> (&'a mut self) -> Option<&'a mut T>","parent":null,"children":[],"decl_id":null,"docs":" If the Atom is set, get the value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":8954,"byte_end":8957,"line_start":318,"line_end":318,"column_start":12,"column_end":15},"name":"dup","qualname":"<AtomSetOnce<T>>::dup","value":"fn <'a> (&self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Duplicate the inner pointer if it is set\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":9531,"byte_end":9541,"line_start":337,"line_end":337,"column_start":11,"column_end":21},"name":"GetNextMut","qualname":"::GetNextMut","value":"GetNextMut","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93}],"decl_id":null,"docs":" This is a utility Trait that fetches the next ptr from\n an object.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":9553,"byte_end":9560,"line_start":338,"line_end":338,"column_start":10,"column_end":17},"name":"NextPtr","qualname":"::GetNextMut::NextPtr","value":"type NextPtr;","parent":{"krate":0,"index":91},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":9569,"byte_end":9577,"line_start":339,"line_end":339,"column_start":8,"column_end":16},"name":"get_next","qualname":"::GetNextMut::get_next","value":"fn (&mut self) -> &mut Self::NextPtr","parent":{"krate":0,"index":91},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":1052,"byte_end":1056,"line_start":34,"line_end":34,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":1250,"byte_end":1254,"line_start":43,"line_end":43,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":4441,"byte_end":4445,"line_start":140,"line_end":140,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":4732,"byte_end":4736,"line_start":154,"line_end":154,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":4806,"byte_end":4810,"line_start":159,"line_end":159,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":5097,"byte_end":5100,"line_start":175,"line_end":175,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":5233,"byte_end":5236,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":5374,"byte_end":5377,"line_start":189,"line_end":189,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":5520,"byte_end":5523,"line_start":196,"line_end":196,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":6375,"byte_end":6386,"line_start":228,"line_end":228,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":7553,"byte_end":7564,"line_start":272,"line_end":272,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":8204,"byte_end":8215,"line_start":294,"line_end":294,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":8831,"byte_end":8842,"line_start":313,"line_end":313,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":1052,"byte_end":1056,"line_start":34,"line_end":34,"column_start":19,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":23},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":1250,"byte_end":1254,"line_start":43,"line_end":43,"column_start":9,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":23},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":4441,"byte_end":4445,"line_start":140,"line_end":140,"column_start":18,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":23},"to":{"krate":2,"index":1725}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":4732,"byte_end":4736,"line_start":154,"line_end":154,"column_start":25,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":23},"to":{"krate":2,"index":1534}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":4806,"byte_end":4810,"line_start":159,"line_end":159,"column_start":25,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":23},"to":{"krate":2,"index":1544}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":5097,"byte_end":5100,"line_start":175,"line_end":175,"column_start":24,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":90},"to":{"krate":0,"index":46}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":5233,"byte_end":5236,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":5,"index":90},"to":{"krate":0,"index":48}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":5374,"byte_end":5377,"line_start":189,"line_end":189,"column_start":24,"column_end":27},"kind":{"Impl":{"id":7}},"from":{"krate":5,"index":2394},"to":{"krate":0,"index":46}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":5520,"byte_end":5523,"line_start":196,"line_end":196,"column_start":24,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":2394},"to":{"krate":0,"index":48}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":6375,"byte_end":6386,"line_start":228,"line_end":228,"column_start":9,"column_end":20},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":7553,"byte_end":7564,"line_start":272,"line_end":272,"column_start":12,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":8204,"byte_end":8215,"line_start":294,"line_end":294,"column_start":9,"column_end":20},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atom-0.3.5\\src\\lib.rs","byte_start":8831,"byte_end":8842,"line_start":313,"line_end":313,"column_start":9,"column_end":20},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}}]}