{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2","program":"C:\\Users\\Ollie\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","hibitset","C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"parallel\"","--cfg","feature=\"rayon\"","-C","metadata=3af8227d152a1da3","-C","extra-filename=-3af8227d152a1da3","--out-dir","c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps","--extern","atom=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\libatom-c1768a361b4fbcd5.rmeta","--extern","rayon=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\librayon-ddcad0c19b93cdde.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Ollie\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\libhibitset-3af8227d152a1da3.rmeta"},"prelude":{"crate_id":{"name":"hibitset","disambiguator":[3220003420291171924,8875806865063075021]},"crate_root":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src","external_crates":[{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12578048494495979596,2047601184299498072]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[9458200224090790355,13573932773036415113]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17212932621614837670,6562776948220383497]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[760535750034822653,11118367618612043106]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9863315158332858256,17125058067034963864]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[4687805557387852666,9943473115938981341]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11895006708321731812,14562333644307237348]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3795917533932740915,1352930594861700352]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14246119625412523820,1488400038702589601]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[301469929213911528,4015090225475952437]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[2057170103176572375,2047842178592089941]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5373388065014169986,7291481803049279744]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[11217907578908536000,17992819105755382748]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":14,"id":{"name":"atom","disambiguator":[1200912315018677700,485063897876699185]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":15,"id":{"name":"rayon","disambiguator":[4916613042128942709,6450936071534617892]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":16,"id":{"name":"crossbeam_deque","disambiguator":[8096164653812542193,7245489510627635590]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":17,"id":{"name":"crossbeam_epoch","disambiguator":[11885994366585831752,6672687476904711462]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":18,"id":{"name":"cfg_if","disambiguator":[11332822018376109482,12531163141307769881]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":19,"id":{"name":"crossbeam_utils","disambiguator":[2442131106640731405,16187359134328411578]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":20,"id":{"name":"lazy_static","disambiguator":[11183393041770989563,4958224602867445297]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":21,"id":{"name":"memoffset","disambiguator":[721541891346912788,9917211672765356618]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":22,"id":{"name":"scopeguard","disambiguator":[12313808262949512516,7023837395223807313]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":23,"id":{"name":"either","disambiguator":[14224422418139563874,16303910147904872345]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":24,"id":{"name":"rayon_core","disambiguator":[15139817526765261712,6158245922852819891]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":25,"id":{"name":"crossbeam_queue","disambiguator":[6549487499231722874,16798004610080093658]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","num":26,"id":{"name":"num_cpus","disambiguator":[7984451816713647015,1991493691848609442]}}],"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":0,"byte_end":19792,"line_start":1,"line_end":723,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":2000,"byte_end":2012,"line_start":59,"line_end":59,"column_start":17,"column_end":29},"alias_span":null,"name":"AtomicBitSet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":2029,"byte_end":2036,"line_start":60,"line_end":60,"column_start":16,"column_end":23},"alias_span":null,"name":"BitIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":2038,"byte_end":2050,"line_start":60,"line_end":60,"column_start":25,"column_end":37},"alias_span":null,"name":"DrainBitIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":2097,"byte_end":2107,"line_start":62,"line_end":62,"column_start":16,"column_end":26},"alias_span":null,"name":"BitParIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":2109,"byte_end":2120,"line_start":62,"line_end":62,"column_start":28,"column_end":39},"alias_span":null,"name":"BitProducer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":2137,"byte_end":2146,"line_start":63,"line_end":63,"column_start":15,"column_end":24},"alias_span":null,"name":"BitSetAll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":2148,"byte_end":2157,"line_start":63,"line_end":63,"column_start":26,"column_end":35},"alias_span":null,"name":"BitSetAnd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":2159,"byte_end":2168,"line_start":63,"line_end":63,"column_start":37,"column_end":46},"alias_span":null,"name":"BitSetNot","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":2170,"byte_end":2178,"line_start":63,"line_end":63,"column_start":48,"column_end":56},"alias_span":null,"name":"BitSetOr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":2180,"byte_end":2189,"line_start":63,"line_end":63,"column_start":58,"column_end":67},"alias_span":null,"name":"BitSetXor","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":0,"byte_end":19792,"line_start":1,"line_end":723,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":65},{"krate":0,"index":151},{"krate":0,"index":240},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":277},{"krate":0,"index":829},{"krate":0,"index":838},{"krate":0,"index":836},{"krate":0,"index":834},{"krate":0,"index":278},{"krate":0,"index":291},{"krate":0,"index":302},{"krate":0,"index":307},{"krate":0,"index":315},{"krate":0,"index":323},{"krate":0,"index":327},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":340}],"decl_id":null,"docs":" # hibitset","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":1817,"byte_end":1839,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\atomic.rs","byte_start":20863,"byte_end":20875,"line_start":30,"line_end":30,"column_start":12,"column_end":24},"name":"AtomicBitSet","qualname":"::atomic::AtomicBitSet","value":"AtomicBitSet {  }","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344}],"decl_id":null,"docs":" This is similar to a [`BitSet`] but allows setting of value\n without unique ownership of the structure","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\atomic.rs","byte_start":21038,"byte_end":21041,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<AtomicBitSet>::new","value":"fn () -> AtomicBitSet","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `AtomicBitSet`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\atomic.rs","byte_start":21365,"byte_end":21375,"line_start":48,"line_end":48,"column_start":12,"column_end":22},"name":"add_atomic","qualname":"<AtomicBitSet>::add_atomic","value":"fn (&self, id: Index) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Adds `id` to the `AtomicBitSet`. Returns `true` if the value was\n already in the set.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\atomic.rs","byte_start":21344,"byte_end":21353,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\atomic.rs","byte_start":22134,"byte_end":22137,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"add","qualname":"<AtomicBitSet>::add","value":"fn (&mut self, id: Index) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Adds `id` to the `BitSet`. Returns `true` if the value was\n already in the set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\atomic.rs","byte_start":22113,"byte_end":22122,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\atomic.rs","byte_start":22706,"byte_end":22712,"line_start":83,"line_end":83,"column_start":12,"column_end":18},"name":"remove","qualname":"<AtomicBitSet>::remove","value":"fn (&mut self, id: Index) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Removes `id` from the set, returns `true` if the value\n was removed, and `false` if the value was not set\n to begin with.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\atomic.rs","byte_start":22685,"byte_end":22694,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\atomic.rs","byte_start":23723,"byte_end":23731,"line_start":114,"line_end":114,"column_start":12,"column_end":20},"name":"contains","qualname":"<AtomicBitSet>::contains","value":"fn (&self, id: Index) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `id` is in the set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\atomic.rs","byte_start":23702,"byte_end":23711,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\atomic.rs","byte_start":23883,"byte_end":23888,"line_start":120,"line_end":120,"column_start":12,"column_end":17},"name":"clear","qualname":"<AtomicBitSet>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear all bits in the set\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\drain.rs","byte_start":35730,"byte_end":35742,"line_start":8,"line_end":8,"column_start":12,"column_end":24},"name":"DrainBitIter","qualname":"::iter::drain::DrainBitIter","value":"DrainBitIter {  }","parent":null,"children":[{"krate":0,"index":81}],"decl_id":null,"docs":" A draining `Iterator` over a [`DrainableBitSet`] structure.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\drain.rs","byte_start":36043,"byte_end":36046,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<DrainBitIter>::new","value":"fn (set: &'a mut T, masks: [usize; LAYERS], prefix: [u32; LAYERS - 1]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `DrainBitIter`. You usually don't call this function\n but just [`.drain()`] on a bit set.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\parallel.rs","byte_start":37070,"byte_end":37080,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"BitParIter","qualname":"::iter::parallel::BitParIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `ParallelIterator` over a [`BitSetLike`] structure.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\parallel.rs","byte_start":37374,"byte_end":37377,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<BitParIter<T>>::new","value":"fn (set: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BitParIter`. You usually don't call this function\n but just [`.par_iter()`] on a bit set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\parallel.rs","byte_start":38181,"byte_end":38193,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"layers_split","qualname":"<BitParIter<T>>::layers_split","value":"fn (mut self, layers: u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets how many layers are split when forking.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\parallel.rs","byte_start":38781,"byte_end":38792,"line_start":75,"line_end":75,"column_start":12,"column_end":23},"name":"BitProducer","qualname":"::iter::parallel::BitProducer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Allows splitting and internally iterating through `BitSet`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\mod.rs","byte_start":31866,"byte_end":31873,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"BitIter","qualname":"::iter::BitIter","value":"BitIter {  }","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":370}],"decl_id":null,"docs":" An `Iterator` over a [`BitSetLike`] structure.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\mod.rs","byte_start":32197,"byte_end":32200,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<BitIter<T>>::new","value":"fn (set: T, masks: [usize; LAYERS], prefix: [u32; LAYERS - 1]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BitIter`. You usually don't call this function\n but just [`.iter()`] on a bit set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\mod.rs","byte_start":32498,"byte_end":32506,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"contains","qualname":"<BitIter<T>>::contains","value":"fn (&self, i: Index) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Allows checking if set bit is contained in underlying bit set.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":48281,"byte_end":48290,"line_start":97,"line_end":97,"column_start":12,"column_end":21},"name":"BitSetAnd","qualname":"::ops::BitSetAnd","value":"","parent":null,"children":[],"decl_id":null,"docs":" `BitSetAnd` takes two [`BitSetLike`] items, and merges the masks\n returning a new virtual set, which represents an intersection of the\n two original sets.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":49470,"byte_end":49478,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"BitSetOr","qualname":"::ops::BitSetOr","value":"","parent":null,"children":[],"decl_id":null,"docs":" `BitSetOr` takes two [`BitSetLike`] items, and merges the masks\n returning a new virtual set, which represents an merged of the\n two original sets.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":50660,"byte_end":50669,"line_start":184,"line_end":184,"column_start":12,"column_end":21},"name":"BitSetNot","qualname":"::ops::BitSetNot","value":"","parent":null,"children":[],"decl_id":null,"docs":" `BitSetNot` takes a [`BitSetLike`] item, and produced an inverted virtual set.\n Note: the implementation is sub-optimal because layers 1-3 are not active.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":51371,"byte_end":51380,"line_start":215,"line_end":215,"column_start":12,"column_end":21},"name":"BitSetXor","qualname":"::ops::BitSetXor","value":"","parent":null,"children":[],"decl_id":null,"docs":" `BitSetXor` takes two [`BitSetLike`] items, and merges the masks\n returning a new virtual set, which represents an merged of the\n two original sets.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":52720,"byte_end":52729,"line_start":263,"line_end":263,"column_start":12,"column_end":21},"name":"BitSetAll","qualname":"::ops::BitSetAll","value":"","parent":null,"children":[],"decl_id":null,"docs":" `BitSetAll` is a bitset with all bits set. Essentially the same as\n `BitSetNot(BitSet::new())` but without any allocation.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":2475,"byte_end":2481,"line_start":73,"line_end":73,"column_start":12,"column_end":18},"name":"BitSet","qualname":"::BitSet","value":"BitSet {  }","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833}],"decl_id":null,"docs":" A `BitSet` is a simple set designed to track which indices are placed\n into it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":2638,"byte_end":2641,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<BitSet>::new","value":"fn () -> BitSet","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `BitSet`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":2955,"byte_end":2968,"line_start":94,"line_end":94,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BitSet>::with_capacity","value":"fn (max: Index) -> BitSet","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `BitSet`, preallocated for up to `max` indices.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":4000,"byte_end":4003,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"add","qualname":"<BitSet>::add","value":"fn (&mut self, id: Index) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Adds `id` to the `BitSet`. Returns `true` if the value was\n already in the set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":3979,"byte_end":3988,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":5253,"byte_end":5259,"line_start":174,"line_end":174,"column_start":12,"column_end":18},"name":"remove","qualname":"<BitSet>::remove","value":"fn (&mut self, id: Index) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Removes `id` from the set, returns `true` if the value\n was removed, and `false` if the value was not set\n to begin with.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":5232,"byte_end":5241,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":6179,"byte_end":6187,"line_start":210,"line_end":210,"column_start":12,"column_end":20},"name":"contains","qualname":"<BitSet>::contains","value":"fn (&self, id: Index) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `id` is in the set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":6158,"byte_end":6167,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":6430,"byte_end":6442,"line_start":217,"line_end":217,"column_start":12,"column_end":24},"name":"contains_set","qualname":"<BitSet>::contains_set","value":"fn (&self, other: &BitSet) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all ids in `other` are contained in this set\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":6409,"byte_end":6418,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":6672,"byte_end":6677,"line_start":227,"line_end":227,"column_start":12,"column_end":17},"name":"clear","qualname":"<BitSet>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Completely wipes out the bit set.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":7371,"byte_end":7381,"line_start":248,"line_end":248,"column_start":11,"column_end":21},"name":"BitSetLike","qualname":"::BitSetLike","value":"BitSetLike","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":301}],"decl_id":null,"docs":" A generic interface for [`BitSetLike`]-like types.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":7508,"byte_end":7522,"line_start":252,"line_end":252,"column_start":8,"column_end":22},"name":"get_from_layer","qualname":"::BitSetLike::get_from_layer","value":"fn (&self, layer: usize, idx: usize) -> usize","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":" Gets the `usize` corresponding to layer and index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":7884,"byte_end":7892,"line_start":263,"line_end":263,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::BitSetLike::is_empty","value":"fn (&self) -> bool","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":" Returns true if this `BitSetLike` contains nothing, and false otherwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":8046,"byte_end":8052,"line_start":269,"line_end":269,"column_start":8,"column_end":14},"name":"layer3","qualname":"::BitSetLike::layer3","value":"fn (&self) -> usize","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":" Return a `usize` where each bit represents if any word in layer2\n has been set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":8187,"byte_end":8193,"line_start":273,"line_end":273,"column_start":8,"column_end":14},"name":"layer2","qualname":"::BitSetLike::layer2","value":"fn (&self, i: usize) -> usize","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":" Return the `usize` from the array of usizes that indicates if any\n bit has been set in layer1\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":8338,"byte_end":8344,"line_start":277,"line_end":277,"column_start":8,"column_end":14},"name":"layer1","qualname":"::BitSetLike::layer1","value":"fn (&self, i: usize) -> usize","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":" Return the `usize` from the array of usizes that indicates if any\n bit has been set in layer0\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":8480,"byte_end":8486,"line_start":281,"line_end":281,"column_start":8,"column_end":14},"name":"layer0","qualname":"::BitSetLike::layer0","value":"fn (&self, i: usize) -> usize","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":" Return a `usize` that maps to the direct 1:1 association with\n each index of the set\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":8586,"byte_end":8594,"line_start":284,"line_end":284,"column_start":8,"column_end":16},"name":"contains","qualname":"::BitSetLike::contains","value":"fn (&self, i: Index) -> bool","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":" Allows checking if set bit is contained in the bit set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":8689,"byte_end":8693,"line_start":287,"line_end":287,"column_start":8,"column_end":12},"name":"iter","qualname":"::BitSetLike::iter","value":"fn (self) -> BitIter<Self>","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":" Create an iterator that will scan over the keyspace\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":8969,"byte_end":8977,"line_start":298,"line_end":298,"column_start":8,"column_end":16},"name":"par_iter","qualname":"::BitSetLike::par_iter","value":"fn (self) -> BitParIter<Self>","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":" Create a parallel iterator that will scan over the keyspace\n","sig":null,"attributes":[{"value":"cfg(feature = \"parallel\")","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":8933,"byte_end":8961,"line_start":297,"line_end":297,"column_start":5,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":9160,"byte_end":9175,"line_start":307,"line_end":307,"column_start":11,"column_end":26},"name":"DrainableBitSet","qualname":"::DrainableBitSet","value":"DrainableBitSet: BitSetLike","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"decl_id":null,"docs":" A extension to the [`BitSetLike`] trait which allows draining it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":9309,"byte_end":9315,"line_start":311,"line_end":311,"column_start":8,"column_end":14},"name":"remove","qualname":"::DrainableBitSet::remove","value":"fn (&mut self, i: Index) -> bool","parent":{"krate":0,"index":302},"children":[],"decl_id":null,"docs":" Removes bit from the bit set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":9452,"byte_end":9457,"line_start":314,"line_end":314,"column_start":8,"column_end":13},"name":"drain","qualname":"::DrainableBitSet::drain","value":"fn <'a> (&'a mut self) -> DrainBitIter<'a, Self>","parent":{"krate":0,"index":302},"children":[],"decl_id":null,"docs":" Create a draining iterator that will scan over the keyspace and clears it while doing so.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\atomic.rs","byte_start":20971,"byte_end":20983,"line_start":36,"line_end":36,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\atomic.rs","byte_start":25048,"byte_end":25060,"line_start":153,"line_end":153,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\atomic.rs","byte_start":25760,"byte_end":25772,"line_start":181,"line_end":181,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\atomic.rs","byte_start":25883,"byte_end":25895,"line_start":188,"line_end":188,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\atomic.rs","byte_start":26392,"byte_end":26403,"line_start":209,"line_end":209,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\atomic.rs","byte_start":27942,"byte_end":27953,"line_start":261,"line_end":261,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\drain.rs","byte_start":35818,"byte_end":35830,"line_start":12,"line_end":12,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\drain.rs","byte_start":36243,"byte_end":36255,"line_start":24,"line_end":24,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\parallel.rs","byte_start":37101,"byte_end":37111,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\parallel.rs","byte_start":38362,"byte_end":38372,"line_start":57,"line_end":57,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\parallel.rs","byte_start":38900,"byte_end":38911,"line_start":77,"line_end":77,"column_start":53,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\mod.rs","byte_start":31994,"byte_end":32001,"line_start":23,"line_end":23,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\mod.rs","byte_start":32403,"byte_end":32410,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\mod.rs","byte_start":32581,"byte_end":32588,"line_start":44,"line_end":44,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\mod.rs","byte_start":33232,"byte_end":33239,"line_start":66,"line_end":66,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\mod.rs","byte_start":33742,"byte_end":33749,"line_start":88,"line_end":88,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":45336,"byte_end":45342,"line_start":9,"line_end":9,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":45841,"byte_end":45847,"line_start":25,"line_end":25,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":46863,"byte_end":46869,"line_start":55,"line_end":55,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":48387,"byte_end":48396,"line_start":99,"line_end":99,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":48997,"byte_end":49006,"line_start":122,"line_end":122,"column_start":66,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":49575,"byte_end":49583,"line_start":143,"line_end":143,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":50184,"byte_end":50192,"line_start":166,"line_end":166,"column_start":66,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":50729,"byte_end":50738,"line_start":186,"line_end":186,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":51477,"byte_end":51486,"line_start":217,"line_end":217,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":52751,"byte_end":52760,"line_start":264,"line_end":264,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\util.rs","byte_start":66391,"byte_end":66396,"line_start":38,"line_end":38,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":2583,"byte_end":2589,"line_start":80,"line_end":80,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":10867,"byte_end":10873,"line_start":394,"line_end":394,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":11410,"byte_end":11416,"line_start":421,"line_end":421,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":11529,"byte_end":11535,"line_start":428,"line_end":428,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":12333,"byte_end":12339,"line_start":460,"line_end":460,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\atomic.rs","byte_start":20971,"byte_end":20983,"line_start":36,"line_end":36,"column_start":6,"column_end":18},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\atomic.rs","byte_start":25048,"byte_end":25060,"line_start":153,"line_end":153,"column_start":21,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":341},"to":{"krate":0,"index":291}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\atomic.rs","byte_start":25760,"byte_end":25772,"line_start":181,"line_end":181,"column_start":26,"column_end":38},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":341},"to":{"krate":0,"index":302}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\atomic.rs","byte_start":25883,"byte_end":25895,"line_start":188,"line_end":188,"column_start":18,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":341},"to":{"krate":2,"index":2204}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\atomic.rs","byte_start":26392,"byte_end":26403,"line_start":209,"line_end":209,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":51},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\atomic.rs","byte_start":27942,"byte_end":27953,"line_start":261,"line_end":261,"column_start":16,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\drain.rs","byte_start":35818,"byte_end":35830,"line_start":12,"line_end":12,"column_start":30,"column_end":42},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":78},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\drain.rs","byte_start":36243,"byte_end":36255,"line_start":24,"line_end":24,"column_start":26,"column_end":38},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":78},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\parallel.rs","byte_start":37101,"byte_end":37111,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\parallel.rs","byte_start":38362,"byte_end":38372,"line_start":57,"line_end":57,"column_start":30,"column_end":40},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":347},"to":{"krate":15,"index":3658}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\parallel.rs","byte_start":38900,"byte_end":38911,"line_start":77,"line_end":77,"column_start":53,"column_end":64},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":355},"to":{"krate":15,"index":1133}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\mod.rs","byte_start":31994,"byte_end":32001,"line_start":23,"line_end":23,"column_start":9,"column_end":16},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\mod.rs","byte_start":32403,"byte_end":32410,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\mod.rs","byte_start":32581,"byte_end":32588,"line_start":44,"line_end":44,"column_start":10,"column_end":17},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\mod.rs","byte_start":33232,"byte_end":33239,"line_start":66,"line_end":66,"column_start":22,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":365},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\iter\\mod.rs","byte_start":33742,"byte_end":33749,"line_start":88,"line_end":88,"column_start":21,"column_end":28},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":45336,"byte_end":45342,"line_start":9,"line_end":9,"column_start":36,"column_end":42},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":829},"to":{"krate":2,"index":1684}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":45841,"byte_end":45847,"line_start":25,"line_end":25,"column_start":37,"column_end":43},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":829},"to":{"krate":2,"index":1680}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":46863,"byte_end":46869,"line_start":55,"line_end":55,"column_start":37,"column_end":43},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":829},"to":{"krate":2,"index":1688}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":48387,"byte_end":48396,"line_start":99,"line_end":99,"column_start":51,"column_end":60},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":389},"to":{"krate":0,"index":291}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":48997,"byte_end":49006,"line_start":122,"line_end":122,"column_start":66,"column_end":75},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":389},"to":{"krate":0,"index":302}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":49575,"byte_end":49583,"line_start":143,"line_end":143,"column_start":51,"column_end":59},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":399},"to":{"krate":0,"index":291}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":50184,"byte_end":50192,"line_start":166,"line_end":166,"column_start":66,"column_end":74},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":399},"to":{"krate":0,"index":302}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":50729,"byte_end":50738,"line_start":186,"line_end":186,"column_start":36,"column_end":45},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":409},"to":{"krate":0,"index":291}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":51477,"byte_end":51486,"line_start":217,"line_end":217,"column_start":51,"column_end":60},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":416},"to":{"krate":0,"index":291}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\ops.rs","byte_start":52751,"byte_end":52760,"line_start":264,"line_end":264,"column_start":21,"column_end":30},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":426},"to":{"krate":0,"index":291}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\util.rs","byte_start":66041,"byte_end":66046,"line_start":24,"line_end":24,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":250}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\util.rs","byte_start":66049,"byte_end":66053,"line_start":24,"line_end":24,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1542},"to":{"krate":0,"index":250}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\util.rs","byte_start":66391,"byte_end":66396,"line_start":38,"line_end":38,"column_start":14,"column_end":19},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":241},"to":{"krate":0,"index":250}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":2583,"byte_end":2589,"line_start":80,"line_end":80,"column_start":6,"column_end":12},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":9177,"byte_end":9187,"line_start":307,"line_end":307,"column_start":28,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":291},"to":{"krate":0,"index":302}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":10867,"byte_end":10873,"line_start":394,"line_end":394,"column_start":21,"column_end":27},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":829},"to":{"krate":0,"index":291}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":11410,"byte_end":11416,"line_start":421,"line_end":421,"column_start":26,"column_end":32},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":829},"to":{"krate":0,"index":302}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":11529,"byte_end":11535,"line_start":428,"line_end":428,"column_start":20,"column_end":26},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":829},"to":{"krate":2,"index":2039}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hibitset-0.6.2\\src\\lib.rs","byte_start":12333,"byte_end":12339,"line_start":460,"line_end":460,"column_start":13,"column_end":19},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":829},"to":{"krate":2,"index":2044}}]}