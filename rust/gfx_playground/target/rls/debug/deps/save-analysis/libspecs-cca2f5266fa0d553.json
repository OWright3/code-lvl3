{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1","program":"C:\\Users\\Ollie\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","specs","C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"parallel\"","--cfg","feature=\"rayon\"","--cfg","feature=\"shred-derive\"","--cfg","feature=\"specs-derive\"","-C","metadata=cca2f5266fa0d553","-C","extra-filename=-cca2f5266fa0d553","--out-dir","c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps","--extern","crossbeam_queue=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\libcrossbeam_queue-3f464cd88218152d.rmeta","--extern","derivative=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\derivative-ee306835abd9eae4.dll","--extern","hashbrown=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\libhashbrown-b137d0ce11702621.rmeta","--extern","hibitset=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\libhibitset-3af8227d152a1da3.rmeta","--extern","log=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\liblog-6a2a85634cb0873c.rmeta","--extern","rayon=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\librayon-ddcad0c19b93cdde.rmeta","--extern","shred=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\libshred-a12b97df370f2d79.rmeta","--extern","shrev=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\libshrev-942308b192e959ec.rmeta","--extern","specs_derive=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\specs_derive-4aa4a85aad7cb40f.dll","--extern","tuple_utils=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\libtuple_utils-f9159ec4779de339.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Ollie\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\libspecs-cca2f5266fa0d553.rmeta"},"prelude":{"crate_id":{"name":"specs","disambiguator":[14476841974970974273,8195950908421626918]},"crate_root":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src","external_crates":[{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12578048494495979596,2047601184299498072]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[9458200224090790355,13573932773036415113]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17212932621614837670,6562776948220383497]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[760535750034822653,11118367618612043106]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9863315158332858256,17125058067034963864]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[4687805557387852666,9943473115938981341]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11895006708321731812,14562333644307237348]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3795917533932740915,1352930594861700352]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14246119625412523820,1488400038702589601]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[301469929213911528,4015090225475952437]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[2057170103176572375,2047842178592089941]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5373388065014169986,7291481803049279744]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[11217907578908536000,17992819105755382748]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":14,"id":{"name":"hibitset","disambiguator":[3220003420291171924,8875806865063075021]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":15,"id":{"name":"atom","disambiguator":[1200912315018677700,485063897876699185]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":16,"id":{"name":"rayon","disambiguator":[4916613042128942709,6450936071534617892]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":17,"id":{"name":"crossbeam_deque","disambiguator":[8096164653812542193,7245489510627635590]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":18,"id":{"name":"crossbeam_epoch","disambiguator":[11885994366585831752,6672687476904711462]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":19,"id":{"name":"cfg_if","disambiguator":[11332822018376109482,12531163141307769881]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":20,"id":{"name":"crossbeam_utils","disambiguator":[2442131106640731405,16187359134328411578]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":21,"id":{"name":"lazy_static","disambiguator":[11183393041770989563,4958224602867445297]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":22,"id":{"name":"memoffset","disambiguator":[721541891346912788,9917211672765356618]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":23,"id":{"name":"scopeguard","disambiguator":[12313808262949512516,7023837395223807313]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":24,"id":{"name":"either","disambiguator":[14224422418139563874,16303910147904872345]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":25,"id":{"name":"rayon_core","disambiguator":[15139817526765261712,6158245922852819891]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":26,"id":{"name":"crossbeam_queue","disambiguator":[6549487499231722874,16798004610080093658]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":27,"id":{"name":"num_cpus","disambiguator":[7984451816713647015,1991493691848609442]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":28,"id":{"name":"shred","disambiguator":[388111209749242618,12804005620471013345]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","num":29,"id":{"name":"hashbrown","disambiguator":[16777052591510006031,4843570544896611892]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":30,"id":{"name":"ahash","disambiguator":[4109807228283811166,1087078810229114799]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":31,"id":{"name":"const_random","disambiguator":[16409365549202526485,5209780076967091576]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":32,"id":{"name":"proc_macro_hack","disambiguator":[15310243978229512669,5627586999162613208]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":33,"id":{"name":"const_random_macro","disambiguator":[11451297944138533643,15116419930978329499]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":34,"id":{"name":"smallvec","disambiguator":[1006501148006847738,1900906525199501262]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":35,"id":{"name":"serde","disambiguator":[1567256123462627994,18062257089074732831]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":36,"id":{"name":"serde_derive","disambiguator":[7626613138503479540,12988256039908973816]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":37,"id":{"name":"maybe_uninit","disambiguator":[10068608375343807728,3701175525633181931]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":38,"id":{"name":"arrayvec","disambiguator":[253107762780954684,4111330802589586862]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":39,"id":{"name":"nodrop","disambiguator":[10736730524725037673,12756801963287076804]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":40,"id":{"name":"mopa","disambiguator":[6844777839638132539,16396111670168729397]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":41,"id":{"name":"shred_derive","disambiguator":[17885189303815728336,12827976070418339229]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":42,"id":{"name":"shrev","disambiguator":[16596821490811670150,14681378111625228195]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\changeset.rs","num":43,"id":{"name":"derivative","disambiguator":[823586069151039845,3693890850364316929]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","num":44,"id":{"name":"tuple_utils","disambiguator":[14316862440534944364,3577969308568098384]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","num":45,"id":{"name":"crossbeam_queue","disambiguator":[16624414953399836306,221227937414884630]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","num":46,"id":{"name":"crossbeam_utils","disambiguator":[16831192804654587580,14062877986701788706]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","num":47,"id":{"name":"specs_derive","disambiguator":[14140800439558500633,14578524570445948944]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","num":48,"id":{"name":"log","disambiguator":[4836455872502032679,14091120571802305607]}}],"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":0,"byte_end":6789,"line_start":1,"line_end":232,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":18531,"byte_end":18542,"line_start":16,"line_end":16,"column_start":26,"column_end":37},"alias_span":null,"name":"JoinParIter","value":"","parent":{"krate":0,"index":116}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":18544,"byte_end":18551,"line_start":16,"line_end":16,"column_start":39,"column_end":46},"alias_span":null,"name":"ParJoin","value":"","parent":{"krate":0,"index":116}},{"kind":"Use","ref_id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42382,"byte_end":42386,"line_start":5,"line_end":5,"column_start":22,"column_end":26},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42438,"byte_end":42445,"line_start":7,"line_end":7,"column_start":22,"column_end":29},"alias_span":null,"name":"ParJoin","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":14,"index":829},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42465,"byte_end":42471,"line_start":8,"line_end":8,"column_start":19,"column_end":25},"alias_span":null,"name":"BitSet","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":28,"index":590},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42494,"byte_end":42502,"line_start":10,"line_end":10,"column_start":5,"column_end":13},"alias_span":null,"name":"Accessor","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":28,"index":283},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42504,"byte_end":42514,"line_start":10,"line_end":10,"column_start":15,"column_end":25},"alias_span":null,"name":"Dispatcher","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":28,"index":1036},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42516,"byte_end":42533,"line_start":10,"line_end":10,"column_start":27,"column_end":44},"alias_span":null,"name":"DispatcherBuilder","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":28,"index":724},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42535,"byte_end":42539,"line_start":10,"line_end":10,"column_start":46,"column_end":50},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":28,"index":795},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42541,"byte_end":42551,"line_start":10,"line_end":10,"column_start":52,"column_end":62},"alias_span":null,"name":"ReadExpect","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":28,"index":877},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42553,"byte_end":42561,"line_start":10,"line_end":10,"column_start":64,"column_end":72},"alias_span":null,"name":"Resource","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":28,"index":1673},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42563,"byte_end":42573,"line_start":10,"line_end":10,"column_start":74,"column_end":84},"alias_span":null,"name":"ResourceId","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":28,"index":622},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42575,"byte_end":42581,"line_start":10,"line_end":10,"column_start":86,"column_end":92},"alias_span":null,"name":"RunNow","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":28,"index":1144},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42587,"byte_end":42601,"line_start":11,"line_end":11,"column_start":5,"column_end":19},"alias_span":null,"name":"StaticAccessor","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":28,"index":633},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42603,"byte_end":42609,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"alias_span":null,"name":"System","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":28,"index":642},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42611,"byte_end":42621,"line_start":11,"line_end":11,"column_start":29,"column_end":39},"alias_span":null,"name":"SystemData","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":28,"index":1700},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42623,"byte_end":42628,"line_start":11,"line_end":11,"column_start":41,"column_end":46},"alias_span":null,"name":"World","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":28,"index":749},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42630,"byte_end":42635,"line_start":11,"line_end":11,"column_start":48,"column_end":53},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":28,"index":798},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42637,"byte_end":42648,"line_start":11,"line_end":11,"column_start":55,"column_end":66},"alias_span":null,"name":"WriteExpect","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":42,"index":204},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42668,"byte_end":42676,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"alias_span":null,"name":"ReaderId","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":16,"index":3658},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42729,"byte_end":42745,"line_start":16,"line_end":16,"column_start":22,"column_end":38},"alias_span":null,"name":"ParallelIterator","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":28,"index":121},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42791,"byte_end":42806,"line_start":18,"line_end":18,"column_start":16,"column_end":31},"alias_span":null,"name":"AsyncDispatcher","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":1410},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42841,"byte_end":42850,"line_start":21,"line_end":21,"column_start":16,"column_end":25},"alias_span":null,"name":"ChangeSet","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":2225},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42875,"byte_end":42889,"line_start":23,"line_end":23,"column_start":9,"column_end":23},"alias_span":null,"name":"ComponentEvent","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":2210},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42891,"byte_end":42906,"line_start":23,"line_end":23,"column_start":25,"column_end":40},"alias_span":null,"name":"DenseVecStorage","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42908,"byte_end":42922,"line_start":23,"line_end":23,"column_start":42,"column_end":56},"alias_span":null,"name":"FlaggedStorage","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":2203},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42924,"byte_end":42938,"line_start":23,"line_end":23,"column_start":58,"column_end":72},"alias_span":null,"name":"HashMapStorage","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42940,"byte_end":42951,"line_start":23,"line_end":23,"column_start":74,"column_end":85},"alias_span":null,"name":"NullStorage","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42953,"byte_end":42964,"line_start":23,"line_end":23,"column_start":87,"column_end":98},"alias_span":null,"name":"ReadStorage","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":861},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42974,"byte_end":42981,"line_start":24,"line_end":24,"column_start":9,"column_end":16},"alias_span":null,"name":"Storage","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":809},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42983,"byte_end":42990,"line_start":24,"line_end":24,"column_start":18,"column_end":25},"alias_span":null,"name":"Tracked","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":2218},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":42992,"byte_end":43002,"line_start":24,"line_end":24,"column_start":27,"column_end":37},"alias_span":null,"name":"VecStorage","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":43004,"byte_end":43016,"line_start":24,"line_end":24,"column_start":39,"column_end":51},"alias_span":null,"name":"WriteStorage","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":1226},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":43037,"byte_end":43044,"line_start":26,"line_end":26,"column_start":13,"column_end":20},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":973},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":43046,"byte_end":43055,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":43057,"byte_end":43065,"line_start":26,"line_end":26,"column_start":33,"column_end":41},"alias_span":null,"name":"Entities","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":2263},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":43067,"byte_end":43073,"line_start":26,"line_end":26,"column_start":43,"column_end":49},"alias_span":null,"name":"Entity","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":43075,"byte_end":43088,"line_start":26,"line_end":26,"column_start":51,"column_end":64},"alias_span":null,"name":"EntityBuilder","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":2343},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":43090,"byte_end":43100,"line_start":26,"line_end":26,"column_start":66,"column_end":76},"alias_span":null,"name":"LazyUpdate","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":1156},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":43102,"byte_end":43110,"line_start":26,"line_end":26,"column_start":78,"column_end":86},"alias_span":null,"name":"WorldExt","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":43216,"byte_end":43227,"line_start":4,"line_end":4,"column_start":12,"column_end":23},"alias_span":null,"name":"ReadStorage","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":43229,"byte_end":43241,"line_start":4,"line_end":4,"column_start":25,"column_end":37},"alias_span":null,"name":"WriteStorage","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":43256,"byte_end":43263,"line_start":5,"line_end":5,"column_start":13,"column_end":20},"alias_span":null,"name":"Entries","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":43265,"byte_end":43278,"line_start":5,"line_end":5,"column_start":22,"column_end":35},"alias_span":null,"name":"OccupiedEntry","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":43280,"byte_end":43292,"line_start":5,"line_end":5,"column_start":37,"column_end":49},"alias_span":null,"name":"StorageEntry","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":43294,"byte_end":43305,"line_start":5,"line_end":5,"column_start":51,"column_end":62},"alias_span":null,"name":"VacantEntry","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":43321,"byte_end":43335,"line_start":6,"line_end":6,"column_start":14,"column_end":28},"alias_span":null,"name":"FlaggedStorage","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":43351,"byte_end":43369,"line_start":7,"line_end":7,"column_start":15,"column_end":33},"alias_span":null,"name":"GenericReadStorage","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":43371,"byte_end":43390,"line_start":7,"line_end":7,"column_start":35,"column_end":54},"alias_span":null,"name":"GenericWriteStorage","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":43417,"byte_end":43445,"line_start":9,"line_end":9,"column_start":9,"column_end":37},"alias_span":null,"name":"ImmutableParallelRestriction","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":43447,"byte_end":43473,"line_start":9,"line_end":9,"column_start":39,"column_end":65},"alias_span":null,"name":"MutableParallelRestriction","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":0,"index":618},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":43475,"byte_end":43492,"line_start":9,"line_end":9,"column_start":67,"column_end":84},"alias_span":null,"name":"RestrictedStorage","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":43502,"byte_end":43523,"line_start":10,"line_end":10,"column_start":9,"column_end":30},"alias_span":null,"name":"SequentialRestriction","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":0,"index":2196},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":43547,"byte_end":43559,"line_start":12,"line_end":12,"column_start":16,"column_end":28},"alias_span":null,"name":"BTreeStorage","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":0,"index":2210},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":43561,"byte_end":43576,"line_start":12,"line_end":12,"column_start":30,"column_end":45},"alias_span":null,"name":"DenseVecStorage","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":0,"index":2203},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":43578,"byte_end":43592,"line_start":12,"line_end":12,"column_start":47,"column_end":61},"alias_span":null,"name":"HashMapStorage","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":43594,"byte_end":43605,"line_start":12,"line_end":12,"column_start":63,"column_end":74},"alias_span":null,"name":"NullStorage","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":0,"index":2218},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":43607,"byte_end":43617,"line_start":12,"line_end":12,"column_start":76,"column_end":86},"alias_span":null,"name":"VecStorage","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":0,"index":2225},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":43632,"byte_end":43646,"line_start":13,"line_end":13,"column_start":13,"column_end":27},"alias_span":null,"name":"ComponentEvent","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":0,"index":809},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":43648,"byte_end":43655,"line_start":13,"line_end":13,"column_start":29,"column_end":36},"alias_span":null,"name":"Tracked","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":28,"index":1700},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":109514,"byte_end":109519,"line_start":3,"line_end":3,"column_start":16,"column_end":21},"alias_span":null,"name":"World","value":"","parent":{"krate":0,"index":950}},{"kind":"Use","ref_id":{"krate":0,"index":973},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":109548,"byte_end":109557,"line_start":6,"line_end":6,"column_start":11,"column_end":20},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":950}},{"kind":"Use","ref_id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":109581,"byte_end":109597,"line_start":8,"line_end":8,"column_start":9,"column_end":25},"alias_span":null,"name":"CreateIterAtomic","value":"","parent":{"krate":0,"index":950}},{"kind":"Use","ref_id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":109599,"byte_end":109607,"line_start":8,"line_end":8,"column_start":27,"column_end":35},"alias_span":null,"name":"Entities","value":"","parent":{"krate":0,"index":950}},{"kind":"Use","ref_id":{"krate":0,"index":2292},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":109609,"byte_end":109620,"line_start":8,"line_end":8,"column_start":37,"column_end":48},"alias_span":null,"name":"EntitiesRes","value":"","parent":{"krate":0,"index":950}},{"kind":"Use","ref_id":{"krate":0,"index":2263},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":109622,"byte_end":109628,"line_start":8,"line_end":8,"column_start":50,"column_end":56},"alias_span":null,"name":"Entity","value":"","parent":{"krate":0,"index":950}},{"kind":"Use","ref_id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":109630,"byte_end":109646,"line_start":8,"line_end":8,"column_start":58,"column_end":74},"alias_span":null,"name":"EntityResBuilder","value":"","parent":{"krate":0,"index":950}},{"kind":"Use","ref_id":{"krate":0,"index":2298},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":109648,"byte_end":109658,"line_start":8,"line_end":8,"column_start":76,"column_end":86},"alias_span":null,"name":"Generation","value":"","parent":{"krate":0,"index":950}},{"kind":"Use","ref_id":{"krate":0,"index":993},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":109660,"byte_end":109665,"line_start":8,"line_end":8,"column_start":88,"column_end":93},"alias_span":null,"name":"Index","value":"","parent":{"krate":0,"index":950}},{"kind":"Use","ref_id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":109685,"byte_end":109696,"line_start":10,"line_end":10,"column_start":12,"column_end":23},"alias_span":null,"name":"LazyBuilder","value":"","parent":{"krate":0,"index":950}},{"kind":"Use","ref_id":{"krate":0,"index":2343},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":109698,"byte_end":109708,"line_start":10,"line_end":10,"column_start":25,"column_end":35},"alias_span":null,"name":"LazyUpdate","value":"","parent":{"krate":0,"index":950}},{"kind":"Use","ref_id":{"krate":0,"index":1156},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":109726,"byte_end":109734,"line_start":11,"line_end":11,"column_start":16,"column_end":24},"alias_span":null,"name":"WorldExt","value":"","parent":{"krate":0,"index":950}},{"kind":"Use","ref_id":{"krate":14,"index":829},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":5971,"byte_end":5977,"line_start":208,"line_end":208,"column_start":19,"column_end":25},"alias_span":null,"name":"BitSet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":590},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6000,"byte_end":6008,"line_start":210,"line_end":210,"column_start":5,"column_end":13},"alias_span":null,"name":"Accessor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":603},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6010,"byte_end":6021,"line_start":210,"line_end":210,"column_start":15,"column_end":26},"alias_span":null,"name":"AccessorCow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":1031},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6023,"byte_end":6036,"line_start":210,"line_end":210,"column_start":28,"column_end":41},"alias_span":null,"name":"BatchAccessor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":186},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6038,"byte_end":6053,"line_start":210,"line_end":210,"column_start":43,"column_end":58},"alias_span":null,"name":"BatchController","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":177},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6055,"byte_end":6074,"line_start":210,"line_end":210,"column_start":60,"column_end":79},"alias_span":null,"name":"BatchUncheckedWorld","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":191},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6080,"byte_end":6108,"line_start":211,"line_end":211,"column_start":5,"column_end":33},"alias_span":null,"name":"DefaultBatchControllerSystem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":283},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6110,"byte_end":6120,"line_start":211,"line_end":211,"column_start":35,"column_end":45},"alias_span":null,"name":"Dispatcher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":1036},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6122,"byte_end":6139,"line_start":211,"line_end":211,"column_start":47,"column_end":64},"alias_span":null,"name":"DispatcherBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":724},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6141,"byte_end":6145,"line_start":211,"line_end":211,"column_start":66,"column_end":70},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":795},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6147,"byte_end":6157,"line_start":211,"line_end":211,"column_start":72,"column_end":82},"alias_span":null,"name":"ReadExpect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":622},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6159,"byte_end":6165,"line_start":211,"line_end":211,"column_start":84,"column_end":90},"alias_span":null,"name":"RunNow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":1123},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6171,"byte_end":6182,"line_start":212,"line_end":212,"column_start":5,"column_end":16},"alias_span":null,"name":"RunningTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":1144},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6184,"byte_end":6198,"line_start":212,"line_end":212,"column_start":18,"column_end":32},"alias_span":null,"name":"StaticAccessor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":633},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6200,"byte_end":6206,"line_start":212,"line_end":212,"column_start":34,"column_end":40},"alias_span":null,"name":"System","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":642},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6208,"byte_end":6218,"line_start":212,"line_end":212,"column_start":42,"column_end":52},"alias_span":null,"name":"SystemData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":1700},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6220,"byte_end":6225,"line_start":212,"line_end":212,"column_start":54,"column_end":59},"alias_span":null,"name":"World","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":749},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6227,"byte_end":6232,"line_start":212,"line_end":212,"column_start":61,"column_end":66},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":798},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6234,"byte_end":6245,"line_start":212,"line_end":212,"column_start":68,"column_end":79},"alias_span":null,"name":"WriteExpect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":42,"index":204},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6265,"byte_end":6273,"line_start":214,"line_end":214,"column_start":16,"column_end":24},"alias_span":null,"name":"ReaderId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":121},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6320,"byte_end":6335,"line_start":217,"line_end":217,"column_start":16,"column_end":31},"alias_span":null,"name":"AsyncDispatcher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":47,"index":69},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6394,"byte_end":6403,"line_start":220,"line_end":220,"column_start":24,"column_end":33},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":47,"index":78},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6405,"byte_end":6420,"line_start":220,"line_end":220,"column_start":35,"column_end":50},"alias_span":null,"name":"ConvertSaveload","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6474,"byte_end":6481,"line_start":223,"line_end":223,"column_start":22,"column_end":29},"alias_span":null,"name":"ParJoin","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1410},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6515,"byte_end":6524,"line_start":225,"line_end":225,"column_start":16,"column_end":25},"alias_span":null,"name":"ChangeSet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6536,"byte_end":6540,"line_start":226,"line_end":226,"column_start":11,"column_end":15},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2210},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6565,"byte_end":6580,"line_start":228,"line_end":228,"column_start":9,"column_end":24},"alias_span":null,"name":"DenseVecStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6582,"byte_end":6596,"line_start":228,"line_end":228,"column_start":26,"column_end":40},"alias_span":null,"name":"FlaggedStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2203},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6598,"byte_end":6612,"line_start":228,"line_end":228,"column_start":42,"column_end":56},"alias_span":null,"name":"HashMapStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6614,"byte_end":6625,"line_start":228,"line_end":228,"column_start":58,"column_end":69},"alias_span":null,"name":"NullStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6627,"byte_end":6638,"line_start":228,"line_end":228,"column_start":71,"column_end":82},"alias_span":null,"name":"ReadStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":861},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6640,"byte_end":6647,"line_start":228,"line_end":228,"column_start":84,"column_end":91},"alias_span":null,"name":"Storage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":809},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6657,"byte_end":6664,"line_start":229,"line_end":229,"column_start":9,"column_end":16},"alias_span":null,"name":"Tracked","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2218},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6666,"byte_end":6676,"line_start":229,"line_end":229,"column_start":18,"column_end":28},"alias_span":null,"name":"VecStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6678,"byte_end":6690,"line_start":229,"line_end":229,"column_start":30,"column_end":42},"alias_span":null,"name":"WriteStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1226},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6711,"byte_end":6718,"line_start":231,"line_end":231,"column_start":13,"column_end":20},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":973},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6720,"byte_end":6729,"line_start":231,"line_end":231,"column_start":22,"column_end":31},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6731,"byte_end":6739,"line_start":231,"line_end":231,"column_start":33,"column_end":41},"alias_span":null,"name":"Entities","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2263},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6741,"byte_end":6747,"line_start":231,"line_end":231,"column_start":43,"column_end":49},"alias_span":null,"name":"Entity","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6749,"byte_end":6762,"line_start":231,"line_end":231,"column_start":51,"column_end":64},"alias_span":null,"name":"EntityBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2343},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6764,"byte_end":6774,"line_start":231,"line_end":231,"column_start":66,"column_end":76},"alias_span":null,"name":"LazyUpdate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1156},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":6776,"byte_end":6784,"line_start":231,"line_end":231,"column_start":78,"column_end":86},"alias_span":null,"name":"WorldExt","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":0,"byte_end":6789,"line_start":1,"line_end":232,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":29},{"krate":0,"index":74},{"krate":0,"index":116},{"krate":0,"index":235},{"krate":0,"index":278},{"krate":0,"index":950},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1268},{"krate":0,"index":1269}],"decl_id":null,"docs":" # SPECS Parallel ECS","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\changeset.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"changeset","qualname":"::changeset","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\changeset.rs","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":1410},{"krate":0,"index":1414},{"krate":0,"index":38},{"krate":0,"index":43},{"krate":0,"index":47},{"krate":0,"index":51},{"krate":0,"index":59},{"krate":0,"index":67}],"decl_id":null,"docs":" Provides a changeset that can be collected from an iterator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1410},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\changeset.rs","byte_start":9755,"byte_end":9764,"line_start":42,"line_end":42,"column_start":12,"column_end":21},"name":"ChangeSet","qualname":"::changeset::ChangeSet","value":"ChangeSet {  }","parent":null,"children":[{"krate":0,"index":1412},{"krate":0,"index":1413}],"decl_id":null,"docs":" Change set that can be collected from an iterator, and joined on for easy\n application to components.","sig":null,"attributes":[{"value":"derivative(Default (bound = \"\"))","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\changeset.rs","byte_start":9709,"byte_end":9743,"line_start":41,"line_end":41,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\changeset.rs","byte_start":9888,"byte_end":9891,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<ChangeSet<T>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new change set\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\changeset.rs","byte_start":10092,"byte_end":10095,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"add","qualname":"<ChangeSet<T>>::add","value":"fn (&mut self, entity: Entity, value: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add a value to the change set. If the entity already have a value in the\n change set, the incoming value will be added to that.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\changeset.rs","byte_start":10647,"byte_end":10652,"line_start":74,"line_end":74,"column_start":12,"column_end":17},"name":"clear","qualname":"<ChangeSet<T>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear the changeset\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":1417},{"krate":0,"index":1426},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":1428},{"krate":0,"index":1437},{"krate":0,"index":1434},{"krate":0,"index":1432},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":1439},{"krate":0,"index":1444},{"krate":0,"index":1442},{"krate":0,"index":1440},{"krate":0,"index":112},{"krate":0,"index":114}],"decl_id":null,"docs":" Specs errors","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":14766,"byte_end":14774,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"BoxedErr","qualname":"::error::BoxedErr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A boxed error implementing `Debug`, `Display` and `Error`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":14886,"byte_end":14889,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<BoxedErr>::new","value":"fn <T> (err: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new boxed error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1418},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":15818,"byte_end":15824,"line_start":61,"line_end":61,"column_start":5,"column_end":11},"name":"Custom","qualname":"::error::Error::Custom","value":"Error::Custom(BoxedErr)","parent":{"krate":0,"index":1417},"children":[],"decl_id":null,"docs":" A custom, boxed error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1421},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":15872,"byte_end":15887,"line_start":63,"line_end":63,"column_start":5,"column_end":20},"name":"WrongGeneration","qualname":"::error::Error::WrongGeneration","value":"Error::WrongGeneration(WrongGeneration)","parent":{"krate":0,"index":1417},"children":[],"decl_id":null,"docs":" Wrong generation error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1424},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":15930,"byte_end":15945,"line_start":66,"line_end":66,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::Error::__NonExhaustive","value":"Error::__NonExhaustive","parent":{"krate":0,"index":1417},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1417},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":15775,"byte_end":15780,"line_start":59,"line_end":59,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Error::{Custom, WrongGeneration, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":1418},{"krate":0,"index":1421},{"krate":0,"index":1424}],"decl_id":null,"docs":" The Specs error type.\n This is an enum which is able to represent\n all error types of this library.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1428},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":16920,"byte_end":16935,"line_start":111,"line_end":111,"column_start":12,"column_end":27},"name":"WrongGeneration","qualname":"::error::WrongGeneration","value":"WrongGeneration { action, actual_gen, entity }","parent":null,"children":[{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431}],"decl_id":null,"docs":" Wrong generation error.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1429},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":17010,"byte_end":17016,"line_start":113,"line_end":113,"column_start":9,"column_end":15},"name":"action","qualname":"::error::WrongGeneration::action","value":"&'static str","parent":{"krate":0,"index":1428},"children":[],"decl_id":null,"docs":" The action that failed because of the wrong generation.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1430},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":17082,"byte_end":17092,"line_start":115,"line_end":115,"column_start":9,"column_end":19},"name":"actual_gen","qualname":"::error::WrongGeneration::actual_gen","value":"world::entity::Generation","parent":{"krate":0,"index":1428},"children":[],"decl_id":null,"docs":" The actual generation of this id.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1431},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":17209,"byte_end":17215,"line_start":118,"line_end":118,"column_start":9,"column_end":15},"name":"entity","qualname":"::error::WrongGeneration::entity","value":"world::entity::Entity","parent":{"krate":0,"index":1428},"children":[],"decl_id":null,"docs":" The entity that has been passed, containing\n the id and the invalid generation.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1439},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":17882,"byte_end":17889,"line_start":142,"line_end":142,"column_start":10,"column_end":17},"name":"NoError","qualname":"::error::NoError","value":"NoError::{}","parent":null,"children":[],"decl_id":null,"docs":" An error type which cannot be instantiated.\n Used as a placeholder for associated error types if\n something cannot fail.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"join","qualname":"::join","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":123},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":139},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":194},{"krate":0,"index":1446},{"krate":0,"index":1451},{"krate":0,"index":1457},{"krate":0,"index":1464},{"krate":0,"index":1472},{"krate":0,"index":1481},{"krate":0,"index":1491},{"krate":0,"index":1502},{"krate":0,"index":1514},{"krate":0,"index":1527},{"krate":0,"index":1541},{"krate":0,"index":1556},{"krate":0,"index":1572},{"krate":0,"index":1589},{"krate":0,"index":1607},{"krate":0,"index":195},{"krate":0,"index":204},{"krate":0,"index":208},{"krate":0,"index":216},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":227},{"krate":0,"index":232},{"krate":0,"index":1626},{"krate":0,"index":1634},{"krate":0,"index":1636},{"krate":0,"index":1645},{"krate":0,"index":1648},{"krate":0,"index":1658},{"krate":0,"index":1662},{"krate":0,"index":1673},{"krate":0,"index":1678},{"krate":0,"index":1690},{"krate":0,"index":1696},{"krate":0,"index":1709},{"krate":0,"index":1716},{"krate":0,"index":1730},{"krate":0,"index":1738},{"krate":0,"index":1753},{"krate":0,"index":1762},{"krate":0,"index":1778},{"krate":0,"index":1788},{"krate":0,"index":1805},{"krate":0,"index":1816},{"krate":0,"index":1834},{"krate":0,"index":1846},{"krate":0,"index":1865},{"krate":0,"index":1878},{"krate":0,"index":1898},{"krate":0,"index":1912},{"krate":0,"index":1933},{"krate":0,"index":1948},{"krate":0,"index":1970},{"krate":0,"index":1986},{"krate":0,"index":2009},{"krate":0,"index":2026},{"krate":0,"index":2050},{"krate":0,"index":2068},{"krate":0,"index":2093},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":2112},{"krate":0,"index":2122},{"krate":0,"index":2126},{"krate":0,"index":2136},{"krate":0,"index":2140},{"krate":0,"index":2150},{"krate":0,"index":2154},{"krate":0,"index":2164},{"krate":0,"index":2168},{"krate":0,"index":2178},{"krate":0,"index":2182},{"krate":0,"index":2192}],"decl_id":null,"docs":" Joining of components for iteration over entities with specific components.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\par_join.rs","byte_start":38760,"byte_end":38767,"line_start":23,"line_end":23,"column_start":18,"column_end":25},"name":"ParJoin","qualname":"::join::par_join::ParJoin","value":"ParJoin: Join","parent":null,"children":[{"krate":0,"index":153}],"decl_id":null,"docs":" The purpose of the `ParJoin` trait is to provide a way\n to access multiple storages in parallel at the same time with\n the merged bit set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\par_join.rs","byte_start":38844,"byte_end":38852,"line_start":25,"line_end":25,"column_start":8,"column_end":16},"name":"par_join","qualname":"::join::par_join::ParJoin::par_join","value":"fn (self) -> JoinParIter<Self>","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Create a joined parallel iterator over the contents.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\par_join.rs","byte_start":39296,"byte_end":39307,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"name":"JoinParIter","qualname":"::join::par_join::JoinParIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" `JoinParIter` is a `ParallelIterator` over a group of `Storages`.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\par_join.rs","byte_start":39273,"byte_end":39284,"line_start":40,"line_end":40,"column_start":1,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":18640,"byte_end":18646,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"BitAnd","qualname":"::join::BitAnd","value":"BitAnd","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189}],"decl_id":null,"docs":" `BitAnd` is a helper method to & bitsets together resulting in a tree.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":18688,"byte_end":18693,"line_start":21,"line_end":21,"column_start":10,"column_end":15},"name":"Value","qualname":"::join::BitAnd::Value","value":"type Value: BitSetLike;","parent":{"krate":0,"index":187},"children":[],"decl_id":null,"docs":" The combined bitsets.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":18786,"byte_end":18789,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"and","qualname":"::join::BitAnd::and","value":"fn (self) -> Self::Value","parent":{"krate":0,"index":187},"children":[],"decl_id":null,"docs":" Combines `Self` into a single `BitSetLike` through `BitSetAnd`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":22489,"byte_end":22493,"line_start":142,"line_end":142,"column_start":11,"column_end":15},"name":"Join","qualname":"::join::Join","value":"Join","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203}],"decl_id":null,"docs":" The purpose of the `Join` trait is to provide a way\n to access multiple storages at the same time with\n the merged bit set.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":22540,"byte_end":22544,"line_start":144,"line_end":144,"column_start":10,"column_end":14},"name":"Type","qualname":"::join::Join::Type","value":"type Type;","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Type of joined components.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":22588,"byte_end":22593,"line_start":146,"line_end":146,"column_start":10,"column_end":15},"name":"Value","qualname":"::join::Join::Value","value":"type Value;","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Type of joined storages.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":22637,"byte_end":22641,"line_start":148,"line_end":148,"column_start":10,"column_end":14},"name":"Mask","qualname":"::join::Join::Mask","value":"type Mask: BitSetLike;","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Type of joined bit mask.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":22715,"byte_end":22719,"line_start":151,"line_end":151,"column_start":8,"column_end":12},"name":"join","qualname":"::join::Join::join","value":"fn (self) -> JoinIter<Self>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Create a joined iterator over the contents.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":25025,"byte_end":25030,"line_start":212,"line_end":212,"column_start":8,"column_end":13},"name":"maybe","qualname":"::join::Join::maybe","value":"fn (self) -> MaybeJoin<Self>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Returns a `Join`-able structure that yields all indices, returning\n `None` for all missing elements and `Some(T)` for found elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":25489,"byte_end":25493,"line_start":227,"line_end":227,"column_start":15,"column_end":19},"name":"open","qualname":"::join::Join::open","value":"fn (self) -> (Self::Mask, Self::Value)","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Open this join by returning the mask and the storages.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":25834,"byte_end":25837,"line_start":237,"line_end":237,"column_start":15,"column_end":18},"name":"get","qualname":"::join::Join::get","value":"fn (value: &mut Self::Value, id: Index) -> Self::Type","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Get a joined component value by a given index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":26207,"byte_end":26223,"line_start":244,"line_end":244,"column_start":8,"column_end":24},"name":"is_unconstrained","qualname":"::join::Join::is_unconstrained","value":"fn () -> bool","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" If this `Join` typically returns all indices in the mask, then iterating\n over only it or combined with other joins that are also dangerous\n will cause the `JoinIter`/`ParJoin` to go through all indices which\n is usually not what is wanted and will kill performance.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":26190,"byte_end":26199,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":26782,"byte_end":26791,"line_start":260,"line_end":260,"column_start":12,"column_end":21},"name":"MaybeJoin","qualname":"::join::MaybeJoin","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Join`-able structure that yields all indices, returning `None` for all\n missing elements and `Some(T)` for found elements.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":27826,"byte_end":27834,"line_start":296,"line_end":296,"column_start":12,"column_end":20},"name":"JoinIter","qualname":"::join::JoinIter","value":"JoinIter {  }","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219}],"decl_id":null,"docs":" `JoinIter` is an `Iterator` over a group of `Storages`.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":27803,"byte_end":27814,"line_start":295,"line_end":295,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":27974,"byte_end":27977,"line_start":303,"line_end":303,"column_start":12,"column_end":15},"name":"new","qualname":"<JoinIter<J>>::new","value":"fn (j: J) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new join iterator.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":30184,"byte_end":30187,"line_start":370,"line_end":370,"column_start":12,"column_end":15},"name":"get","qualname":"<JoinIter<J>>::get","value":"fn (&mut self, entity: Entity, entities: &Entities) -> Option<J::Type>","parent":null,"children":[],"decl_id":null,"docs":" Allows getting joined values for specific entity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":30865,"byte_end":30878,"line_start":386,"line_end":386,"column_start":12,"column_end":25},"name":"get_unchecked","qualname":"<JoinIter<J>>::get_unchecked","value":"fn (&mut self, index: Index) -> Option<J::Type>","parent":null,"children":[],"decl_id":null,"docs":" Allows getting joined values for specific raw index.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\prelude.rs","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257}],"decl_id":null,"docs":" Prelude module","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"storage","qualname":"::storage","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":306},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":373},{"krate":0,"index":393},{"krate":0,"index":478},{"krate":0,"index":520},{"krate":0,"index":589},{"krate":0,"index":723},{"krate":0,"index":794},{"krate":0,"index":824},{"krate":0,"index":828},{"krate":0,"index":835},{"krate":0,"index":837},{"krate":0,"index":839},{"krate":0,"index":841},{"krate":0,"index":845},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":2245},{"krate":0,"index":2249},{"krate":0,"index":851},{"krate":0,"index":858},{"krate":0,"index":861},{"krate":0,"index":868},{"krate":0,"index":873},{"krate":0,"index":884},{"krate":0,"index":894},{"krate":0,"index":898},{"krate":0,"index":908},{"krate":0,"index":915},{"krate":0,"index":920},{"krate":0,"index":930},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":941}],"decl_id":null,"docs":" Component storage types, implementations for component joins, etc.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\data.rs","byte_start":63100,"byte_end":63111,"line_start":121,"line_end":121,"column_start":10,"column_end":21},"name":"ReadStorage","qualname":"::storage::data::ReadStorage","value":"Storage<'a, T, Fetch<'a, MaskedStorage<T>>>","parent":null,"children":[],"decl_id":null,"docs":" A storage with read access.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\data.rs","byte_start":65869,"byte_end":65881,"line_start":212,"line_end":212,"column_start":10,"column_end":22},"name":"WriteStorage","qualname":"::storage::data::WriteStorage","value":"Storage<'a, T, FetchMut<'a, MaskedStorage<T>>>","parent":null,"children":[],"decl_id":null,"docs":" A storage with read and write access.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\drain.rs","byte_start":67487,"byte_end":67492,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Drain","qualname":"::storage::drain::Drain","value":"Drain { data }","parent":null,"children":[{"krate":0,"index":384}],"decl_id":null,"docs":" A draining storage wrapper which has a `Join` implementation\n that removes the components.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":384},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\drain.rs","byte_start":67548,"byte_end":67552,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"data","qualname":"::storage::drain::Drain::data","value":"&'a mut storage::MaskedStorage<T>","parent":{"krate":0,"index":381},"children":[],"decl_id":null,"docs":" The masked storage\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":70167,"byte_end":70172,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"entry","qualname":"<Storage>::entry","value":"fn <'a> (&'a mut self, e: Entity) -> Result<StorageEntry<'a, 'e, T, D>, WrongGeneration>","parent":null,"children":[],"decl_id":null,"docs":" Returns an entry to the component associated to the entity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":72965,"byte_end":72972,"line_start":121,"line_end":121,"column_start":12,"column_end":19},"name":"entries","qualname":"<Storage>::entries","value":"fn <'a> (&'a mut self) -> Entries<'a, 'e, T, D>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Join`-able structure that yields all indices, returning\n `Entry` for all elements","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":73150,"byte_end":73157,"line_start":128,"line_end":128,"column_start":12,"column_end":19},"name":"Entries","qualname":"::storage::entry::Entries","value":"","parent":null,"children":[],"decl_id":null,"docs":" `Join`-able structure that yields all indices, returning `Entry` for all\n elements\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":74475,"byte_end":74488,"line_start":170,"line_end":170,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::storage::entry::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429}],"decl_id":null,"docs":" An entry to a storage which has a component associated to the entity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":74769,"byte_end":74772,"line_start":181,"line_end":181,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the component associated with the entity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":75168,"byte_end":75175,"line_start":194,"line_end":194,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the component associated with the entity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":75492,"byte_end":75500,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"fn (self) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Converts the `OccupiedEntry` into a mutable reference bounded by\n the storage's lifetime.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":75776,"byte_end":75782,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"fn (&mut self, mut component: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value into the storage and returns the old one.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":75974,"byte_end":75980,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Removes the component from the storage and returns it.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":76153,"byte_end":76164,"line_start":222,"line_end":222,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::storage::entry::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451}],"decl_id":null,"docs":" An entry to a storage which does not have a component associated to the\n entity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":76419,"byte_end":76425,"line_start":233,"line_end":233,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"fn (self, component: T) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value into the storage.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":76973,"byte_end":76981,"line_start":247,"line_end":247,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::storage::entry::StorageEntry::Occupied","value":"StorageEntry::Occupied(OccupiedEntry<'a, 'b, T, D>)","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Entry variant that is returned if the entity has a component.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":77096,"byte_end":77102,"line_start":249,"line_end":249,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::storage::entry::StorageEntry::Vacant","value":"StorageEntry::Vacant(VacantEntry<'a, 'b, T, D>)","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Entry variant that is returned if the entity does not have a component.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":76858,"byte_end":76870,"line_start":245,"line_end":245,"column_start":10,"column_end":22},"name":"StorageEntry","qualname":"::storage::entry::StorageEntry","value":"StorageEntry::{Occupied, Vacant}","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":466}],"decl_id":null,"docs":" Entry to a storage for convenient filling of components or removal based on\n whether the entity has a component.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":77329,"byte_end":77338,"line_start":258,"line_end":258,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<StorageEntry>::or_insert","value":"fn (self, component: T) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Inserts a component if the entity does not have it already.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":77707,"byte_end":77721,"line_start":266,"line_end":266,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<StorageEntry>::or_insert_with","value":"fn <F> (self, default: F) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Inserts a component using a lazily called function that is only called\n when inserting the component. Ensures this entry has a value and if not,\n inserts one using the result of the passed closure. Returns a reference\n to the value afterwards.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\flagged.rs","byte_start":84355,"byte_end":84369,"line_start":167,"line_end":167,"column_start":12,"column_end":26},"name":"FlaggedStorage","qualname":"::storage::flagged::FlaggedStorage","value":"FlaggedStorage {  }","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497}],"decl_id":null,"docs":" Wrapper storage that tracks modifications, insertions, and removals of\n components through an `EventChannel`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":529},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\generic.rs","byte_start":86713,"byte_end":86717,"line_start":6,"line_end":6,"column_start":12,"column_end":16},"name":"Seal","qualname":"::storage::generic::Seal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\generic.rs","byte_start":86804,"byte_end":86822,"line_start":9,"line_end":9,"column_start":11,"column_end":29},"name":"GenericReadStorage","qualname":"::storage::generic::GenericReadStorage","value":"GenericReadStorage","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534}],"decl_id":null,"docs":" Provides generic read access to both `ReadStorage` and `WriteStorage`\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\generic.rs","byte_start":86876,"byte_end":86885,"line_start":11,"line_end":11,"column_start":10,"column_end":19},"name":"Component","qualname":"::storage::generic::GenericReadStorage::Component","value":"type Component: Component;","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" The component type of the storage\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\generic.rs","byte_start":86961,"byte_end":86964,"line_start":14,"line_end":14,"column_start":8,"column_end":11},"name":"get","qualname":"::storage::generic::GenericReadStorage::get","value":"fn (&self, entity: Entity) -> Option<&Self::Component>","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" Get immutable access to an `Entity`s component\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\generic.rs","byte_start":87068,"byte_end":87076,"line_start":17,"line_end":17,"column_start":8,"column_end":16},"name":"_private","qualname":"::storage::generic::GenericReadStorage::_private","value":"fn () -> Seal","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" Private function to seal the trait\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\generic.rs","byte_start":88289,"byte_end":88308,"line_start":82,"line_end":82,"column_start":11,"column_end":30},"name":"GenericWriteStorage","qualname":"::storage::generic::GenericWriteStorage","value":"GenericWriteStorage","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567}],"decl_id":null,"docs":" Provides generic write access to `WriteStorage`, both as a value and a\n mutable reference.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\generic.rs","byte_start":88362,"byte_end":88371,"line_start":84,"line_end":84,"column_start":10,"column_end":19},"name":"Component","qualname":"::storage::generic::GenericWriteStorage::Component","value":"type Component: Component;","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" The component type of the storage\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\generic.rs","byte_start":88445,"byte_end":88452,"line_start":87,"line_end":87,"column_start":8,"column_end":15},"name":"get_mut","qualname":"::storage::generic::GenericWriteStorage::get_mut","value":"fn (&mut self, entity: Entity) -> Option<&mut Self::Component>","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Get mutable access to an `Entity`s component\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\generic.rs","byte_start":88724,"byte_end":88742,"line_start":93,"line_end":93,"column_start":8,"column_end":26},"name":"get_mut_or_default","qualname":"::storage::generic::GenericWriteStorage::get_mut_or_default","value":"fn (&mut self, entity: Entity) -> Option<&mut Self::Component>","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Get mutable access to an `Entity`s component. If the component does not\n exist, it is automatically created using `Default::default()`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\generic.rs","byte_start":88897,"byte_end":88903,"line_start":98,"line_end":98,"column_start":8,"column_end":14},"name":"insert","qualname":"::storage::generic::GenericWriteStorage::insert","value":"fn (&mut self, entity: Entity, comp: Self::Component) -> InsertResult<Self::Component>","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Insert a component for an `Entity`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\generic.rs","byte_start":89041,"byte_end":89047,"line_start":101,"line_end":101,"column_start":8,"column_end":14},"name":"remove","qualname":"::storage::generic::GenericWriteStorage::remove","value":"fn (&mut self, entity: Entity) -> ()","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Remove the component for an `Entity`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\generic.rs","byte_start":89127,"byte_end":89135,"line_start":104,"line_end":104,"column_start":8,"column_end":16},"name":"_private","qualname":"::storage::generic::GenericWriteStorage::_private","value":"fn () -> Seal","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Private function to seal the trait\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":91608,"byte_end":91629,"line_start":24,"line_end":24,"column_start":10,"column_end":31},"name":"SequentialRestriction","qualname":"::storage::restrict::SequentialRestriction","value":"SequentialRestriction::{}","parent":null,"children":[],"decl_id":null,"docs":" Specifies that the `RestrictedStorage` cannot run in parallel.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":91804,"byte_end":91830,"line_start":29,"line_end":29,"column_start":10,"column_end":36},"name":"MutableParallelRestriction","qualname":"::storage::restrict::MutableParallelRestriction","value":"MutableParallelRestriction::{}","parent":null,"children":[],"decl_id":null,"docs":" Specifies that the `RestrictedStorage` can run in parallel mutably.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":91986,"byte_end":92014,"line_start":33,"line_end":33,"column_start":10,"column_end":38},"name":"ImmutableParallelRestriction","qualname":"::storage::restrict::ImmutableParallelRestriction","value":"ImmutableParallelRestriction::{}","parent":null,"children":[],"decl_id":null,"docs":" Specifies that the `RestrictedStorage` can run in parallel immutably.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":92099,"byte_end":92116,"line_start":36,"line_end":36,"column_start":11,"column_end":28},"name":"ImmutableAliasing","qualname":"::storage::restrict::ImmutableAliasing","value":"ImmutableAliasing: Sized","parent":null,"children":[],"decl_id":null,"docs":" Restrictions that are allowed to access `RestrictedStorage::get`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":618},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":93349,"byte_end":93366,"line_start":70,"line_end":70,"column_start":12,"column_end":29},"name":"RestrictedStorage","qualname":"::storage::restrict::RestrictedStorage","value":"RestrictedStorage {  }","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628}],"decl_id":null,"docs":" Similar to a `MaskedStorage` and a `Storage` combined, but restricts usage\n to only getting and modifying the components. That means it's not possible\n to modify the inner bitset so the iteration cannot be invalidated. In other\n words, no insertion or removal is allowed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":96272,"byte_end":96280,"line_start":172,"line_end":172,"column_start":12,"column_end":20},"name":"restrict","qualname":"<Storage>::restrict","value":"fn <'rf> (&'rf self) -> RestrictedStorage<'rf, 'st, T, &T::Storage, &BitSet,\n                  ImmutableParallelRestriction>","parent":null,"children":[],"decl_id":null,"docs":" Builds an immutable `RestrictedStorage` out of a `Storage`. Allows\n deferred unchecked access to the entity's component.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":96904,"byte_end":96916,"line_start":192,"line_end":192,"column_start":12,"column_end":24},"name":"restrict_mut","qualname":"<Storage>::restrict_mut","value":"fn <'rf> (&'rf mut self) -> RestrictedStorage<'rf, 'st, T, &mut T::Storage, &BitSet,\n                  SequentialRestriction>","parent":null,"children":[],"decl_id":null,"docs":" Builds a mutable `RestrictedStorage` out of a `Storage`. Allows\n restricted access to the inner components without allowing\n invalidating the bitset for iteration in `Join`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":97412,"byte_end":97428,"line_start":207,"line_end":207,"column_start":12,"column_end":28},"name":"par_restrict_mut","qualname":"<Storage>::par_restrict_mut","value":"fn <'rf> (&'rf mut self) -> RestrictedStorage<'rf, 'st, T, &mut T::Storage, &BitSet,\n                  MutableParallelRestriction>","parent":null,"children":[],"decl_id":null,"docs":" Builds a mutable, parallel `RestrictedStorage`,\n does not allow mutably getting other components\n aside from the current iteration.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":680},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":97907,"byte_end":97920,"line_start":222,"line_end":222,"column_start":12,"column_end":25},"name":"PairedStorage","qualname":"::storage::restrict::PairedStorage","value":"PairedStorage {  }","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691}],"decl_id":null,"docs":" Pairs a storage with an index, meaning that the index is guaranteed to exist\n as long as the `PairedStorage<C, S>` exists.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":98374,"byte_end":98387,"line_start":238,"line_end":238,"column_start":12,"column_end":25},"name":"get_unchecked","qualname":"<PairedStorage>::get_unchecked","value":"fn (&self) -> &C","parent":null,"children":[],"decl_id":null,"docs":" Gets the component related to the current entry without checking whether\n the storage has it or not.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":98752,"byte_end":98769,"line_start":251,"line_end":251,"column_start":12,"column_end":29},"name":"get_mut_unchecked","qualname":"<PairedStorage>::get_mut_unchecked","value":"fn (&mut self) -> &mut C","parent":null,"children":[],"decl_id":null,"docs":" Gets the component related to the current entry without checking whether\n the storage has it or not.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":99378,"byte_end":99381,"line_start":270,"line_end":270,"column_start":12,"column_end":15},"name":"get","qualname":"<PairedStorage>::get","value":"fn (&self, entity: Entity) -> Option<&C>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get the component related to the entity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":100129,"byte_end":100136,"line_start":292,"line_end":292,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PairedStorage>::get_mut","value":"fn (&mut self, entity: Entity) -> Option<&mut C>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get the component related to the entity mutably.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2196},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":100764,"byte_end":100776,"line_start":17,"line_end":17,"column_start":12,"column_end":24},"name":"BTreeStorage","qualname":"::storage::storages::BTreeStorage","value":"","parent":null,"children":[],"decl_id":null,"docs":" BTreeMap-based storage.\n","sig":null,"attributes":[{"value":"derivative(Default (bound = \"\"))","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":100718,"byte_end":100752,"line_start":16,"line_end":16,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2203},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":101563,"byte_end":101577,"line_start":51,"line_end":51,"column_start":12,"column_end":26},"name":"HashMapStorage","qualname":"::storage::storages::HashMapStorage","value":"","parent":null,"children":[],"decl_id":null,"docs":" `HashMap`-based storage. Best suited for rare components.","sig":null,"attributes":[{"value":"derivative(Default (bound = \"\"))","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":101517,"byte_end":101551,"line_start":50,"line_end":50,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2210},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":102502,"byte_end":102517,"line_start":88,"line_end":88,"column_start":12,"column_end":27},"name":"DenseVecStorage","qualname":"::storage::storages::DenseVecStorage","value":"DenseVecStorage {  }","parent":null,"children":[{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2214}],"decl_id":null,"docs":" Dense vector storage. Has a redirection 2-way table\n between entities and components, allowing to leave\n no gaps within the data.","sig":null,"attributes":[{"value":"derivative(Default (bound = \"\"))","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":102456,"byte_end":102490,"line_start":87,"line_end":87,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":104029,"byte_end":104040,"line_start":137,"line_end":137,"column_start":12,"column_end":23},"name":"NullStorage","qualname":"::storage::storages::NullStorage","value":"","parent":null,"children":[],"decl_id":null,"docs":" A null storage type, used for cases where the component\n doesn't contain any data and instead works as a simple flag.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2218},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":105044,"byte_end":105054,"line_start":184,"line_end":184,"column_start":12,"column_end":22},"name":"VecStorage","qualname":"::storage::storages::VecStorage","value":"","parent":null,"children":[],"decl_id":null,"docs":" Vector storage. Uses a simple `Vec`. Supposed to have maximum\n performance for the components mostly present in entities.\n","sig":null,"attributes":[{"value":"derivative(Default (bound = \"\"))","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":104998,"byte_end":105032,"line_start":183,"line_end":183,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":809},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\track.rs","byte_start":106490,"byte_end":106497,"line_start":13,"line_end":13,"column_start":11,"column_end":18},"name":"Tracked","qualname":"::storage::track::Tracked","value":"Tracked","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":811}],"decl_id":null,"docs":" `UnprotectedStorage`s that track modifications, insertions, and\n removals of components.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\track.rs","byte_start":106576,"byte_end":106583,"line_start":15,"line_end":15,"column_start":8,"column_end":15},"name":"channel","qualname":"::storage::track::Tracked::channel","value":"fn (&self) -> &EventChannel<ComponentEvent>","parent":{"krate":0,"index":809},"children":[],"decl_id":null,"docs":" Event channel tracking modified/inserted/removed components.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\track.rs","byte_start":106709,"byte_end":106720,"line_start":17,"line_end":17,"column_start":8,"column_end":19},"name":"channel_mut","qualname":"::storage::track::Tracked::channel_mut","value":"fn (&mut self) -> &mut EventChannel<ComponentEvent>","parent":{"krate":0,"index":809},"children":[],"decl_id":null,"docs":" Mutable event channel tracking modified/inserted/removed components.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2226},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\track.rs","byte_start":107486,"byte_end":107494,"line_start":36,"line_end":36,"column_start":5,"column_end":13},"name":"Inserted","qualname":"::storage::track::ComponentEvent::Inserted","value":"ComponentEvent::Inserted(Index)","parent":{"krate":0,"index":2225},"children":[],"decl_id":null,"docs":" An insertion event, note that a modification event will be triggered if\n the entity already had a component and had a new one inserted.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2229},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\track.rs","byte_start":107700,"byte_end":107708,"line_start":40,"line_end":40,"column_start":5,"column_end":13},"name":"Modified","qualname":"::storage::track::ComponentEvent::Modified","value":"ComponentEvent::Modified(Index)","parent":{"krate":0,"index":2225},"children":[],"decl_id":null,"docs":" A modification event, this will be sent any time a component is accessed\n mutably so be careful with joins over `&mut storages` as it could\n potentially flag all of them.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2232},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\track.rs","byte_start":107746,"byte_end":107753,"line_start":42,"line_end":42,"column_start":5,"column_end":12},"name":"Removed","qualname":"::storage::track::ComponentEvent::Removed","value":"ComponentEvent::Removed(Index)","parent":{"krate":0,"index":2225},"children":[],"decl_id":null,"docs":" A removal event.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2225},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\track.rs","byte_start":107314,"byte_end":107328,"line_start":33,"line_end":33,"column_start":10,"column_end":24},"name":"ComponentEvent","qualname":"::storage::track::ComponentEvent","value":"ComponentEvent::{Inserted, Modified, Removed}","parent":null,"children":[{"krate":0,"index":2226},{"krate":0,"index":2229},{"krate":0,"index":2232}],"decl_id":null,"docs":" Component storage events received from a `FlaggedStorage` or any storage\n that implements `Tracked`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\track.rs","byte_start":107965,"byte_end":107972,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"channel","qualname":"<Storage>::channel","value":"fn (&self) -> &EventChannel<ComponentEvent>","parent":null,"children":[],"decl_id":null,"docs":" Returns the event channel tracking modified components.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\track.rs","byte_start":108518,"byte_end":108529,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"channel_mut","qualname":"<Storage>::channel_mut","value":"fn (&mut self) -> &mut EventChannel<ComponentEvent>","parent":null,"children":[],"decl_id":null,"docs":" Returns the event channel for insertions/removals/modifications of this\n storage's components.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\track.rs","byte_start":108857,"byte_end":108872,"line_start":78,"line_end":78,"column_start":12,"column_end":27},"name":"register_reader","qualname":"<Storage>::register_reader","value":"fn (&mut self) -> ReaderId<ComponentEvent>","parent":null,"children":[],"decl_id":null,"docs":" Starts tracking component events. Note that this reader id should be\n used every frame, otherwise events will pile up and memory use by\n the event channel will grow waiting for this reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\track.rs","byte_start":109025,"byte_end":109029,"line_start":83,"line_end":83,"column_start":12,"column_end":16},"name":"flag","qualname":"<Storage>::flag","value":"fn (&mut self, event: ComponentEvent) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Flags an index with a `ComponentEvent`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":44310,"byte_end":44321,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"AntiStorage","qualname":"::storage::AntiStorage","value":"","parent":null,"children":[],"decl_id":null,"docs":" An inverted storage type, only useful to iterate entities\n that do not have a particular component type.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":45035,"byte_end":45045,"line_start":73,"line_end":73,"column_start":11,"column_end":21},"name":"AnyStorage","qualname":"::storage::AnyStorage","value":"AnyStorage","parent":null,"children":[{"krate":0,"index":840}],"decl_id":null,"docs":" A dynamic storage.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":45098,"byte_end":45102,"line_start":75,"line_end":75,"column_start":8,"column_end":12},"name":"drop","qualname":"::storage::AnyStorage::drop","value":"fn (&mut self, entities: &[Entity]) -> ()","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":" Drop components of given entities.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":848},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":46358,"byte_end":46373,"line_start":122,"line_end":122,"column_start":18,"column_end":33},"name":"DistinctStorage","qualname":"::storage::DistinctStorage","value":"DistinctStorage","parent":null,"children":[],"decl_id":null,"docs":" This is a marker trait which requires you to uphold the following guarantee:","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":849},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":46551,"byte_end":46563,"line_start":127,"line_end":127,"column_start":10,"column_end":22},"name":"InsertResult","qualname":"::storage::InsertResult","value":"Result<Option<T>, Error>","parent":null,"children":[],"decl_id":null,"docs":" The status of an `insert()`ion into a storage.\n If the insertion was successful then the Ok value will\n contain the component that was replaced (if any).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2245},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":46806,"byte_end":46819,"line_start":133,"line_end":133,"column_start":12,"column_end":25},"name":"MaskedStorage","qualname":"::storage::MaskedStorage","value":"MaskedStorage {  }","parent":null,"children":[{"krate":0,"index":2247},{"krate":0,"index":2248}],"decl_id":null,"docs":" The `UnprotectedStorage` together with the `BitSet` that knows\n about which elements are stored, and which are not.\n","sig":null,"attributes":[{"value":"derivative(Default (bound = \"T::Storage: Default\"))","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":46741,"byte_end":46794,"line_start":132,"line_end":132,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":47048,"byte_end":47051,"line_start":141,"line_end":141,"column_start":12,"column_end":15},"name":"new","qualname":"<MaskedStorage<T>>::new","value":"fn (inner: T::Storage) -> MaskedStorage<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `MaskedStorage`. This is called when you register\n a new component type within the world.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":47345,"byte_end":47350,"line_start":153,"line_end":153,"column_start":12,"column_end":17},"name":"clear","qualname":"<MaskedStorage<T>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear the contents of this storage.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":47587,"byte_end":47593,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"remove","qualname":"<MaskedStorage<T>>::remove","value":"fn (&mut self, id: Index) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove an element by a given index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":47890,"byte_end":47894,"line_start":172,"line_end":172,"column_start":12,"column_end":16},"name":"drop","qualname":"<MaskedStorage<T>>::drop","value":"fn (&mut self, id: Index) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Drop an element by a given index.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":861},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":48426,"byte_end":48433,"line_start":191,"line_end":191,"column_start":12,"column_end":19},"name":"Storage","qualname":"::storage::Storage","value":"Storage {  }","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867}],"decl_id":null,"docs":" A wrapper around the masked storage and the generations vector.\n Can be used for safe lookup of components, insertions and removes.\n This is what `World::read/write` fetches for the user.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":48698,"byte_end":48701,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"new","qualname":"<Storage>::new","value":"fn (entities: Fetch<'e, EntitiesRes>, data: D) -> Storage<'e, T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Storage` from a fetched allocator and a immutable or\n mutable `MaskedStorage`, named `data`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":49024,"byte_end":49043,"line_start":215,"line_end":215,"column_start":12,"column_end":31},"name":"unprotected_storage","qualname":"<Storage>::unprotected_storage","value":"fn (&self) -> &T::Storage","parent":null,"children":[],"decl_id":null,"docs":" Gets the wrapped storage.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":49370,"byte_end":49386,"line_start":223,"line_end":223,"column_start":12,"column_end":28},"name":"fetched_entities","qualname":"<Storage>::fetched_entities","value":"fn (&self) -> &EntitiesRes","parent":null,"children":[],"decl_id":null,"docs":" Returns the `EntitiesRes` resource fetched by this storage.\n **This does not have anything to do with the components inside.**\n You only want to use this when implementing additional methods\n for `Storage` via an extension trait.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":49513,"byte_end":49516,"line_start":228,"line_end":228,"column_start":12,"column_end":15},"name":"get","qualname":"<Storage>::get","value":"fn (&self, e: Entity) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to read the data associated with an `Entity`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":49989,"byte_end":49994,"line_start":240,"line_end":240,"column_start":12,"column_end":17},"name":"count","qualname":"<Storage>::count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the number of elements this `Storage` contains by counting the\n bits in the bit set. This operation will never be performed in\n constant time.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":50144,"byte_end":50152,"line_start":245,"line_end":245,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Storage>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this `Storage` is empty. This operation is very cheap.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":50322,"byte_end":50330,"line_start":251,"line_end":251,"column_start":12,"column_end":20},"name":"contains","qualname":"<Storage>::contains","value":"fn (&self, e: Entity) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the storage has a component for this entity, and that\n entity is alive.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":50597,"byte_end":50601,"line_start":257,"line_end":257,"column_start":12,"column_end":16},"name":"mask","qualname":"<Storage>::mask","value":"fn (&self) -> &BitSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the bitset of this storage which allows filtering\n by the component type without actually getting the component.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":51025,"byte_end":51048,"line_start":274,"line_end":274,"column_start":19,"column_end":42},"name":"unprotected_storage_mut","qualname":"<Storage>::unprotected_storage_mut","value":"fn (&mut self) -> &mut T::Storage","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable access to the wrapped storage.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":51190,"byte_end":51197,"line_start":279,"line_end":279,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Storage>::get_mut","value":"fn (&mut self, e: Entity) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to mutate the data associated with an `Entity`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":51858,"byte_end":51864,"line_start":294,"line_end":294,"column_start":12,"column_end":18},"name":"insert","qualname":"<Storage>::insert","value":"fn (&mut self, e: Entity, mut v: T) -> InsertResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Inserts new data for a given `Entity`.\n Returns the result of the operation as a `InsertResult<T>`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":52773,"byte_end":52779,"line_start":317,"line_end":317,"column_start":12,"column_end":18},"name":"remove","qualname":"<Storage>::remove","value":"fn (&mut self, e: Entity) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the data associated with an `Entity`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":52999,"byte_end":53004,"line_start":326,"line_end":326,"column_start":12,"column_end":17},"name":"clear","qualname":"<Storage>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the contents of the storage.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":53165,"byte_end":53170,"line_start":332,"line_end":332,"column_start":12,"column_end":17},"name":"drain","qualname":"<Storage>::drain","value":"fn (&mut self) -> Drain<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a draining storage wrapper which can be `.join`ed\n to get a draining iterator.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":935},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":55791,"byte_end":55801,"line_start":426,"line_end":426,"column_start":11,"column_end":21},"name":"TryDefault","qualname":"::storage::TryDefault","value":"TryDefault: Sized","parent":null,"children":[{"krate":0,"index":936},{"krate":0,"index":937}],"decl_id":null,"docs":" Tries to create a default value, returns an `Err` with the name of the\n storage and/or component if there's no default.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":55855,"byte_end":55866,"line_start":428,"line_end":428,"column_start":8,"column_end":19},"name":"try_default","qualname":"::storage::TryDefault::try_default","value":"fn () -> Result<Self, String>","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" Tries to create the default.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":55959,"byte_end":55973,"line_start":431,"line_end":431,"column_start":8,"column_end":22},"name":"unwrap_default","qualname":"::storage::TryDefault::unwrap_default","value":"fn () -> Self","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" Calls `try_default` and panics on an error case.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":941},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":56347,"byte_end":56365,"line_start":449,"line_end":449,"column_start":11,"column_end":29},"name":"UnprotectedStorage","qualname":"::storage::UnprotectedStorage","value":"UnprotectedStorage<T>: TryDefault","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949}],"decl_id":null,"docs":" Used by the framework to quickly join components.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":56659,"byte_end":56664,"line_start":457,"line_end":457,"column_start":15,"column_end":20},"name":"clean","qualname":"::storage::UnprotectedStorage::clean","value":"fn <B> (&mut self, has: B) -> ()","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" Clean the storage given a bitset with bits set for valid indices.\n Allows us to safely drop the storage.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":57188,"byte_end":57191,"line_start":472,"line_end":472,"column_start":15,"column_end":18},"name":"get","qualname":"::storage::UnprotectedStorage::get","value":"fn (&self, id: Index) -> &T","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" Tries reading the data associated with an `Index`.\n This is unsafe because the external set used\n to protect this storage is absent.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":57686,"byte_end":57693,"line_start":485,"line_end":485,"column_start":15,"column_end":22},"name":"get_mut","qualname":"::storage::UnprotectedStorage::get_mut","value":"fn (&mut self, id: Index) -> &mut T","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" Tries mutating the data associated with an `Index`.\n This is unsafe because the external set used\n to protect this storage is absent.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":58081,"byte_end":58087,"line_start":496,"line_end":496,"column_start":15,"column_end":21},"name":"insert","qualname":"::storage::UnprotectedStorage::insert","value":"fn (&mut self, id: Index, value: T) -> ()","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" Inserts new data for a given `Index`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":58327,"byte_end":58333,"line_start":504,"line_end":504,"column_start":15,"column_end":21},"name":"remove","qualname":"::storage::UnprotectedStorage::remove","value":"fn (&mut self, id: Index) -> T","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" Removes the data associated with an `Index`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":58675,"byte_end":58679,"line_start":514,"line_end":514,"column_start":15,"column_end":19},"name":"drop","qualname":"::storage::UnprotectedStorage::drop","value":"fn (&mut self, id: Index) -> ()","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" Drops the data associated with an `Index`.\n This is simply more efficient than `remove` and can be used if the data\n is no longer needed.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":950},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"world","qualname":"::world","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":975},{"krate":0,"index":1080},{"krate":0,"index":1131},{"krate":0,"index":1218},{"krate":0,"index":1222},{"krate":0,"index":1226},{"krate":0,"index":1230},{"krate":0,"index":1235},{"krate":0,"index":1240}],"decl_id":null,"docs":" Entities, resources, components, and general world management.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":973},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\comp.rs","byte_start":115419,"byte_end":115428,"line_start":63,"line_end":63,"column_start":11,"column_end":20},"name":"Component","qualname":"::world::comp::Component","value":"Component: Any + Sized","parent":null,"children":[{"krate":0,"index":974}],"decl_id":null,"docs":" Abstract component type.\n Doesn't have to be Copy or even Clone.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":974},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\comp.rs","byte_start":115505,"byte_end":115512,"line_start":65,"line_end":65,"column_start":10,"column_end":17},"name":"Storage","qualname":"::world::comp::Component::Storage","value":"type Storage: UnprotectedStorage<Self> + Any + Send + Sync;","parent":{"krate":0,"index":973},"children":[],"decl_id":null,"docs":" Associated storage type for this component.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":993},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":115921,"byte_end":115926,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Index","qualname":"::world::entity::Index","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" An index is basically the id of an `Entity`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":116877,"byte_end":116885,"line_start":47,"line_end":47,"column_start":10,"column_end":18},"name":"Entities","qualname":"::world::entity::Entities","value":"Read<'a, EntitiesRes>","parent":null,"children":[],"decl_id":null,"docs":" A wrapper for a read `Entities` resource.\n Note that this is just `Read<Entities>`, so\n you can easily use it in your system:","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":121780,"byte_end":121796,"line_start":211,"line_end":211,"column_start":12,"column_end":28},"name":"CreateIterAtomic","qualname":"::world::entity::CreateIterAtomic","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator for entity creation.\n Please note that you have to consume\n it because iterators are lazy.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2263},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":122098,"byte_end":122104,"line_start":223,"line_end":223,"column_start":12,"column_end":18},"name":"Entity","qualname":"::world::entity::Entity","value":"","parent":null,"children":[],"decl_id":null,"docs":" `Entity` type, as seen by the user.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":122369,"byte_end":122371,"line_start":234,"line_end":234,"column_start":12,"column_end":14},"name":"id","qualname":"<Entity>::id","value":"fn (self) -> Index","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the `Entity`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":122348,"byte_end":122357,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":122486,"byte_end":122489,"line_start":240,"line_end":240,"column_start":12,"column_end":15},"name":"gen","qualname":"<Entity>::gen","value":"fn (self) -> Generation","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Generation` of the `Entity`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":122465,"byte_end":122474,"line_start":239,"line_end":239,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2292},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":122972,"byte_end":122983,"line_start":256,"line_end":256,"column_start":12,"column_end":23},"name":"EntitiesRes","qualname":"::world::entity::EntitiesRes","value":"EntitiesRes {  }","parent":null,"children":[{"krate":0,"index":2293}],"decl_id":null,"docs":" The entities of this ECS. This is a resource, stored in the `World`.\n If you just want to access it in your system, you can also use the\n `Entities` type def.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":123444,"byte_end":123450,"line_start":271,"line_end":271,"column_start":12,"column_end":18},"name":"create","qualname":"<EntitiesRes>::create","value":"fn (&self) -> Entity","parent":null,"children":[],"decl_id":null,"docs":" Creates a new entity atomically.\n This will be persistent as soon\n as you call `World::maintain`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":123679,"byte_end":123690,"line_start":279,"line_end":279,"column_start":12,"column_end":23},"name":"create_iter","qualname":"<EntitiesRes>::create_iter","value":"fn (&self) -> CreateIterAtomic","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator which creates\n new entities atomically.\n They will be persistent as soon\n as you call `World::maintain`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":123982,"byte_end":123994,"line_start":287,"line_end":287,"column_start":12,"column_end":24},"name":"build_entity","qualname":"<EntitiesRes>::build_entity","value":"fn (&self) -> EntityResBuilder","parent":null,"children":[],"decl_id":null,"docs":" Similar to the `create` method above this\n creates an entity atomically, and then returns a\n builder which can be used to insert components into\n various storages if available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":124324,"byte_end":124330,"line_start":299,"line_end":299,"column_start":12,"column_end":18},"name":"delete","qualname":"<EntitiesRes>::delete","value":"fn (&self, e: Entity) -> Result<(), WrongGeneration>","parent":null,"children":[],"decl_id":null,"docs":" Deletes an entity atomically.\n The associated components will be\n deleted as soon as you call `World::maintain`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":124561,"byte_end":124567,"line_start":305,"line_end":305,"column_start":12,"column_end":18},"name":"entity","qualname":"<EntitiesRes>::entity","value":"fn (&self, id: Index) -> Entity","parent":null,"children":[],"decl_id":null,"docs":" Returns an entity with a given `id`. There's no guarantee for validity,\n meaning the entity could be not alive.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":124717,"byte_end":124725,"line_start":311,"line_end":311,"column_start":12,"column_end":20},"name":"is_alive","qualname":"<EntitiesRes>::is_alive","value":"fn (&self, e: Entity) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the specified entity is alive.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":124696,"byte_end":124705,"line_start":310,"line_end":310,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":125644,"byte_end":125660,"line_start":341,"line_end":341,"column_start":12,"column_end":28},"name":"EntityResBuilder","qualname":"::world::entity::EntityResBuilder","value":"EntityResBuilder { entity, entities }","parent":null,"children":[{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046}],"decl_id":null,"docs":" An entity builder from `EntitiesRes`.  Allows building an entity with its\n components if you have mutable access to the component storages.\n","sig":null,"attributes":[{"value":"must_use = \"Please call .build() on this to finish building it.\"","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":125565,"byte_end":125632,"line_start":340,"line_end":340,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":1044},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":125706,"byte_end":125712,"line_start":343,"line_end":343,"column_start":9,"column_end":15},"name":"entity","qualname":"::world::entity::EntityResBuilder::entity","value":"world::entity::Entity","parent":{"krate":0,"index":1042},"children":[],"decl_id":null,"docs":" The entity being built\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1045},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":125860,"byte_end":125868,"line_start":346,"line_end":346,"column_start":9,"column_end":17},"name":"entities","qualname":"::world::entity::EntityResBuilder::entities","value":"&'a world::entity::EntitiesRes","parent":{"krate":0,"index":1042},"children":[],"decl_id":null,"docs":" The active borrow to `EntitiesRes`, used to delete the entity if the\n builder is dropped without called `build()`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":126013,"byte_end":126017,"line_start":352,"line_end":352,"column_start":12,"column_end":16},"name":"with","qualname":"<EntityResBuilder>::with","value":"fn <T> (self, c: T, storage: &mut WriteStorage<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Appends a component and associates it with the entity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":126219,"byte_end":126224,"line_start":358,"line_end":358,"column_start":12,"column_end":17},"name":"build","qualname":"<EntityResBuilder>::build","value":"fn (mut self) -> Entity","parent":null,"children":[],"decl_id":null,"docs":" Finishes the building and returns the entity.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2298},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":126723,"byte_end":126733,"line_start":376,"line_end":376,"column_start":12,"column_end":22},"name":"Generation","qualname":"::world::entity::Generation","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index generation. When a new entity is placed at an old index,\n it bumps the `Generation` by 1. This allows to avoid using components\n from the entities that were deleted.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":127282,"byte_end":127284,"line_start":397,"line_end":397,"column_start":12,"column_end":14},"name":"id","qualname":"<Generation>::id","value":"fn (self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the id of the generation.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":127261,"byte_end":127270,"line_start":396,"line_end":396,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":127420,"byte_end":127428,"line_start":403,"line_end":403,"column_start":12,"column_end":20},"name":"is_alive","qualname":"<Generation>::is_alive","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if entities of this `Generation` are alive.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":127399,"byte_end":127408,"line_start":402,"line_end":402,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","byte_start":132434,"byte_end":132445,"line_start":19,"line_end":19,"column_start":12,"column_end":23},"name":"LazyBuilder","qualname":"::world::lazy::LazyBuilder","value":"LazyBuilder { entity, lazy }","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096}],"decl_id":null,"docs":" Like `EntityBuilder`, but inserts the component\n lazily, meaning on `maintain`.\n If you need those components to exist immediately,\n you have to insert them into the storages yourself.\n","sig":null,"attributes":[{"value":"must_use = \"Please call .build() on this to finish building it.\"","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","byte_start":132355,"byte_end":132422,"line_start":18,"line_end":18,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":1095},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","byte_start":132516,"byte_end":132522,"line_start":21,"line_end":21,"column_start":9,"column_end":15},"name":"entity","qualname":"::world::lazy::LazyBuilder::entity","value":"world::entity::Entity","parent":{"krate":0,"index":1093},"children":[],"decl_id":null,"docs":" The entity that we're inserting components for.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1096},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","byte_start":132575,"byte_end":132579,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"name":"lazy","qualname":"::world::lazy::LazyBuilder::lazy","value":"&'a world::lazy::LazyUpdate","parent":{"krate":0,"index":1093},"children":[],"decl_id":null,"docs":" The lazy update reference.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2343},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","byte_start":134435,"byte_end":134445,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"LazyUpdate","qualname":"::world::lazy::LazyUpdate","value":"LazyUpdate {  }","parent":null,"children":[{"krate":0,"index":2344}],"decl_id":null,"docs":" Lazy updates can be used for world updates\n that need to borrow a lot of resources\n and as such should better be done at the end.\n They work lazily in the sense that they are\n dispatched when calling `world.maintain()`.","sig":null,"attributes":[{"value":"derivative(Default)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","byte_start":134401,"byte_end":134423,"line_start":84,"line_end":84,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","byte_start":135270,"byte_end":135283,"line_start":111,"line_end":111,"column_start":12,"column_end":25},"name":"create_entity","qualname":"<LazyUpdate>::create_entity","value":"fn (&self, ent: &EntitiesRes) -> LazyBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LazyBuilder` which inserts components\n using `LazyUpdate`. This means that the components won't\n be available immediately, but only after a `maintain`\n on `World` is performed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","byte_start":136037,"byte_end":136043,"line_start":141,"line_end":141,"column_start":12,"column_end":18},"name":"insert","qualname":"<LazyUpdate>::insert","value":"fn <C> (&self, e: Entity, c: C) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Lazily inserts a component for an entity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","byte_start":137098,"byte_end":137108,"line_start":179,"line_end":179,"column_start":12,"column_end":22},"name":"insert_all","qualname":"<LazyUpdate>::insert_all","value":"fn <C, I> (&self, iter: I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Lazily inserts components for entities.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","byte_start":138210,"byte_end":138216,"line_start":219,"line_end":219,"column_start":12,"column_end":18},"name":"remove","qualname":"<LazyUpdate>::remove","value":"fn <C> (&self, e: Entity) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Lazily removes a component.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","byte_start":139257,"byte_end":139261,"line_start":258,"line_end":258,"column_start":12,"column_end":16},"name":"exec","qualname":"<LazyUpdate>::exec","value":"fn <F> (&self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Lazily executes a closure with world access.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","byte_start":140203,"byte_end":140211,"line_start":294,"line_end":294,"column_start":12,"column_end":20},"name":"exec_mut","qualname":"<LazyUpdate>::exec_mut","value":"fn <F> (&self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Lazily executes a closure with mutable world access.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1156},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":144322,"byte_end":144330,"line_start":102,"line_end":102,"column_start":11,"column_end":19},"name":"WorldExt","qualname":"::world::world_ext::WorldExt","value":"WorldExt","parent":null,"children":[{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1160},{"krate":0,"index":1163},{"krate":0,"index":1165},{"krate":0,"index":1167},{"krate":0,"index":1169},{"krate":0,"index":1171},{"krate":0,"index":1173},{"krate":0,"index":1175},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187}],"decl_id":null,"docs":" This trait provides some extension methods to make working with shred's\n [World] easier.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":144381,"byte_end":144384,"line_start":104,"line_end":104,"column_start":8,"column_end":11},"name":"new","qualname":"::world::world_ext::WorldExt::new","value":"fn () -> Self","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Constructs a new World instance.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":145021,"byte_end":145029,"line_start":131,"line_end":131,"column_start":8,"column_end":16},"name":"register","qualname":"::world::world_ext::WorldExt::register","value":"fn <T> (&mut self) -> ()","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Registers a new component, adding the component storage.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":145228,"byte_end":145249,"line_start":138,"line_end":138,"column_start":8,"column_end":29},"name":"register_with_storage","qualname":"::world::world_ext::WorldExt::register_with_storage","value":"fn <F, T> (&mut self, storage: F) -> ()","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Registers a new component with a given storage.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":145855,"byte_end":145867,"line_start":161,"line_end":161,"column_start":8,"column_end":20},"name":"add_resource","qualname":"::world::world_ext::WorldExt::add_resource","value":"fn <T> (&mut self, res: T) -> ()","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Adds a resource to the world.","sig":null,"attributes":[{"value":"deprecated(since = \"0.15.0\", note = \"use `World::insert` instead\")","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":145778,"byte_end":145847,"line_start":160,"line_end":160,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":146099,"byte_end":146113,"line_start":169,"line_end":169,"column_start":8,"column_end":22},"name":"read_component","qualname":"::world::world_ext::WorldExt::read_component","value":"fn <T> (&self) -> ReadStorage<T>","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Fetches a component storage for reading.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":146343,"byte_end":146358,"line_start":177,"line_end":177,"column_start":8,"column_end":23},"name":"write_component","qualname":"::world::world_ext::WorldExt::write_component","value":"fn <T> (&self) -> WriteStorage<T>","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Fetches a component storage for writing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":146598,"byte_end":146610,"line_start":185,"line_end":185,"column_start":8,"column_end":20},"name":"read_storage","qualname":"::world::world_ext::WorldExt::read_storage","value":"fn <T> (&self) -> ReadStorage<T>","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Fetches a component storage for reading.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":146877,"byte_end":146890,"line_start":195,"line_end":195,"column_start":8,"column_end":21},"name":"write_storage","qualname":"::world::world_ext::WorldExt::write_storage","value":"fn <T> (&self) -> WriteStorage<T>","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Fetches a component storage for writing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":147153,"byte_end":147166,"line_start":205,"line_end":205,"column_start":8,"column_end":21},"name":"read_resource","qualname":"::world::world_ext::WorldExt::read_resource","value":"fn <T> (&self) -> Fetch<T>","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Fetches a resource for reading.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":147374,"byte_end":147388,"line_start":213,"line_end":213,"column_start":8,"column_end":22},"name":"write_resource","qualname":"::world::world_ext::WorldExt::write_resource","value":"fn <T> (&self) -> FetchMut<T>","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Fetches a resource for writing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":147666,"byte_end":147674,"line_start":220,"line_end":220,"column_start":8,"column_end":16},"name":"entities","qualname":"::world::world_ext::WorldExt::entities","value":"fn (&self) -> Read<EntitiesRes>","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Convenience method for fetching entities.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":147762,"byte_end":147774,"line_start":223,"line_end":223,"column_start":8,"column_end":20},"name":"entities_mut","qualname":"::world::world_ext::WorldExt::entities_mut","value":"fn (&self) -> FetchMut<EntitiesRes>","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Convenience method for fetching entities.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":148154,"byte_end":148167,"line_start":231,"line_end":231,"column_start":8,"column_end":21},"name":"create_entity","qualname":"::world::world_ext::WorldExt::create_entity","value":"fn (&mut self) -> EntityBuilder","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Allows building an entity with its components.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1180},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":148528,"byte_end":148551,"line_start":240,"line_end":240,"column_start":8,"column_end":31},"name":"create_entity_unchecked","qualname":"::world::world_ext::WorldExt::create_entity_unchecked","value":"fn (&self) -> EntityBuilder","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Allows building an entity with its components.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":148975,"byte_end":148986,"line_start":256,"line_end":256,"column_start":8,"column_end":19},"name":"create_iter","qualname":"::world::world_ext::WorldExt::create_iter","value":"fn (&mut self) -> CreateIter","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Returns an iterator for entity creation.\n This makes it easy to create a whole collection\n of them.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":149067,"byte_end":149080,"line_start":259,"line_end":259,"column_start":8,"column_end":21},"name":"delete_entity","qualname":"::world::world_ext::WorldExt::delete_entity","value":"fn (&mut self, entity: Entity) -> Result<(), WrongGeneration>","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Deletes an entity and its components.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":149209,"byte_end":149224,"line_start":262,"line_end":262,"column_start":8,"column_end":23},"name":"delete_entities","qualname":"::world::world_ext::WorldExt::delete_entities","value":"fn (&mut self, delete: &[Entity]) -> Result<(), WrongGeneration>","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Deletes the specified entities and their components.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":149346,"byte_end":149356,"line_start":265,"line_end":265,"column_start":8,"column_end":18},"name":"delete_all","qualname":"::world::world_ext::WorldExt::delete_all","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Deletes all entities and their components.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":149949,"byte_end":149957,"line_start":281,"line_end":281,"column_start":8,"column_end":16},"name":"is_alive","qualname":"::world::world_ext::WorldExt::is_alive","value":"fn (&self, e: Entity) -> bool","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Checks if an entity is alive.\n Please note that atomically created or deleted entities\n (the ones created / deleted with the `Entities` struct)\n are not handled by this method. Therefore, you\n should have called `maintain()` before using this\n method.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":150242,"byte_end":150250,"line_start":288,"line_end":288,"column_start":8,"column_end":16},"name":"maintain","qualname":"::world::world_ext::WorldExt::maintain","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Merges in the appendix, recording all the dynamically created\n and deleted entities into the persistent generations vector.\n Also removes all the abandoned components.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":150290,"byte_end":150307,"line_start":291,"line_end":291,"column_start":8,"column_end":25},"name":"delete_components","qualname":"::world::world_ext::WorldExt::delete_components","value":"fn (&mut self, delete: &[Entity]) -> ()","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1218},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":110051,"byte_end":110061,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"CreateIter","qualname":"::world::CreateIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator for entity creation.\n Please note that you have to consume\n it because iterators are lazy.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1226},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":110457,"byte_end":110464,"line_start":43,"line_end":43,"column_start":11,"column_end":18},"name":"Builder","qualname":"::world::Builder","value":"Builder","parent":null,"children":[{"krate":0,"index":1227},{"krate":0,"index":1229}],"decl_id":null,"docs":" A common trait for `EntityBuilder` and `LazyBuilder`, allowing either to be\n used. Entity is definitely alive, but the components may or may not exist\n before a call to `World::maintain`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1227},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":110776,"byte_end":110780,"line_start":53,"line_end":53,"column_start":8,"column_end":12},"name":"with","qualname":"::world::Builder::with","value":"fn <C> (self, c: C) -> Self","parent":{"krate":0,"index":1226},"children":[],"decl_id":null,"docs":" Appends a component and associates it with the entity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":110892,"byte_end":110897,"line_start":56,"line_end":56,"column_start":8,"column_end":13},"name":"build","qualname":"::world::Builder::build","value":"fn (self) -> Entity","parent":{"krate":0,"index":1226},"children":[],"decl_id":null,"docs":" Finishes the building and returns the entity.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":112622,"byte_end":112635,"line_start":129,"line_end":129,"column_start":12,"column_end":25},"name":"EntityBuilder","qualname":"::world::EntityBuilder","value":"EntityBuilder { entity, world }","parent":null,"children":[{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234}],"decl_id":null,"docs":" The entity builder, allowing to\n build an entity together with its components.","sig":null,"attributes":[{"value":"must_use = \"Please call .build() on this to finish building it.\"","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":112543,"byte_end":112610,"line_start":128,"line_end":128,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":112726,"byte_end":112732,"line_start":131,"line_end":131,"column_start":9,"column_end":15},"name":"entity","qualname":"::world::EntityBuilder::entity","value":"world::entity::Entity","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" The (already created) entity for which components will be inserted.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":112811,"byte_end":112816,"line_start":133,"line_end":133,"column_start":9,"column_end":14},"name":"world","qualname":"::world::EntityBuilder::world","value":"&'a shred::World","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" A reference to the `World` for component insertions.\n","sig":null,"attributes":[]}],"impls":[{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\changeset.rs","byte_start":9830,"byte_end":9839,"line_start":47,"line_end":47,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\changeset.rs","byte_start":10922,"byte_end":10931,"line_start":85,"line_end":85,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\changeset.rs","byte_start":11221,"byte_end":11230,"line_start":98,"line_end":98,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\changeset.rs","byte_start":12712,"byte_end":12721,"line_start":148,"line_end":148,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":14829,"byte_end":14837,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":15040,"byte_end":15048,"line_start":27,"line_end":27,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":15151,"byte_end":15159,"line_start":33,"line_end":33,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":15273,"byte_end":15281,"line_start":39,"line_end":39,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":15402,"byte_end":15410,"line_start":45,"line_end":45,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":15967,"byte_end":15972,"line_start":69,"line_end":69,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":16295,"byte_end":16300,"line_start":80,"line_end":80,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":16396,"byte_end":16401,"line_start":86,"line_end":86,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":16507,"byte_end":16512,"line_start":92,"line_end":92,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":17245,"byte_end":17260,"line_start":121,"line_end":121,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":17524,"byte_end":17539,"line_start":131,"line_end":131,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":17911,"byte_end":17918,"line_start":144,"line_end":144,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":18023,"byte_end":18030,"line_start":150,"line_end":150,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\par_join.rs","byte_start":39345,"byte_end":39356,"line_start":43,"line_end":43,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\par_join.rs","byte_start":40258,"byte_end":40270,"line_start":78,"line_end":78,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\par_join.rs","byte_start":41138,"byte_end":41150,"line_start":98,"line_end":98,"column_start":29,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\par_join.rs","byte_start":41298,"byte_end":41310,"line_start":107,"line_end":107,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":26827,"byte_end":26836,"line_start":262,"line_end":262,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":27913,"byte_end":27921,"line_start":301,"line_end":301,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":28502,"byte_end":28510,"line_start":320,"line_end":320,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":31203,"byte_end":31211,"line_start":396,"line_end":396,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\data.rs","byte_start":63198,"byte_end":63209,"line_start":123,"line_end":123,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\data.rs","byte_start":65971,"byte_end":65983,"line_start":214,"line_end":214,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\drain.rs","byte_start":67604,"byte_end":67609,"line_start":16,"line_end":16,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":69295,"byte_end":69302,"line_start":6,"line_end":6,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":73253,"byte_end":73260,"line_start":130,"line_end":130,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":74594,"byte_end":74607,"line_start":175,"line_end":175,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":74982,"byte_end":74995,"line_start":188,"line_end":188,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":76270,"byte_end":76281,"line_start":227,"line_end":227,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":77153,"byte_end":77165,"line_start":252,"line_end":252,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\flagged.rs","byte_start":84573,"byte_end":84587,"line_start":175,"line_end":175,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\flagged.rs","byte_start":84843,"byte_end":84857,"line_start":187,"line_end":187,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\flagged.rs","byte_start":85261,"byte_end":85275,"line_start":202,"line_end":202,"column_start":72,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\flagged.rs","byte_start":86124,"byte_end":86138,"line_start":236,"line_end":236,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\generic.rs","byte_start":87126,"byte_end":87137,"line_start":20,"line_end":20,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\generic.rs","byte_start":87669,"byte_end":87681,"line_start":50,"line_end":50,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\generic.rs","byte_start":89186,"byte_end":89198,"line_start":107,"line_end":107,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":92154,"byte_end":92175,"line_start":37,"line_end":37,"column_start":28,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":92206,"byte_end":92234,"line_start":38,"line_end":38,"column_start":28,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":95862,"byte_end":95869,"line_start":161,"line_end":161,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":96608,"byte_end":96615,"line_start":184,"line_end":184,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":98128,"byte_end":98141,"line_start":230,"line_end":230,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":98503,"byte_end":98516,"line_start":243,"line_end":243,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":98901,"byte_end":98914,"line_start":256,"line_end":256,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":99656,"byte_end":99669,"line_start":279,"line_end":279,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":100836,"byte_end":100848,"line_start":19,"line_end":19,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":101358,"byte_end":101370,"line_start":44,"line_end":44,"column_start":36,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":101636,"byte_end":101650,"line_start":53,"line_end":53,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":102159,"byte_end":102173,"line_start":78,"line_end":78,"column_start":36,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":102630,"byte_end":102645,"line_start":94,"line_end":94,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":755},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":103870,"byte_end":103885,"line_start":133,"line_end":133,"column_start":36,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":104083,"byte_end":104094,"line_start":139,"line_end":139,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":769},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":104516,"byte_end":104527,"line_start":164,"line_end":164,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":104828,"byte_end":104839,"line_start":178,"line_end":178,"column_start":36,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":105102,"byte_end":105112,"line_start":186,"line_end":186,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":106191,"byte_end":106201,"line_start":229,"line_end":229,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\track.rs","byte_start":107780,"byte_end":107787,"line_start":45,"line_end":45,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\track.rs","byte_start":108284,"byte_end":108291,"line_start":63,"line_end":63,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":44362,"byte_end":44373,"line_start":51,"line_end":51,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":44824,"byte_end":44835,"line_start":66,"line_end":66,"column_start":37,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":44982,"byte_end":44993,"line_start":70,"line_end":70,"column_start":29,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":45353,"byte_end":45366,"line_start":91,"line_end":91,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":46899,"byte_end":46912,"line_start":138,"line_end":138,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":48142,"byte_end":48155,"line_start":182,"line_end":182,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":48544,"byte_end":48551,"line_start":197,"line_end":197,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":48894,"byte_end":48901,"line_start":209,"line_end":209,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":50670,"byte_end":50677,"line_start":262,"line_end":262,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":53446,"byte_end":53453,"line_start":341,"line_end":341,"column_start":54,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":56176,"byte_end":56177,"line_start":439,"line_end":439,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":117198,"byte_end":117207,"line_start":61,"line_end":61,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1010},{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":121840,"byte_end":121856,"line_start":213,"line_end":213,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1020},{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":122131,"byte_end":122137,"line_start":225,"line_end":225,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":123027,"byte_end":123038,"line_start":260,"line_end":260,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":125916,"byte_end":125932,"line_start":350,"line_end":350,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1049},{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":126321,"byte_end":126337,"line_start":364,"line_end":364,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":126815,"byte_end":126825,"line_start":379,"line_end":379,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":126964,"byte_end":126974,"line_start":385,"line_end":385,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":127896,"byte_end":127914,"line_start":422,"line_end":422,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1063},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":129163,"byte_end":129174,"line_start":475,"line_end":475,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1072},{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":129569,"byte_end":129580,"line_start":492,"line_end":492,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","byte_start":132075,"byte_end":132080,"line_start":8,"line_end":8,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","byte_start":132621,"byte_end":132632,"line_start":26,"line_end":26,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","byte_start":133663,"byte_end":133664,"line_start":61,"line_end":61,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","byte_start":134574,"byte_end":134584,"line_start":90,"line_end":90,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1113},{"krate":0,"index":1117},{"krate":0,"index":1120},{"krate":0,"index":1123},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","byte_start":140959,"byte_end":140969,"line_start":324,"line_end":324,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":150360,"byte_end":150365,"line_start":294,"line_end":294,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1192},{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":1200},{"krate":0,"index":1202},{"krate":0,"index":1204},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":110117,"byte_end":110127,"line_start":32,"line_end":32,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":112870,"byte_end":112883,"line_start":137,"line_end":137,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1237},{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":113655,"byte_end":113668,"line_start":163,"line_end":163,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":5863,"byte_end":5872,"line_start":201,"line_end":201,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":29}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":5882,"byte_end":5887,"line_start":202,"line_end":202,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":74}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":5897,"byte_end":5901,"line_start":203,"line_end":203,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":116}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":5911,"byte_end":5918,"line_start":204,"line_end":204,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":235}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":5928,"byte_end":5935,"line_start":205,"line_end":205,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":278}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\lib.rs","byte_start":5945,"byte_end":5950,"line_start":206,"line_end":206,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":950}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\changeset.rs","byte_start":9830,"byte_end":9839,"line_start":47,"line_end":47,"column_start":9,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\changeset.rs","byte_start":10922,"byte_end":10931,"line_start":85,"line_end":85,"column_start":39,"column_end":48},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1410},"to":{"krate":2,"index":3804}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\changeset.rs","byte_start":11221,"byte_end":11230,"line_start":98,"line_end":98,"column_start":33,"column_end":42},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1410},"to":{"krate":2,"index":3817}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\changeset.rs","byte_start":12712,"byte_end":12721,"line_start":148,"line_end":148,"column_start":18,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1410},"to":{"krate":0,"index":195}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":14829,"byte_end":14837,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":85},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":15040,"byte_end":15048,"line_start":27,"line_end":27,"column_start":30,"column_end":38},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":2212}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":15151,"byte_end":15159,"line_start":33,"line_end":33,"column_start":16,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":15273,"byte_end":15281,"line_start":39,"line_end":39,"column_start":18,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":7491}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":15402,"byte_end":15410,"line_start":45,"line_end":45,"column_start":19,"column_end":27},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":85},"to":{"krate":1,"index":1623}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":15967,"byte_end":15972,"line_start":69,"line_end":69,"column_start":18,"column_end":23},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1417},"to":{"krate":2,"index":7491}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":16295,"byte_end":16300,"line_start":80,"line_end":80,"column_start":24,"column_end":29},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1417},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":16396,"byte_end":16401,"line_start":86,"line_end":86,"column_start":32,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1417},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":16507,"byte_end":16512,"line_start":92,"line_end":92,"column_start":19,"column_end":24},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1417},"to":{"krate":1,"index":1623}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":17245,"byte_end":17260,"line_start":121,"line_end":121,"column_start":18,"column_end":33},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1428},"to":{"krate":2,"index":7491}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":17524,"byte_end":17539,"line_start":131,"line_end":131,"column_start":19,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1428},"to":{"krate":1,"index":1623}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":17911,"byte_end":17918,"line_start":144,"line_end":144,"column_start":18,"column_end":25},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1439},"to":{"krate":2,"index":7491}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\error.rs","byte_start":18023,"byte_end":18030,"line_start":150,"line_end":150,"column_start":19,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1439},"to":{"krate":1,"index":1623}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\par_join.rs","byte_start":38769,"byte_end":38773,"line_start":23,"line_end":23,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":195},"to":{"krate":0,"index":152}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\par_join.rs","byte_start":39345,"byte_end":39356,"line_start":43,"line_end":43,"column_start":30,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":154},"to":{"krate":16,"index":3658}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\par_join.rs","byte_start":40258,"byte_end":40270,"line_start":78,"line_end":78,"column_start":13,"column_end":25},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\par_join.rs","byte_start":41138,"byte_end":41150,"line_start":98,"line_end":98,"column_start":29,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":163},"to":{"krate":2,"index":1534}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\par_join.rs","byte_start":41298,"byte_end":41310,"line_start":107,"line_end":107,"column_start":35,"column_end":47},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":163},"to":{"krate":16,"index":1133}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":26827,"byte_end":26836,"line_start":262,"line_end":262,"column_start":18,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":204},"to":{"krate":0,"index":195}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":27913,"byte_end":27921,"line_start":301,"line_end":301,"column_start":15,"column_end":23},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":28502,"byte_end":28510,"line_start":320,"line_end":320,"column_start":15,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\join\\mod.rs","byte_start":31203,"byte_end":31211,"line_start":396,"line_end":396,"column_start":39,"column_end":47},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\data.rs","byte_start":63198,"byte_end":63209,"line_start":123,"line_end":123,"column_start":32,"column_end":43},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":351},"to":{"krate":28,"index":642}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\data.rs","byte_start":65971,"byte_end":65983,"line_start":214,"line_end":214,"column_start":32,"column_end":44},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":362},"to":{"krate":28,"index":642}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\drain.rs","byte_start":67604,"byte_end":67609,"line_start":16,"line_end":16,"column_start":22,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":381},"to":{"krate":0,"index":195}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":69295,"byte_end":69302,"line_start":6,"line_end":6,"column_start":16,"column_end":23},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":73253,"byte_end":73260,"line_start":130,"line_end":130,"column_start":41,"column_end":48},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":405},"to":{"krate":0,"index":195}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":74594,"byte_end":74607,"line_start":175,"line_end":175,"column_start":20,"column_end":33},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":74982,"byte_end":74995,"line_start":188,"line_end":188,"column_start":20,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":76270,"byte_end":76281,"line_start":227,"line_end":227,"column_start":20,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\entry.rs","byte_start":77153,"byte_end":77165,"line_start":252,"line_end":252,"column_start":20,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\flagged.rs","byte_start":84573,"byte_end":84587,"line_start":175,"line_end":175,"column_start":12,"column_end":26},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\flagged.rs","byte_start":84843,"byte_end":84857,"line_start":187,"line_end":187,"column_start":24,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":492},"to":{"krate":2,"index":2204}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\flagged.rs","byte_start":85261,"byte_end":85275,"line_start":202,"line_end":202,"column_start":72,"column_end":86},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":492},"to":{"krate":0,"index":941}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\flagged.rs","byte_start":86124,"byte_end":86138,"line_start":236,"line_end":236,"column_start":24,"column_end":38},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":492},"to":{"krate":0,"index":809}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\generic.rs","byte_start":87126,"byte_end":87137,"line_start":20,"line_end":20,"column_start":36,"column_end":47},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":351},"to":{"krate":0,"index":531}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\generic.rs","byte_start":87669,"byte_end":87681,"line_start":50,"line_end":50,"column_start":36,"column_end":48},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":362},"to":{"krate":0,"index":531}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\generic.rs","byte_start":89186,"byte_end":89198,"line_start":107,"line_end":107,"column_start":37,"column_end":49},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":362},"to":{"krate":0,"index":561}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":92118,"byte_end":92123,"line_start":36,"line_end":36,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":615}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":92154,"byte_end":92175,"line_start":37,"line_end":37,"column_start":28,"column_end":49},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":612},"to":{"krate":0,"index":615}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":92206,"byte_end":92234,"line_start":38,"line_end":38,"column_start":28,"column_end":56},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":614},"to":{"krate":0,"index":615}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":95862,"byte_end":95869,"line_start":161,"line_end":161,"column_start":17,"column_end":24},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":96608,"byte_end":96615,"line_start":184,"line_end":184,"column_start":17,"column_end":24},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":98128,"byte_end":98141,"line_start":230,"line_end":230,"column_start":35,"column_end":48},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":98503,"byte_end":98516,"line_start":243,"line_end":243,"column_start":35,"column_end":48},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":98901,"byte_end":98914,"line_start":256,"line_end":256,"column_start":35,"column_end":48},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\restrict.rs","byte_start":99656,"byte_end":99669,"line_start":279,"line_end":279,"column_start":25,"column_end":38},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":100836,"byte_end":100848,"line_start":19,"line_end":19,"column_start":35,"column_end":47},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2196},"to":{"krate":0,"index":941}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":101358,"byte_end":101370,"line_start":44,"line_end":44,"column_start":36,"column_end":48},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2196},"to":{"krate":0,"index":848}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":101636,"byte_end":101650,"line_start":53,"line_end":53,"column_start":35,"column_end":49},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2203},"to":{"krate":0,"index":941}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":102159,"byte_end":102173,"line_start":78,"line_end":78,"column_start":36,"column_end":50},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2203},"to":{"krate":0,"index":848}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":102630,"byte_end":102645,"line_start":94,"line_end":94,"column_start":35,"column_end":50},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2210},"to":{"krate":0,"index":941}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":103870,"byte_end":103885,"line_start":133,"line_end":133,"column_start":36,"column_end":51},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2210},"to":{"krate":0,"index":848}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":104083,"byte_end":104094,"line_start":139,"line_end":139,"column_start":35,"column_end":46},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":763},"to":{"krate":0,"index":941}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":104516,"byte_end":104527,"line_start":164,"line_end":164,"column_start":21,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":763},"to":{"krate":2,"index":2204}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":104828,"byte_end":104839,"line_start":178,"line_end":178,"column_start":36,"column_end":47},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":763},"to":{"krate":0,"index":848}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":105102,"byte_end":105112,"line_start":186,"line_end":186,"column_start":35,"column_end":45},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2218},"to":{"krate":0,"index":941}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\storages.rs","byte_start":106191,"byte_end":106201,"line_start":229,"line_end":229,"column_start":36,"column_end":46},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2218},"to":{"krate":0,"index":848}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\track.rs","byte_start":107780,"byte_end":107787,"line_start":45,"line_end":45,"column_start":16,"column_end":23},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\track.rs","byte_start":108284,"byte_end":108291,"line_start":63,"line_end":63,"column_start":16,"column_end":23},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":44362,"byte_end":44373,"line_start":51,"line_end":51,"column_start":19,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":824},"to":{"krate":0,"index":195}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":44824,"byte_end":44835,"line_start":66,"line_end":66,"column_start":37,"column_end":48},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":824},"to":{"krate":0,"index":848}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":44982,"byte_end":44993,"line_start":70,"line_end":70,"column_start":29,"column_end":40},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":824},"to":{"krate":0,"index":152}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":45353,"byte_end":45366,"line_start":91,"line_end":91,"column_start":24,"column_end":37},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2245},"to":{"krate":0,"index":839}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":46899,"byte_end":46912,"line_start":138,"line_end":138,"column_start":20,"column_end":33},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":48142,"byte_end":48155,"line_start":182,"line_end":182,"column_start":29,"column_end":42},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2245},"to":{"krate":2,"index":1725}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":48544,"byte_end":48551,"line_start":197,"line_end":197,"column_start":16,"column_end":23},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":48894,"byte_end":48901,"line_start":209,"line_end":209,"column_start":16,"column_end":23},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":50670,"byte_end":50677,"line_start":262,"line_end":262,"column_start":16,"column_end":23},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":53446,"byte_end":53453,"line_start":341,"line_end":341,"column_start":54,"column_end":61},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":861},"to":{"krate":0,"index":848}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":55803,"byte_end":55808,"line_start":426,"line_end":426,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":935}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":56176,"byte_end":56177,"line_start":439,"line_end":439,"column_start":24,"column_end":25},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":939},"to":{"krate":0,"index":935}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\storage\\mod.rs","byte_start":56370,"byte_end":56380,"line_start":449,"line_end":449,"column_start":34,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":935},"to":{"krate":0,"index":941}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\comp.rs","byte_start":115430,"byte_end":115433,"line_start":63,"line_end":63,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2309},"to":{"krate":0,"index":973}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\comp.rs","byte_start":115436,"byte_end":115441,"line_start":63,"line_end":63,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":973}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":117198,"byte_end":117207,"line_start":61,"line_end":61,"column_start":6,"column_end":15},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":121840,"byte_end":121856,"line_start":213,"line_end":213,"column_start":23,"column_end":39},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1014},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":122131,"byte_end":122137,"line_start":225,"line_end":225,"column_start":6,"column_end":12},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":123027,"byte_end":123038,"line_start":260,"line_end":260,"column_start":6,"column_end":17},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":125916,"byte_end":125932,"line_start":350,"line_end":350,"column_start":10,"column_end":26},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1042},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":126321,"byte_end":126337,"line_start":364,"line_end":364,"column_start":19,"column_end":35},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1042},"to":{"krate":2,"index":1725}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":126815,"byte_end":126825,"line_start":379,"line_end":379,"column_start":21,"column_end":31},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2298},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":126964,"byte_end":126974,"line_start":385,"line_end":385,"column_start":6,"column_end":16},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":127896,"byte_end":127914,"line_start":422,"line_end":422,"column_start":6,"column_end":24},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":129163,"byte_end":129174,"line_start":475,"line_end":475,"column_start":6,"column_end":17},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\entity.rs","byte_start":129569,"byte_end":129580,"line_start":492,"line_end":492,"column_start":24,"column_end":35},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2336},"to":{"krate":2,"index":3817}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","byte_start":132075,"byte_end":132080,"line_start":8,"line_end":8,"column_start":21,"column_end":26},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1086},"to":{"krate":2,"index":2204}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","byte_start":132621,"byte_end":132632,"line_start":26,"line_end":26,"column_start":22,"column_end":33},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1093},"to":{"krate":0,"index":1226}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","byte_start":133564,"byte_end":133568,"line_start":57,"line_end":57,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1534},"to":{"krate":0,"index":1103}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","byte_start":133571,"byte_end":133575,"line_start":57,"line_end":57,"column_start":34,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":1544},"to":{"krate":0,"index":1103}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","byte_start":133663,"byte_end":133664,"line_start":61,"line_end":61,"column_start":32,"column_end":33},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1106},"to":{"krate":0,"index":1103}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","byte_start":134574,"byte_end":134584,"line_start":90,"line_end":90,"column_start":6,"column_end":16},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\lazy.rs","byte_start":140959,"byte_end":140969,"line_start":324,"line_end":324,"column_start":15,"column_end":25},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2343},"to":{"krate":2,"index":1725}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\world_ext.rs","byte_start":150360,"byte_end":150365,"line_start":294,"line_end":294,"column_start":19,"column_end":24},"kind":{"Impl":{"id":108}},"from":{"krate":28,"index":1700},"to":{"krate":0,"index":1156}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":110117,"byte_end":110127,"line_start":32,"line_end":32,"column_start":23,"column_end":33},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1218},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":112870,"byte_end":112883,"line_start":137,"line_end":137,"column_start":22,"column_end":35},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1230},"to":{"krate":0,"index":1226}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\specs-0.15.1\\src\\world\\mod.rs","byte_start":113655,"byte_end":113668,"line_start":163,"line_end":163,"column_start":19,"column_end":32},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1230},"to":{"krate":2,"index":1725}}]}