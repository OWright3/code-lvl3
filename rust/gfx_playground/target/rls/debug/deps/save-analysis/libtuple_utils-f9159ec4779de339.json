{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0","program":"C:\\Users\\Ollie\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tuple_utils","C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=f9159ec4779de339","-C","extra-filename=-f9159ec4779de339","--out-dir","c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Ollie\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\libtuple_utils-f9159ec4779de339.rmeta"},"prelude":{"crate_id":{"name":"tuple_utils","disambiguator":[14316862440534944364,3577969308568098384]},"crate_root":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src","external_crates":[{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12578048494495979596,2047601184299498072]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[9458200224090790355,13573932773036415113]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17212932621614837670,6562776948220383497]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[760535750034822653,11118367618612043106]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9863315158332858256,17125058067034963864]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[4687805557387852666,9943473115938981341]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11895006708321731812,14562333644307237348]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3795917533932740915,1352930594861700352]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14246119625412523820,1488400038702589601]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[301469929213911528,4015090225475952437]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[2057170103176572375,2047842178592089941]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5373388065014169986,7291481803049279744]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[11217907578908536000,17992819105755382748]}}],"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","byte_start":0,"byte_end":6896,"line_start":1,"line_end":246,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","byte_start":0,"byte_end":6896,"line_start":1,"line_end":246,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":16},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":34},{"krate":0,"index":38},{"krate":0,"index":42},{"krate":0,"index":47},{"krate":0,"index":52},{"krate":0,"index":58},{"krate":0,"index":64},{"krate":0,"index":71},{"krate":0,"index":78},{"krate":0,"index":86},{"krate":0,"index":94},{"krate":0,"index":103},{"krate":0,"index":112},{"krate":0,"index":122},{"krate":0,"index":132},{"krate":0,"index":143},{"krate":0,"index":154},{"krate":0,"index":166},{"krate":0,"index":178},{"krate":0,"index":191},{"krate":0,"index":204},{"krate":0,"index":218},{"krate":0,"index":232},{"krate":0,"index":247},{"krate":0,"index":262},{"krate":0,"index":278},{"krate":0,"index":294},{"krate":0,"index":311},{"krate":0,"index":328},{"krate":0,"index":346},{"krate":0,"index":364},{"krate":0,"index":383},{"krate":0,"index":402},{"krate":0,"index":422},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":449},{"krate":0,"index":453},{"krate":0,"index":458},{"krate":0,"index":463},{"krate":0,"index":468},{"krate":0,"index":474},{"krate":0,"index":480},{"krate":0,"index":486},{"krate":0,"index":492},{"krate":0,"index":499},{"krate":0,"index":506},{"krate":0,"index":513},{"krate":0,"index":520},{"krate":0,"index":527},{"krate":0,"index":535},{"krate":0,"index":543},{"krate":0,"index":551},{"krate":0,"index":559},{"krate":0,"index":567},{"krate":0,"index":575},{"krate":0,"index":584},{"krate":0,"index":593},{"krate":0,"index":602},{"krate":0,"index":611},{"krate":0,"index":620},{"krate":0,"index":629},{"krate":0,"index":638},{"krate":0,"index":648},{"krate":0,"index":658},{"krate":0,"index":668},{"krate":0,"index":678},{"krate":0,"index":688},{"krate":0,"index":698},{"krate":0,"index":708},{"krate":0,"index":718},{"krate":0,"index":729},{"krate":0,"index":740},{"krate":0,"index":751},{"krate":0,"index":762},{"krate":0,"index":773},{"krate":0,"index":784},{"krate":0,"index":795},{"krate":0,"index":806},{"krate":0,"index":817},{"krate":0,"index":829},{"krate":0,"index":841},{"krate":0,"index":853},{"krate":0,"index":865},{"krate":0,"index":877},{"krate":0,"index":889},{"krate":0,"index":901},{"krate":0,"index":913},{"krate":0,"index":925},{"krate":0,"index":937},{"krate":0,"index":950},{"krate":0,"index":963},{"krate":0,"index":976},{"krate":0,"index":989},{"krate":0,"index":1002},{"krate":0,"index":1015},{"krate":0,"index":1028},{"krate":0,"index":1041},{"krate":0,"index":1054},{"krate":0,"index":1067},{"krate":0,"index":1080},{"krate":0,"index":1094},{"krate":0,"index":1108},{"krate":0,"index":1122},{"krate":0,"index":1136},{"krate":0,"index":1150},{"krate":0,"index":1164},{"krate":0,"index":1178},{"krate":0,"index":1192},{"krate":0,"index":1206},{"krate":0,"index":1220},{"krate":0,"index":1234},{"krate":0,"index":1248},{"krate":0,"index":1263},{"krate":0,"index":1278},{"krate":0,"index":1293},{"krate":0,"index":1308},{"krate":0,"index":1323},{"krate":0,"index":1338},{"krate":0,"index":1353},{"krate":0,"index":1368},{"krate":0,"index":1383},{"krate":0,"index":1398},{"krate":0,"index":1413},{"krate":0,"index":1428},{"krate":0,"index":1443},{"krate":0,"index":1459},{"krate":0,"index":1475},{"krate":0,"index":1491},{"krate":0,"index":1507},{"krate":0,"index":1523},{"krate":0,"index":1539},{"krate":0,"index":1555},{"krate":0,"index":1571},{"krate":0,"index":1587},{"krate":0,"index":1603},{"krate":0,"index":1619},{"krate":0,"index":1635},{"krate":0,"index":1651},{"krate":0,"index":1667},{"krate":0,"index":1684},{"krate":0,"index":1701},{"krate":0,"index":1718},{"krate":0,"index":1735},{"krate":0,"index":1752},{"krate":0,"index":1769},{"krate":0,"index":1786},{"krate":0,"index":1803},{"krate":0,"index":1820},{"krate":0,"index":1837},{"krate":0,"index":1854},{"krate":0,"index":1871},{"krate":0,"index":1888},{"krate":0,"index":1905},{"krate":0,"index":1922},{"krate":0,"index":1940},{"krate":0,"index":1958},{"krate":0,"index":1976},{"krate":0,"index":1994},{"krate":0,"index":2012},{"krate":0,"index":2030},{"krate":0,"index":2048},{"krate":0,"index":2066},{"krate":0,"index":2084},{"krate":0,"index":2102},{"krate":0,"index":2120},{"krate":0,"index":2138},{"krate":0,"index":2156},{"krate":0,"index":2174},{"krate":0,"index":2192},{"krate":0,"index":2210},{"krate":0,"index":2229},{"krate":0,"index":2248},{"krate":0,"index":2267},{"krate":0,"index":2286},{"krate":0,"index":2305},{"krate":0,"index":2324},{"krate":0,"index":2343},{"krate":0,"index":2362},{"krate":0,"index":2381},{"krate":0,"index":2400},{"krate":0,"index":2419},{"krate":0,"index":2438},{"krate":0,"index":2457},{"krate":0,"index":2476},{"krate":0,"index":2495},{"krate":0,"index":2514},{"krate":0,"index":29},{"krate":0,"index":33},{"krate":0,"index":2533},{"krate":0,"index":2537},{"krate":0,"index":2542},{"krate":0,"index":2548},{"krate":0,"index":2555},{"krate":0,"index":2563},{"krate":0,"index":2572},{"krate":0,"index":2582},{"krate":0,"index":2593},{"krate":0,"index":2605},{"krate":0,"index":2618},{"krate":0,"index":2632},{"krate":0,"index":2647},{"krate":0,"index":2663},{"krate":0,"index":2680},{"krate":0,"index":2698},{"krate":0,"index":2717},{"krate":0,"index":2737}],"decl_id":null,"docs":" A simple set of utility traits for working with tuples\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","byte_start":116,"byte_end":122,"line_start":4,"line_end":4,"column_start":11,"column_end":17},"name":"Append","qualname":"::Append","value":"Append<T>","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":15}],"decl_id":null,"docs":" Helper trait to allow Appending of tuples\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","byte_start":137,"byte_end":143,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::Append::Output","value":"type Output;","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","byte_start":258,"byte_end":264,"line_start":8,"line_end":8,"column_start":8,"column_end":14},"name":"append","qualname":"::Append::append","value":"fn (self, T) -> Self::Output","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Append T onto the end of the tuple returning\n a new tuple with the existing elements and T\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","byte_start":351,"byte_end":358,"line_start":12,"line_end":12,"column_start":11,"column_end":18},"name":"Prepend","qualname":"::Prepend","value":"Prepend<T>","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19}],"decl_id":null,"docs":" Helper trait to allow Perpending of tuples\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","byte_start":373,"byte_end":379,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Output","qualname":"::Prepend::Output","value":"type Output;","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","byte_start":543,"byte_end":550,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"prepend","qualname":"::Prepend::prepend","value":"fn (self, T) -> Self::Output","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Append T onto the start of the tuple returning\n a new tuple with all the elements from shifted\n over one row and T in the first slot\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","byte_start":2490,"byte_end":2495,"line_start":85,"line_end":85,"column_start":11,"column_end":16},"name":"Merge","qualname":"::Merge","value":"Merge<T>","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26}],"decl_id":null,"docs":" Helper trait that allow for merging of tuples\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","byte_start":2510,"byte_end":2516,"line_start":86,"line_end":86,"column_start":10,"column_end":16},"name":"Output","qualname":"::Merge::Output","value":"type Output;","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","byte_start":2711,"byte_end":2716,"line_start":91,"line_end":91,"column_start":8,"column_end":13},"name":"merge","qualname":"::Merge::merge","value":"fn (self, T) -> Self::Output","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" merge LHS with RHS returning a new tuple\n that contains the elements of both tuples\n ordering is preserved such that LHS elements\n come before RHS elements.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","byte_start":3522,"byte_end":3527,"line_start":123,"line_end":123,"column_start":11,"column_end":16},"name":"Split","qualname":"::Split","value":"Split","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32}],"decl_id":null,"docs":" Tries to split a tuple into two tuples\n if the tuple is odd sized the Right side will\n contain the extra element\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","byte_start":3539,"byte_end":3543,"line_start":124,"line_end":124,"column_start":10,"column_end":14},"name":"Left","qualname":"::Split::Left","value":"type Left;","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","byte_start":3554,"byte_end":3559,"line_start":125,"line_end":125,"column_start":10,"column_end":15},"name":"Right","qualname":"::Split::Right","value":"type Right;","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tuple_utils-0.3.0\\src\\lib.rs","byte_start":3569,"byte_end":3574,"line_start":127,"line_end":127,"column_start":8,"column_end":13},"name":"split","qualname":"::Split::split","value":"fn (self) -> (Self::Left, Self::Right)","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}