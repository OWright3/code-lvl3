{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3","program":"C:\\Users\\Ollie\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","image","C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"bmp\"","--cfg","feature=\"default\"","--cfg","feature=\"dxt\"","--cfg","feature=\"gif\"","--cfg","feature=\"gif_codec\"","--cfg","feature=\"hdr\"","--cfg","feature=\"ico\"","--cfg","feature=\"jpeg\"","--cfg","feature=\"jpeg-decoder\"","--cfg","feature=\"jpeg_rayon\"","--cfg","feature=\"png\"","--cfg","feature=\"png_codec\"","--cfg","feature=\"pnm\"","--cfg","feature=\"scoped_threadpool\"","--cfg","feature=\"tga\"","--cfg","feature=\"tiff\"","--cfg","feature=\"webp\"","-C","metadata=6b12989b53140e60","-C","extra-filename=-6b12989b53140e60","--out-dir","c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps","--extern","byteorder=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\libbyteorder-c7ed1f144a2f66d5.rmeta","--extern","gif=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\libgif-539e3b17344cbec9.rmeta","--extern","jpeg_decoder=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\libjpeg_decoder-003e568b2d218359.rmeta","--extern","lzw=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\liblzw-d1a78dc2ea4054f7.rmeta","--extern","num_iter=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\libnum_iter-5e2d311d1d4b7bcb.rmeta","--extern","num_rational=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\libnum_rational-76686ea21d221c50.rmeta","--extern","num_traits=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\libnum_traits-8fb2bafcd6a7ccd9.rmeta","--extern","png=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\libpng-390711ee168b1476.rmeta","--extern","scoped_threadpool=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\libscoped_threadpool-eed48931408c7c43.rmeta","--extern","tiff=c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\libtiff-29336715aa01003a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Ollie\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Ollie\\Documents\\code-lvl3\\rust\\gfx_playground\\target\\rls\\debug\\deps\\libimage-6b12989b53140e60.rmeta"},"prelude":{"crate_id":{"name":"image","disambiguator":[1275946479309472622,18276177231108633345]},"crate_root":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src","external_crates":[{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12578048494495979596,2047601184299498072]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9458200224090790355,13573932773036415113]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17212932621614837670,6562776948220383497]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[760535750034822653,11118367618612043106]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9863315158332858256,17125058067034963864]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4687805557387852666,9943473115938981341]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11895006708321731812,14562333644307237348]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3795917533932740915,1352930594861700352]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14246119625412523820,1488400038702589601]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[301469929213911528,4015090225475952437]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[2057170103176572375,2047842178592089941]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5373388065014169986,7291481803049279744]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[11217907578908536000,17992819105755382748]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","num":14,"id":{"name":"byteorder","disambiguator":[12512480558661187179,11407372420315354857]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","num":15,"id":{"name":"lzw","disambiguator":[15761200821578063301,883390184959017412]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","num":16,"id":{"name":"num_iter","disambiguator":[3722644180040812100,1123272466883645525]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","num":17,"id":{"name":"num_integer","disambiguator":[4063316376915858943,11314726354471994236]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","num":18,"id":{"name":"num_traits","disambiguator":[17154767080098572038,13608901121477063872]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","num":19,"id":{"name":"num_rational","disambiguator":[10343707028105369854,12727282758936023210]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","num":20,"id":{"name":"num_bigint","disambiguator":[12607494414509701449,13907458816939829815]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","num":21,"id":{"name":"scoped_threadpool","disambiguator":[16216090903505052193,4703584500412469176]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","num":22,"id":{"name":"gif","disambiguator":[8626924601723775615,12007218243234340149]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","num":23,"id":{"name":"color_quant","disambiguator":[6423036626840447060,8740069042835036446]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\decoder.rs","num":24,"id":{"name":"jpeg_decoder","disambiguator":[14923073391758222779,967860050836194185]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\decoder.rs","num":25,"id":{"name":"rayon","disambiguator":[4916613042128942709,6450936071534617892]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\decoder.rs","num":26,"id":{"name":"crossbeam_deque","disambiguator":[8096164653812542193,7245489510627635590]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\decoder.rs","num":27,"id":{"name":"crossbeam_epoch","disambiguator":[11885994366585831752,6672687476904711462]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\decoder.rs","num":28,"id":{"name":"cfg_if","disambiguator":[11332822018376109482,12531163141307769881]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\decoder.rs","num":29,"id":{"name":"crossbeam_utils","disambiguator":[2442131106640731405,16187359134328411578]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\decoder.rs","num":30,"id":{"name":"lazy_static","disambiguator":[11183393041770989563,4958224602867445297]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\decoder.rs","num":31,"id":{"name":"memoffset","disambiguator":[721541891346912788,9917211672765356618]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\decoder.rs","num":32,"id":{"name":"scopeguard","disambiguator":[12313808262949512516,7023837395223807313]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\decoder.rs","num":33,"id":{"name":"either","disambiguator":[14224422418139563874,16303910147904872345]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\decoder.rs","num":34,"id":{"name":"rayon_core","disambiguator":[15139817526765261712,6158245922852819891]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\decoder.rs","num":35,"id":{"name":"crossbeam_queue","disambiguator":[6549487499231722874,16798004610080093658]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\decoder.rs","num":36,"id":{"name":"num_cpus","disambiguator":[7984451816713647015,1991493691848609442]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\png.rs","num":37,"id":{"name":"png","disambiguator":[6277679732376318524,3163236889525124663]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\png.rs","num":38,"id":{"name":"bitflags","disambiguator":[17336328471256008964,17756473953899072185]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\png.rs","num":39,"id":{"name":"inflate","disambiguator":[7041572174005475146,11884031402537070699]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\png.rs","num":40,"id":{"name":"adler32","disambiguator":[12236597085103921059,5290192147638630738]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\png.rs","num":41,"id":{"name":"deflate","disambiguator":[679032686510299888,12868605575269736144]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tiff.rs","num":42,"id":{"name":"tiff","disambiguator":[7664276360375303013,2377330962827878754]}},{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tiff.rs","num":43,"id":{"name":"num_derive","disambiguator":[15014361350099281387,7995979305310793217]}}],"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":0,"byte_end":2888,"line_start":1,"line_end":121,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":3435},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":729,"byte_end":733,"line_start":28,"line_end":28,"column_start":28,"column_end":32},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3436},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":735,"byte_end":739,"line_start":28,"line_end":28,"column_start":34,"column_end":38},"alias_span":null,"name":"Gray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3445},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":741,"byte_end":746,"line_start":28,"line_end":28,"column_start":40,"column_end":45},"alias_span":null,"name":"GrayA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3442},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":748,"byte_end":755,"line_start":28,"line_end":28,"column_start":47,"column_end":54},"alias_span":null,"name":"Palette","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3439},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":757,"byte_end":760,"line_start":28,"line_end":28,"column_start":56,"column_end":59},"alias_span":null,"name":"RGB","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3448},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":762,"byte_end":766,"line_start":28,"line_end":28,"column_start":61,"column_end":65},"alias_span":null,"name":"RGBA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3451},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":768,"byte_end":771,"line_start":28,"line_end":28,"column_start":67,"column_end":70},"alias_span":null,"name":"BGR","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3454},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":773,"byte_end":777,"line_start":28,"line_end":28,"column_start":72,"column_end":76},"alias_span":null,"name":"BGRA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3788},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":797,"byte_end":801,"line_start":30,"line_end":30,"column_start":17,"column_end":21},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3860},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":803,"byte_end":808,"line_start":30,"line_end":30,"column_start":23,"column_end":28},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3740},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":810,"byte_end":813,"line_start":30,"line_end":30,"column_start":30,"column_end":33},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3812},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":815,"byte_end":819,"line_start":30,"line_end":30,"column_start":35,"column_end":39},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3764},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":821,"byte_end":824,"line_start":30,"line_end":30,"column_start":41,"column_end":44},"alias_span":null,"name":"Bgr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3836},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":826,"byte_end":830,"line_start":30,"line_end":30,"column_start":46,"column_end":50},"alias_span":null,"name":"Bgra","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2670},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":850,"byte_end":866,"line_start":32,"line_end":32,"column_start":17,"column_end":33},"alias_span":null,"name":"AnimationDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2712},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":884,"byte_end":896,"line_start":33,"line_end":33,"column_start":17,"column_end":29},"alias_span":null,"name":"GenericImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2699},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":914,"byte_end":930,"line_start":34,"line_end":34,"column_start":17,"column_end":33},"alias_span":null,"name":"GenericImageView","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2653},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":948,"byte_end":960,"line_start":35,"line_end":35,"column_start":17,"column_end":29},"alias_span":null,"name":"ImageDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2665},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":978,"byte_end":993,"line_start":36,"line_end":36,"column_start":17,"column_end":32},"alias_span":null,"name":"ImageDecoderExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3905},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1011,"byte_end":1021,"line_start":37,"line_end":37,"column_start":17,"column_end":27},"alias_span":null,"name":"ImageError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2633},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1039,"byte_end":1050,"line_start":38,"line_end":38,"column_start":17,"column_end":28},"alias_span":null,"name":"ImageResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2686},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1068,"byte_end":1077,"line_start":39,"line_end":39,"column_start":17,"column_end":26},"alias_span":null,"name":"MutPixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2673},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1124,"byte_end":1130,"line_start":41,"line_end":41,"column_start":17,"column_end":23},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2723},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1148,"byte_end":1156,"line_start":42,"line_end":42,"column_start":17,"column_end":25},"alias_span":null,"name":"SubImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2813},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1191,"byte_end":1195,"line_start":44,"line_end":44,"column_start":32,"column_end":36},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2818},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1197,"byte_end":1207,"line_start":44,"line_end":44,"column_start":38,"column_end":48},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2820},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1209,"byte_end":1217,"line_start":44,"line_end":44,"column_start":50,"column_end":58},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2822},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1219,"byte_end":1227,"line_start":44,"line_end":44,"column_start":60,"column_end":68},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2814},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1229,"byte_end":1236,"line_start":44,"line_end":44,"column_start":70,"column_end":77},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2816},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1238,"byte_end":1246,"line_start":44,"line_end":44,"column_start":79,"column_end":87},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3928},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1279,"byte_end":1283,"line_start":46,"line_end":46,"column_start":30,"column_end":34},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3943},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1285,"byte_end":1288,"line_start":46,"line_end":46,"column_start":36,"column_end":39},"alias_span":null,"name":"BMP","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3933},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1290,"byte_end":1293,"line_start":46,"line_end":46,"column_start":41,"column_end":44},"alias_span":null,"name":"GIF","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3945},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1295,"byte_end":1298,"line_start":46,"line_end":46,"column_start":46,"column_end":49},"alias_span":null,"name":"ICO","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3931},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1300,"byte_end":1304,"line_start":46,"line_end":46,"column_start":51,"column_end":55},"alias_span":null,"name":"JPEG","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3929},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1306,"byte_end":1309,"line_start":46,"line_end":46,"column_start":57,"column_end":60},"alias_span":null,"name":"PNG","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3937},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1311,"byte_end":1314,"line_start":46,"line_end":46,"column_start":62,"column_end":65},"alias_span":null,"name":"PNM","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3935},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1316,"byte_end":1320,"line_start":46,"line_end":46,"column_start":67,"column_end":71},"alias_span":null,"name":"WEBP","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3958},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1339,"byte_end":1356,"line_start":48,"line_end":48,"column_start":16,"column_end":33},"alias_span":null,"name":"ImageOutputFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2312},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1376,"byte_end":1389,"line_start":50,"line_end":50,"column_start":18,"column_end":31},"alias_span":null,"name":"ConvertBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2328},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1408,"byte_end":1422,"line_start":51,"line_end":51,"column_start":18,"column_end":32},"alias_span":null,"name":"GrayAlphaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2327},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1441,"byte_end":1450,"line_start":52,"line_end":52,"column_start":18,"column_end":27},"alias_span":null,"name":"GrayImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3424},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1501,"byte_end":1512,"line_start":54,"line_end":54,"column_start":18,"column_end":29},"alias_span":null,"name":"ImageBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2127},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1531,"byte_end":1536,"line_start":55,"line_end":55,"column_start":18,"column_end":23},"alias_span":null,"name":"Pixel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2325},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1555,"byte_end":1563,"line_start":56,"line_end":56,"column_start":18,"column_end":26},"alias_span":null,"name":"RgbImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2326},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1582,"byte_end":1591,"line_start":57,"line_end":57,"column_start":18,"column_end":27},"alias_span":null,"name":"RgbaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2829},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1610,"byte_end":1621,"line_start":59,"line_end":59,"column_start":16,"column_end":27},"alias_span":null,"name":"FlatSamples","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2762},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1651,"byte_end":1660,"line_start":62,"line_end":62,"column_start":17,"column_end":26},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2608},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1712,"byte_end":1724,"line_start":65,"line_end":65,"column_start":20,"column_end":32},"alias_span":null,"name":"guess_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2602},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1726,"byte_end":1730,"line_start":65,"line_end":65,"column_start":34,"column_end":38},"alias_span":null,"name":"load","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2606},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1732,"byte_end":1748,"line_start":65,"line_end":65,"column_start":40,"column_end":56},"alias_span":null,"name":"load_from_memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2607},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1750,"byte_end":1778,"line_start":65,"line_end":65,"column_start":58,"column_end":86},"alias_span":null,"name":"load_from_memory_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2592},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1780,"byte_end":1784,"line_start":65,"line_end":65,"column_start":88,"column_end":92},"alias_span":null,"name":"open","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2597},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1805,"byte_end":1816,"line_start":66,"line_end":66,"column_start":20,"column_end":31},"alias_span":null,"name":"save_buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3884},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1853,"byte_end":1857,"line_start":68,"line_end":68,"column_start":34,"column_end":38},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3885},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1859,"byte_end":1869,"line_start":68,"line_end":68,"column_start":40,"column_end":50},"alias_span":null,"name":"ImageLuma8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3888},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1871,"byte_end":1882,"line_start":68,"line_end":68,"column_start":52,"column_end":63},"alias_span":null,"name":"ImageLumaA8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3891},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1884,"byte_end":1893,"line_start":68,"line_end":68,"column_start":65,"column_end":74},"alias_span":null,"name":"ImageRgb8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3894},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1895,"byte_end":1905,"line_start":68,"line_end":68,"column_start":76,"column_end":86},"alias_span":null,"name":"ImageRgba8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3897},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1907,"byte_end":1916,"line_start":68,"line_end":68,"column_start":88,"column_end":97},"alias_span":null,"name":"ImageBgr8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3900},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1918,"byte_end":1928,"line_start":68,"line_end":68,"column_start":99,"column_end":109},"alias_span":null,"name":"ImageBgra8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3417},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1952,"byte_end":1957,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2076},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1959,"byte_end":1965,"line_start":70,"line_end":70,"column_start":28,"column_end":34},"alias_span":null,"name":"Frames","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2813},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":17780,"byte_end":17790,"line_start":8,"line_end":8,"column_start":23,"column_end":33},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":2818},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":17828,"byte_end":17838,"line_start":10,"line_end":10,"column_start":36,"column_end":46},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":2820},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":17840,"byte_end":17848,"line_start":10,"line_end":10,"column_start":48,"column_end":56},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":2822},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":17850,"byte_end":17858,"line_start":10,"line_end":10,"column_start":58,"column_end":66},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":2814},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":17860,"byte_end":17867,"line_start":10,"line_end":10,"column_start":68,"column_end":75},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":2816},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":17869,"byte_end":17877,"line_start":10,"line_end":10,"column_start":77,"column_end":85},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":17931,"byte_end":17946,"line_start":13,"line_end":13,"column_start":24,"column_end":39},"alias_span":null,"name":"flip_horizontal","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":17948,"byte_end":17961,"line_start":13,"line_end":13,"column_start":41,"column_end":54},"alias_span":null,"name":"flip_vertical","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":17963,"byte_end":17972,"line_start":13,"line_end":13,"column_start":56,"column_end":65},"alias_span":null,"name":"rotate180","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":17974,"byte_end":17983,"line_start":13,"line_end":13,"column_start":67,"column_end":76},"alias_span":null,"name":"rotate270","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":17985,"byte_end":17993,"line_start":13,"line_end":13,"column_start":78,"column_end":86},"alias_span":null,"name":"rotate90","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":18039,"byte_end":18043,"line_start":16,"line_end":16,"column_start":24,"column_end":28},"alias_span":null,"name":"blur","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":18045,"byte_end":18054,"line_start":16,"line_end":16,"column_start":30,"column_end":39},"alias_span":null,"name":"filter3x3","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":18056,"byte_end":18062,"line_start":16,"line_end":16,"column_start":41,"column_end":47},"alias_span":null,"name":"resize","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":18064,"byte_end":18073,"line_start":16,"line_end":16,"column_start":49,"column_end":58},"alias_span":null,"name":"thumbnail","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":18075,"byte_end":18084,"line_start":16,"line_end":16,"column_start":60,"column_end":69},"alias_span":null,"name":"unsharpen","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":18134,"byte_end":18142,"line_start":19,"line_end":19,"column_start":26,"column_end":34},"alias_span":null,"name":"brighten","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":18144,"byte_end":18152,"line_start":19,"line_end":19,"column_start":36,"column_end":44},"alias_span":null,"name":"contrast","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":18154,"byte_end":18160,"line_start":19,"line_end":19,"column_start":46,"column_end":52},"alias_span":null,"name":"dither","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":18162,"byte_end":18171,"line_start":19,"line_end":19,"column_start":54,"column_end":63},"alias_span":null,"name":"grayscale","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":18173,"byte_end":18182,"line_start":19,"line_end":19,"column_start":65,"column_end":74},"alias_span":null,"name":"huerotate","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":18184,"byte_end":18196,"line_start":19,"line_end":19,"column_start":76,"column_end":88},"alias_span":null,"name":"index_colors","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":18198,"byte_end":18204,"line_start":19,"line_end":19,"column_start":90,"column_end":96},"alias_span":null,"name":"invert","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":2808},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":18231,"byte_end":18238,"line_start":20,"line_end":20,"column_start":26,"column_end":33},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":18240,"byte_end":18248,"line_start":20,"line_end":20,"column_start":35,"column_end":43},"alias_span":null,"name":"ColorMap","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":587},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\mod.rs","byte_start":126491,"byte_end":126501,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"BMPDecoder","value":"","parent":{"krate":0,"index":498}},{"kind":"Use","ref_id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\mod.rs","byte_start":126526,"byte_end":126536,"line_start":11,"line_end":11,"column_start":24,"column_end":34},"alias_span":null,"name":"BMPEncoder","value":"","parent":{"krate":0,"index":498}},{"kind":"Use","ref_id":{"krate":22,"index":292},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","byte_start":214305,"byte_end":214319,"line_start":36,"line_end":36,"column_start":21,"column_end":35},"alias_span":null,"name":"DisposalMethod","value":"","parent":{"krate":0,"index":809}},{"kind":"Use","ref_id":{"krate":22,"index":355},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","byte_start":214321,"byte_end":214326,"line_start":36,"line_end":36,"column_start":37,"column_end":42},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":809}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\mod.rs","byte_start":224048,"byte_end":224049,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"RGBE8Pixel, rgbe8, HDRAdapter, SIGNATURE","parent":{"krate":0,"index":888}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\mod.rs","byte_start":224048,"byte_end":224049,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":888}},{"kind":"Use","ref_id":{"krate":0,"index":1106},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\ico\\mod.rs","byte_start":274845,"byte_end":274855,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"alias_span":null,"name":"ICODecoder","value":"","parent":{"krate":0,"index":1084}},{"kind":"Use","ref_id":{"krate":0,"index":1159},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\ico\\mod.rs","byte_start":274880,"byte_end":274890,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"ICOEncoder","value":"","parent":{"krate":0,"index":1084}},{"kind":"Use","ref_id":{"krate":0,"index":1185},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\mod.rs","byte_start":287240,"byte_end":287251,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"JPEGDecoder","value":"","parent":{"krate":0,"index":1172}},{"kind":"Use","ref_id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\mod.rs","byte_start":287276,"byte_end":287287,"line_start":11,"line_end":11,"column_start":24,"column_end":35},"alias_span":null,"name":"JPEGEncoder","value":"","parent":{"krate":0,"index":1172}},{"kind":"Use","ref_id":{"krate":0,"index":1454},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\mod.rs","byte_start":328727,"byte_end":328737,"line_start":7,"line_end":7,"column_start":24,"column_end":34},"alias_span":null,"name":"PNMDecoder","value":"","parent":{"krate":0,"index":1374}},{"kind":"Use","ref_id":{"krate":0,"index":1577},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\mod.rs","byte_start":328762,"byte_end":328772,"line_start":8,"line_end":8,"column_start":24,"column_end":34},"alias_span":null,"name":"PNMEncoder","value":"","parent":{"krate":0,"index":1374}},{"kind":"Use","ref_id":{"krate":0,"index":3238},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\mod.rs","byte_start":328829,"byte_end":328844,"line_start":10,"line_end":10,"column_start":24,"column_end":39},"alias_span":null,"name":"ArbitraryHeader","value":"","parent":{"krate":0,"index":1374}},{"kind":"Use","ref_id":{"krate":0,"index":3248},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\mod.rs","byte_start":328846,"byte_end":328863,"line_start":10,"line_end":10,"column_start":41,"column_end":58},"alias_span":null,"name":"ArbitraryTuplType","value":"","parent":{"krate":0,"index":1374}},{"kind":"Use","ref_id":{"krate":0,"index":3209},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\mod.rs","byte_start":328865,"byte_end":328877,"line_start":10,"line_end":10,"column_start":60,"column_end":72},"alias_span":null,"name":"BitmapHeader","value":"","parent":{"krate":0,"index":1374}},{"kind":"Use","ref_id":{"krate":0,"index":3218},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\mod.rs","byte_start":328879,"byte_end":328892,"line_start":10,"line_end":10,"column_start":74,"column_end":87},"alias_span":null,"name":"GraymapHeader","value":"","parent":{"krate":0,"index":1374}},{"kind":"Use","ref_id":{"krate":0,"index":3228},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\mod.rs","byte_start":328917,"byte_end":328929,"line_start":11,"line_end":11,"column_start":24,"column_end":36},"alias_span":null,"name":"PixmapHeader","value":"","parent":{"krate":0,"index":1374}},{"kind":"Use","ref_id":{"krate":0,"index":1672},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\mod.rs","byte_start":328955,"byte_end":328964,"line_start":12,"line_end":12,"column_start":24,"column_end":33},"alias_span":null,"name":"PNMHeader","value":"","parent":{"krate":0,"index":1374}},{"kind":"Use","ref_id":{"krate":0,"index":3187},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\mod.rs","byte_start":328966,"byte_end":328976,"line_start":12,"line_end":12,"column_start":35,"column_end":45},"alias_span":null,"name":"PNMSubtype","value":"","parent":{"krate":0,"index":1374}},{"kind":"Use","ref_id":{"krate":0,"index":3173},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\mod.rs","byte_start":328978,"byte_end":328992,"line_start":12,"line_end":12,"column_start":47,"column_end":61},"alias_span":null,"name":"SampleEncoding","value":"","parent":{"krate":0,"index":1374}},{"kind":"Use","ref_id":{"krate":0,"index":1765},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tga\\mod.rs","byte_start":406632,"byte_end":406642,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"alias_span":null,"name":"TGADecoder","value":"","parent":{"krate":0,"index":1710}},{"kind":"Use","ref_id":{"krate":0,"index":1860},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\mod.rs","byte_start":426687,"byte_end":426698,"line_start":3,"line_end":3,"column_start":24,"column_end":35},"alias_span":null,"name":"WebpDecoder","value":"","parent":{"krate":0,"index":1843}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":0,"byte_end":2888,"line_start":1,"line_end":121,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":28},{"krate":0,"index":35},{"krate":0,"index":46},{"krate":0,"index":53},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":81},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":134},{"krate":0,"index":341},{"krate":0,"index":498},{"krate":0,"index":699},{"krate":0,"index":809},{"krate":0,"index":888},{"krate":0,"index":1084},{"krate":0,"index":1172},{"krate":0,"index":1329},{"krate":0,"index":1374},{"krate":0,"index":1710},{"krate":0,"index":1812},{"krate":0,"index":1843},{"krate":0,"index":2071},{"krate":0,"index":2095},{"krate":0,"index":2331},{"krate":0,"index":2480},{"krate":0,"index":2610},{"krate":0,"index":2756},{"krate":0,"index":2784},{"krate":0,"index":2796}],"decl_id":null,"docs":" This crate provides native rust implementations of\n image encoders and decoders and basic image manipulation\n functions.\n","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":132,"byte_end":154,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"warn(unused_qualifications)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":155,"byte_end":186,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"deny(missing_copy_implementations)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":187,"byte_end":225,"line_start":7,"line_end":7,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\math\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"math","qualname":"::math","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\math\\mod.rs","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":131}],"decl_id":null,"docs":" Mathematical helper functions and types.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\math\\nq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"nq","qualname":"::math::nq","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\math\\nq.rs","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":2797},{"krate":0,"index":2805},{"krate":0,"index":2803},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":117}],"decl_id":null,"docs":" NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.\n See \"Kohonen neural networks for optimal colour quantization\"\n in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.\n for a discussion of the algorithm.\n See also <http://www.acm.org/~dekker/NEUQUANT.HTML>\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\math\\nq.rs","byte_start":5098,"byte_end":5106,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"NeuQuant","qualname":"::math::nq::NeuQuant","value":"NeuQuant {  }","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116}],"decl_id":null,"docs":" Neural network color quantizer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\math\\nq.rs","byte_start":5408,"byte_end":5411,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<NeuQuant>::new","value":"fn (samplefac: i32, colors: usize, pixels: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new neural network and trains it with the supplied data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\math\\nq.rs","byte_start":5952,"byte_end":5956,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"init","qualname":"<NeuQuant>::init","value":"fn (&mut self, pixels: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Initializes the neural network and trains it with the supplied data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\math\\nq.rs","byte_start":6946,"byte_end":6955,"line_start":123,"line_end":123,"column_start":12,"column_end":21},"name":"map_pixel","qualname":"<NeuQuant>::map_pixel","value":"fn (&self, pixel: &mut [u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Maps the pixel in-place to the best-matching color in the color map\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\math\\nq.rs","byte_start":6917,"byte_end":6934,"line_start":122,"line_end":122,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\math\\nq.rs","byte_start":7507,"byte_end":7515,"line_start":138,"line_end":138,"column_start":12,"column_end":20},"name":"index_of","qualname":"<NeuQuant>::index_of","value":"fn (&self, pixel: &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Finds the best-matching index in the color map for `pixel`\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\math\\nq.rs","byte_start":7478,"byte_end":7495,"line_start":137,"line_end":137,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\math\\utils.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::math::utils","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\math\\utils.rs","parent":null,"children":[{"krate":0,"index":132}],"decl_id":null,"docs":" Shared mathematical utility functions.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\math\\utils.rs","byte_start":17478,"byte_end":17483,"line_start":13,"line_end":13,"column_start":8,"column_end":13},"name":"clamp","qualname":"::math::utils::clamp","value":"fn <N> (a: N, min: N, max: N) -> N","parent":null,"children":[],"decl_id":null,"docs":" Cut value to be inside given range","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\math\\utils.rs","byte_start":17461,"byte_end":17470,"line_start":12,"line_end":12,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"imageops","qualname":"::imageops","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":148},{"krate":0,"index":154},{"krate":0,"index":160},{"krate":0,"index":170},{"krate":0,"index":185},{"krate":0,"index":248},{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":339}],"decl_id":null,"docs":" Image Processing Functions\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\affine.rs","byte_start":25249,"byte_end":25257,"line_start":8,"line_end":8,"column_start":8,"column_end":16},"name":"rotate90","qualname":"::imageops::affine::rotate90","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\affine.rs","byte_start":25835,"byte_end":25844,"line_start":30,"line_end":30,"column_start":8,"column_end":17},"name":"rotate180","qualname":"::imageops::affine::rotate180","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\affine.rs","byte_start":26434,"byte_end":26443,"line_start":52,"line_end":52,"column_start":8,"column_end":17},"name":"rotate270","qualname":"::imageops::affine::rotate270","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\affine.rs","byte_start":27008,"byte_end":27023,"line_start":74,"line_end":74,"column_start":8,"column_end":23},"name":"flip_horizontal","qualname":"::imageops::affine::flip_horizontal","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\affine.rs","byte_start":27586,"byte_end":27599,"line_start":96,"line_end":96,"column_start":8,"column_end":21},"name":"flip_vertical","qualname":"::imageops::affine::flip_vertical","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\colorops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"colorops","qualname":"::imageops::colorops","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\colorops.rs","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":213},{"krate":0,"index":219},{"krate":0,"index":224},{"krate":0,"index":2808},{"krate":0,"index":2811},{"krate":0,"index":2810},{"krate":0,"index":228},{"krate":0,"index":232},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":245}],"decl_id":null,"docs":" Functions for altering and converting the color of pixelbufs\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\colorops.rs","byte_start":31732,"byte_end":31741,"line_start":15,"line_end":15,"column_start":8,"column_end":17},"name":"grayscale","qualname":"::imageops::colorops::grayscale","value":"fn <I> (image: &I) -> ImageBuffer<Luma<Subpixel<I>>, Vec<Subpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to grayscale\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\colorops.rs","byte_start":32280,"byte_end":32286,"line_start":37,"line_end":37,"column_start":8,"column_end":14},"name":"invert","qualname":"::imageops::colorops::invert","value":"fn <I> (image: &mut I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invert each pixel within the supplied image.\n This function operates in place.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\colorops.rs","byte_start":32749,"byte_end":32757,"line_start":53,"line_end":53,"column_start":8,"column_end":16},"name":"contrast","qualname":"::imageops::colorops::contrast","value":"fn <I, P, S> (image: &I, contrast: f32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of the supplied image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\colorops.rs","byte_start":33732,"byte_end":33740,"line_start":88,"line_end":88,"column_start":8,"column_end":16},"name":"brighten","qualname":"::imageops::colorops::brighten","value":"fn <I, P, S> (image: &I, value: i32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Brighten the supplied image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\colorops.rs","byte_start":34726,"byte_end":34735,"line_start":123,"line_end":123,"column_start":8,"column_end":17},"name":"huerotate","qualname":"::imageops::colorops::huerotate","value":"fn <I, P, S> (image: &I, value: i32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\colorops.rs","byte_start":36649,"byte_end":36657,"line_start":180,"line_end":180,"column_start":11,"column_end":19},"name":"ColorMap","qualname":"::imageops::colorops::ColorMap","value":"ColorMap","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227}],"decl_id":null,"docs":" A color map\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\colorops.rs","byte_start":36721,"byte_end":36726,"line_start":182,"line_end":182,"column_start":10,"column_end":15},"name":"Color","qualname":"::imageops::colorops::ColorMap::Color","value":"type Color;","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":" The color type on which the map operates on\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\colorops.rs","byte_start":36818,"byte_end":36826,"line_start":185,"line_end":185,"column_start":8,"column_end":16},"name":"index_of","qualname":"::imageops::colorops::ColorMap::index_of","value":"fn (&self, color: &Self::Color) -> usize","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":" Returns the index of the closed match of `color`\n in the color map.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\colorops.rs","byte_start":36932,"byte_end":36941,"line_start":187,"line_end":187,"column_start":8,"column_end":17},"name":"map_color","qualname":"::imageops::colorops::ColorMap::map_color","value":"fn (&self, color: &mut Self::Color) -> ()","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":" Maps `color` to the closest color in the color map.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2808},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\colorops.rs","byte_start":37037,"byte_end":37044,"line_start":192,"line_end":192,"column_start":12,"column_end":19},"name":"BiLevel","qualname":"::imageops::colorops::BiLevel","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bi-level color map\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\colorops.rs","byte_start":38909,"byte_end":38915,"line_start":258,"line_end":258,"column_start":8,"column_end":14},"name":"dither","qualname":"::imageops::colorops::dither","value":"fn <Pix, Map> (image: &mut ImageBuffer<Pix, Vec<u8>>, color_map: &Map) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors of the image using the supplied `color_map` while applying\n Floyd-Steinberg dithering to improve the visual conception\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\colorops.rs","byte_start":40460,"byte_end":40472,"line_start":296,"line_end":296,"column_start":8,"column_end":20},"name":"index_colors","qualname":"::imageops::colorops::index_colors","value":"fn <Pix, Map> (image: &ImageBuffer<Pix, Vec<u8>>, color_map: &Map) -> ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors using the supplied `color_map` and returns an image of the indices\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2814},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\sample.rs","byte_start":41758,"byte_end":41765,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::imageops::sample::FilterType::Nearest","value":"FilterType::Nearest","parent":{"krate":0,"index":2813},"children":[],"decl_id":null,"docs":" Nearest Neighbor\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2816},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\sample.rs","byte_start":41794,"byte_end":41802,"line_start":22,"line_end":22,"column_start":5,"column_end":13},"name":"Triangle","qualname":"::imageops::sample::FilterType::Triangle","value":"FilterType::Triangle","parent":{"krate":0,"index":2813},"children":[],"decl_id":null,"docs":" Linear Filter\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2818},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\sample.rs","byte_start":41830,"byte_end":41840,"line_start":25,"line_end":25,"column_start":5,"column_end":15},"name":"CatmullRom","qualname":"::imageops::sample::FilterType::CatmullRom","value":"FilterType::CatmullRom","parent":{"krate":0,"index":2813},"children":[],"decl_id":null,"docs":" Cubic Filter\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2820},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\sample.rs","byte_start":41871,"byte_end":41879,"line_start":28,"line_end":28,"column_start":5,"column_end":13},"name":"Gaussian","qualname":"::imageops::sample::FilterType::Gaussian","value":"FilterType::Gaussian","parent":{"krate":0,"index":2813},"children":[],"decl_id":null,"docs":" Gaussian Filter\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2822},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\sample.rs","byte_start":41916,"byte_end":41924,"line_start":31,"line_end":31,"column_start":5,"column_end":13},"name":"Lanczos3","qualname":"::imageops::sample::FilterType::Lanczos3","value":"FilterType::Lanczos3","parent":{"krate":0,"index":2813},"children":[],"decl_id":null,"docs":" Lanczos with window 3\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2813},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\sample.rs","byte_start":41716,"byte_end":41726,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::imageops::sample::FilterType","value":"FilterType::{Nearest, Triangle, CatmullRom, Gaussian, Lanczos3}","parent":null,"children":[{"krate":0,"index":2814},{"krate":0,"index":2816},{"krate":0,"index":2818},{"krate":0,"index":2820},{"krate":0,"index":2822}],"decl_id":null,"docs":" Available Sampling Filters\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\sample.rs","byte_start":51479,"byte_end":51488,"line_start":330,"line_end":330,"column_start":8,"column_end":17},"name":"thumbnail","qualname":"::imageops::sample::thumbnail","value":"fn <I, P, S> (image: &I, new_width: u32, new_height: u32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specific dimensions.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\sample.rs","byte_start":59438,"byte_end":59447,"line_start":570,"line_end":570,"column_start":8,"column_end":17},"name":"filter3x3","qualname":"::imageops::sample::filter3x3","value":"fn <I, P, S> (image: &I, kernel: &[f32]) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Perform a 3x3 box filter on the supplied image.\n ```kernel``` is an array of the filter weights of length 9.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\sample.rs","byte_start":61954,"byte_end":61960,"line_start":651,"line_end":651,"column_start":8,"column_end":14},"name":"resize","qualname":"::imageops::sample::resize","value":"fn <I> (image: &I, nwidth: u32, nheight: u32, filter: FilterType) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specified dimensions.\n ```nwidth``` and ```nheight``` are the new dimensions.\n ```filter``` is the sampling filter to use.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\sample.rs","byte_start":63166,"byte_end":63170,"line_start":691,"line_end":691,"column_start":8,"column_end":12},"name":"blur","qualname":"::imageops::sample::blur","value":"fn <I> (image: &I, sigma: f32) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on the supplied image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\sample.rs","byte_start":64117,"byte_end":64126,"line_start":720,"line_end":720,"column_start":8,"column_end":17},"name":"unsharpen","qualname":"::imageops::sample::unsharpen","value":"fn <I, P, S> (image: &I, sigma: f32, threshold: i32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on the supplied image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is the threshold for the difference between","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":18428,"byte_end":18432,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"crop","qualname":"::imageops::crop","value":"fn <I> (image: &mut I, x: u32, y: u32, width: u32, height: u32) -> SubImage<&mut I>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view into an image\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":20994,"byte_end":21008,"line_start":102,"line_end":102,"column_start":8,"column_end":22},"name":"overlay_bounds","qualname":"::imageops::overlay_bounds","value":"fn ((bottom_width, bottom_height): (u32, u32), (top_width, top_height): (u32, u32), x: u32, y: u32) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Calculate the region that can be copied from top to bottom.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":21523,"byte_end":21530,"line_start":120,"line_end":120,"column_start":8,"column_end":15},"name":"overlay","qualname":"::imageops::overlay","value":"fn <I> (bottom: &mut I, top: &I, x: u32, y: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Overlay an image at a given coordinate (x, y)\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":22203,"byte_end":22210,"line_start":139,"line_end":139,"column_start":8,"column_end":15},"name":"replace","qualname":"::imageops::replace","value":"fn <I> (bottom: &mut I, top: &I, x: u32, y: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replace the contents of an image at a given coordinate (x, y)\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"flat","qualname":"::flat","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":2829},{"krate":0,"index":2837},{"krate":0,"index":2834},{"krate":0,"index":2840},{"krate":0,"index":2858},{"krate":0,"index":2857},{"krate":0,"index":2855},{"krate":0,"index":2852},{"krate":0,"index":2850},{"krate":0,"index":2847},{"krate":0,"index":2860},{"krate":0,"index":2884},{"krate":0,"index":2883},{"krate":0,"index":2881},{"krate":0,"index":2878},{"krate":0,"index":2876},{"krate":0,"index":2866},{"krate":0,"index":2864},{"krate":0,"index":357},{"krate":0,"index":380},{"krate":0,"index":384},{"krate":0,"index":2886},{"krate":0,"index":2895},{"krate":0,"index":2891},{"krate":0,"index":2899},{"krate":0,"index":2908},{"krate":0,"index":2904},{"krate":0,"index":2912},{"krate":0,"index":2932},{"krate":0,"index":2931},{"krate":0,"index":2929},{"krate":0,"index":2926},{"krate":0,"index":2924},{"krate":0,"index":2921},{"krate":0,"index":2934},{"krate":0,"index":2955},{"krate":0,"index":2954},{"krate":0,"index":2952},{"krate":0,"index":2950},{"krate":0,"index":2948},{"krate":0,"index":2945},{"krate":0,"index":426},{"krate":0,"index":439},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":458},{"krate":0,"index":462},{"krate":0,"index":474},{"krate":0,"index":486},{"krate":0,"index":494},{"krate":0,"index":496}],"decl_id":null,"docs":" Image representations for ffi.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2829},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":69140,"byte_end":69151,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"FlatSamples","qualname":"::flat::FlatSamples","value":"FlatSamples { samples, layout, color_hint }","parent":null,"children":[{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2833}],"decl_id":null,"docs":" A flat buffer over a (multi channel) image.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2831},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":69229,"byte_end":69236,"line_start":67,"line_end":67,"column_start":9,"column_end":16},"name":"samples","qualname":"::flat::FlatSamples::samples","value":"Buffer","parent":{"krate":0,"index":2829},"children":[],"decl_id":null,"docs":" Underlying linear container holding sample values.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2832},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":69320,"byte_end":69326,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"name":"layout","qualname":"::flat::FlatSamples::layout","value":"flat::SampleLayout","parent":{"krate":0,"index":2829},"children":[],"decl_id":null,"docs":" A `repr(C)` description of the layout of buffer samples.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2833},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":69781,"byte_end":69791,"line_start":78,"line_end":78,"column_start":9,"column_end":19},"name":"color_hint","qualname":"::flat::FlatSamples::color_hint","value":"std::option::Option<color::ColorType>","parent":{"krate":0,"index":2829},"children":[],"decl_id":null,"docs":" Supplementary color information.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2840},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":69941,"byte_end":69953,"line_start":84,"line_end":84,"column_start":12,"column_end":24},"name":"SampleLayout","qualname":"::flat::SampleLayout","value":"SampleLayout { channels, channel_stride, width, width_stride, height, height_stride }","parent":null,"children":[{"krate":0,"index":2841},{"krate":0,"index":2842},{"krate":0,"index":2843},{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2846}],"decl_id":null,"docs":" A ffi compatible description of a sample buffer.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":69868,"byte_end":69878,"line_start":82,"line_end":82,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2841},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":70037,"byte_end":70045,"line_start":86,"line_end":86,"column_start":9,"column_end":17},"name":"channels","qualname":"::flat::SampleLayout::channels","value":"u8","parent":{"krate":0,"index":2840},"children":[],"decl_id":null,"docs":" The number of channels in the color representation of the image.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2842},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":70131,"byte_end":70145,"line_start":89,"line_end":89,"column_start":9,"column_end":23},"name":"channel_stride","qualname":"::flat::SampleLayout::channel_stride","value":"usize","parent":{"krate":0,"index":2840},"children":[],"decl_id":null,"docs":" Add this to an index to get to the sample in the next channel.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2843},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":70207,"byte_end":70212,"line_start":92,"line_end":92,"column_start":9,"column_end":14},"name":"width","qualname":"::flat::SampleLayout::width","value":"u32","parent":{"krate":0,"index":2840},"children":[],"decl_id":null,"docs":" The width of the represented image.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2844},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":70299,"byte_end":70311,"line_start":95,"line_end":95,"column_start":9,"column_end":21},"name":"width_stride","qualname":"::flat::SampleLayout::width_stride","value":"usize","parent":{"krate":0,"index":2840},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in x-direction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2845},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":70374,"byte_end":70380,"line_start":98,"line_end":98,"column_start":9,"column_end":15},"name":"height","qualname":"::flat::SampleLayout::height","value":"u32","parent":{"krate":0,"index":2840},"children":[],"decl_id":null,"docs":" The height of the represented image.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2846},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":70467,"byte_end":70480,"line_start":101,"line_end":101,"column_start":9,"column_end":22},"name":"height_stride","qualname":"::flat::SampleLayout::height_stride","value":"usize","parent":{"krate":0,"index":2840},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in y-direction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":71455,"byte_end":71471,"line_start":125,"line_end":125,"column_start":12,"column_end":28},"name":"row_major_packed","qualname":"<SampleLayout>::row_major_packed","value":"fn (channels: u8, width: u32, height: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a row-major image packed in all directions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":72722,"byte_end":72741,"line_start":154,"line_end":154,"column_start":12,"column_end":31},"name":"column_major_packed","qualname":"<SampleLayout>::column_major_packed","value":"fn (channels: u8, width: u32, height: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a column-major image packed in all directions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":73357,"byte_end":73368,"line_start":171,"line_end":171,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<SampleLayout>::strides_cwh","value":"fn (&self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":73685,"byte_end":73692,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"extents","qualname":"<SampleLayout>::extents","value":"fn (&self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":74066,"byte_end":74072,"line_start":187,"line_end":187,"column_start":12,"column_end":18},"name":"bounds","qualname":"<SampleLayout>::bounds","value":"fn (&self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":76227,"byte_end":76237,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"min_length","qualname":"<SampleLayout>::min_length","value":"fn (&self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.\n \n This method will allow zero strides, allowing compact representations of monochrome images.\n To check that no aliasing occurs, try `check_alias_invariants`. For compact images (no\n aliasing and no unindexed samples) this is `width*height*channels`. But for both of the\n other cases, the reasoning is slightly more involved.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":76569,"byte_end":76573,"line_start":252,"line_end":252,"column_start":12,"column_end":16},"name":"fits","qualname":"<SampleLayout>::fits","value":"fn (&self, len: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":77691,"byte_end":77710,"line_start":277,"line_end":277,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<SampleLayout>::has_aliased_samples","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":78955,"byte_end":78964,"line_start":307,"line_end":307,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<SampleLayout>::is_normal","value":"fn (&self, form: NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":80682,"byte_end":80691,"line_start":362,"line_end":362,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<SampleLayout>::in_bounds","value":"fn (&self, channel: u8, x: u32, y: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":80972,"byte_end":80977,"line_start":369,"line_end":369,"column_start":12,"column_end":17},"name":"index","qualname":"<SampleLayout>::index","value":"fn (&self, channel: u8, x: u32, y: u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":81571,"byte_end":81592,"line_start":382,"line_end":382,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<SampleLayout>::index_ignoring_bounds","value":"fn (&self, channel: usize, x: usize, y: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (channel, x, y).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":82523,"byte_end":82538,"line_start":403,"line_end":403,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<SampleLayout>::in_bounds_index","value":"fn (&self, c: u8, x: u32, y: u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":83066,"byte_end":83075,"line_start":414,"line_end":414,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<SampleLayout>::shrink_to","value":"fn (&mut self, channels: u8, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":83748,"byte_end":83759,"line_start":441,"line_end":441,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<FlatSamples<Buffer>>::strides_cwh","value":"fn (&self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":84041,"byte_end":84048,"line_start":449,"line_end":449,"column_start":12,"column_end":19},"name":"extents","qualname":"<FlatSamples<Buffer>>::extents","value":"fn (&self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":84376,"byte_end":84382,"line_start":457,"line_end":457,"column_start":12,"column_end":18},"name":"bounds","qualname":"<FlatSamples<Buffer>>::bounds","value":"fn (&self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":84496,"byte_end":84502,"line_start":462,"line_end":462,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<FlatSamples<Buffer>>::as_ref","value":"fn <T> (&self) -> FlatSamples<&[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference based version.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":84776,"byte_end":84782,"line_start":471,"line_end":471,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<FlatSamples<Buffer>>::as_mut","value":"fn <T> (&mut self) -> FlatSamples<&mut [T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference based version.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":85061,"byte_end":85067,"line_start":480,"line_end":480,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<FlatSamples<Buffer>>::to_vec","value":"fn <T> (&self) -> FlatSamples<Vec<T>>","parent":null,"children":[],"decl_id":null,"docs":" Copy the data into an owned vector.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":86343,"byte_end":86353,"line_start":511,"line_end":511,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<FlatSamples<Buffer>>::get_sample","value":"fn <T> (&self, channel: u8, x: u32, y: u32) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a single sample.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":87952,"byte_end":87966,"line_start":544,"line_end":544,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<FlatSamples<Buffer>>::get_mut_sample","value":"fn <T> (&mut self, channel: u8, x: u32, y: u32) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a single sample.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":88637,"byte_end":88644,"line_start":559,"line_end":559,"column_start":12,"column_end":19},"name":"as_view","qualname":"<FlatSamples<Buffer>>::as_view","value":"fn <P> (&self) -> Result<View<&[P::Subpixel], P>, Error>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer as an image over some type of pixel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":90226,"byte_end":90250,"line_start":596,"line_end":596,"column_start":12,"column_end":36},"name":"as_view_with_mut_samples","qualname":"<FlatSamples<Buffer>>::as_view_with_mut_samples","value":"fn <P> (&mut self) -> Result<View<&mut [P::Subpixel], P>, Error>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer but keep mutability at a sample level.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":91617,"byte_end":91628,"line_start":629,"line_end":629,"column_start":12,"column_end":23},"name":"as_view_mut","qualname":"<FlatSamples<Buffer>>::as_view_mut","value":"fn <P> (&mut self) -> Result<ViewMut<&mut [P::Subpixel], P>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Interpret this buffer as a mutable image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":92629,"byte_end":92637,"line_start":659,"line_end":659,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<FlatSamples<Buffer>>::as_slice","value":"fn <T> (&self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":92948,"byte_end":92960,"line_start":667,"line_end":667,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<FlatSamples<Buffer>>::as_mut_slice","value":"fn <T> (&mut self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":93391,"byte_end":93402,"line_start":676,"line_end":676,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<FlatSamples<Buffer>>::image_slice","value":"fn <T> (&self) -> Option<&[T]>","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":93819,"byte_end":93834,"line_start":691,"line_end":691,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<FlatSamples<Buffer>>::image_mut_slice","value":"fn <T> (&mut self) -> Option<&mut [T]>","parent":null,"children":[],"decl_id":null,"docs":" Mutable portion of the buffer that holds sample values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":94488,"byte_end":94503,"line_start":710,"line_end":710,"column_start":12,"column_end":27},"name":"try_into_buffer","qualname":"<FlatSamples<Buffer>>::try_into_buffer","value":"fn <P> (self) -> Result<ImageBuffer<P, Buffer>, (Error, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Move the data into an image buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":97347,"byte_end":97357,"line_start":784,"line_end":784,"column_start":12,"column_end":22},"name":"min_length","qualname":"<FlatSamples<Buffer>>::min_length","value":"fn (&self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.\n \n This method will allow zero strides, allowing compact representations of monochrome images.\n To check that no aliasing occurs, try `check_alias_invariants`. For compact images (no\n aliasing and no unindexed samples) this is `width*height*channels`. But for both of the\n other cases, the reasoning is slightly more involved.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":97494,"byte_end":97498,"line_start":789,"line_end":789,"column_start":12,"column_end":16},"name":"fits","qualname":"<FlatSamples<Buffer>>::fits","value":"fn (&self, len: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":97919,"byte_end":97938,"line_start":798,"line_end":798,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<FlatSamples<Buffer>>::has_aliased_samples","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":98519,"byte_end":98528,"line_start":809,"line_end":809,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<FlatSamples<Buffer>>::is_normal","value":"fn (&self, form: NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":98953,"byte_end":98962,"line_start":818,"line_end":818,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<FlatSamples<Buffer>>::in_bounds","value":"fn (&self, channel: u8, x: u32, y: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":99212,"byte_end":99217,"line_start":825,"line_end":825,"column_start":12,"column_end":17},"name":"index","qualname":"<FlatSamples<Buffer>>::index","value":"fn (&self, channel: u8, x: u32, y: u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":99696,"byte_end":99717,"line_start":834,"line_end":834,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<FlatSamples<Buffer>>::index_ignoring_bounds","value":"fn (&self, channel: usize, x: usize, y: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (x, y, channel).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":100149,"byte_end":100164,"line_start":843,"line_end":843,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<FlatSamples<Buffer>>::in_bounds_index","value":"fn (&self, channel: u8, x: u32, y: u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":100599,"byte_end":100608,"line_start":852,"line_end":852,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<FlatSamples<Buffer>>::shrink_to","value":"fn (&mut self, channels: u8, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2886},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":101427,"byte_end":101431,"line_start":872,"line_end":872,"column_start":12,"column_end":16},"name":"View","qualname":"::flat::View","value":"View {  }","parent":null,"children":[{"krate":0,"index":2889},{"krate":0,"index":2890}],"decl_id":null,"docs":" A flat buffer that can be used as an image view.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2899},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":102280,"byte_end":102287,"line_start":895,"line_end":895,"column_start":12,"column_end":19},"name":"ViewMut","qualname":"::flat::ViewMut","value":"ViewMut {  }","parent":null,"children":[{"krate":0,"index":2902},{"krate":0,"index":2903}],"decl_id":null,"docs":" A mutable owning version of a flat buffer.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2913},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":102998,"byte_end":103006,"line_start":914,"line_end":914,"column_start":5,"column_end":13},"name":"TooLarge","qualname":"::flat::Error::TooLarge","value":"Error::TooLarge","parent":{"krate":0,"index":2912},"children":[],"decl_id":null,"docs":" The represented image was too large.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2915},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":103163,"byte_end":103181,"line_start":919,"line_end":919,"column_start":5,"column_end":23},"name":"NormalFormRequired","qualname":"::flat::Error::NormalFormRequired","value":"Error::NormalFormRequired(NormalForm)","parent":{"krate":0,"index":2912},"children":[],"decl_id":null,"docs":" The represented image can not use this representation.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2918},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":103790,"byte_end":103800,"line_start":930,"line_end":930,"column_start":5,"column_end":15},"name":"WrongColor","qualname":"::flat::Error::WrongColor","value":"Error::WrongColor(ColorType)","parent":{"krate":0,"index":2912},"children":[],"decl_id":null,"docs":" The color format did not match the channel count.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2912},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":102863,"byte_end":102868,"line_start":910,"line_end":910,"column_start":10,"column_end":15},"name":"Error","qualname":"::flat::Error","value":"Error::{TooLarge, NormalFormRequired, WrongColor}","parent":null,"children":[{"krate":0,"index":2913},{"krate":0,"index":2915},{"krate":0,"index":2918}],"decl_id":null,"docs":" Denotes invalid flat sample buffers when trying to convert to stricter types.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2935},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":104300,"byte_end":104309,"line_start":943,"line_end":943,"column_start":5,"column_end":14},"name":"Unaliased","qualname":"::flat::NormalForm::Unaliased","value":"NormalForm::Unaliased","parent":{"krate":0,"index":2934},"children":[],"decl_id":null,"docs":" No pixel aliases another.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2937},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":104539,"byte_end":104550,"line_start":949,"line_end":949,"column_start":5,"column_end":16},"name":"PixelPacked","qualname":"::flat::NormalForm::PixelPacked","value":"NormalForm::PixelPacked","parent":{"krate":0,"index":2934},"children":[],"decl_id":null,"docs":" At least pixels are packed.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2939},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":104834,"byte_end":104845,"line_start":956,"line_end":956,"column_start":5,"column_end":16},"name":"ImagePacked","qualname":"::flat::NormalForm::ImagePacked","value":"NormalForm::ImagePacked","parent":{"krate":0,"index":2934},"children":[],"decl_id":null,"docs":" All samples are packed.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2941},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":105056,"byte_end":105070,"line_start":962,"line_end":962,"column_start":5,"column_end":19},"name":"RowMajorPacked","qualname":"::flat::NormalForm::RowMajorPacked","value":"NormalForm::RowMajorPacked","parent":{"krate":0,"index":2934},"children":[],"decl_id":null,"docs":" The samples are in row-major form and all samples are packed.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2943},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":105287,"byte_end":105304,"line_start":968,"line_end":968,"column_start":5,"column_end":22},"name":"ColumnMajorPacked","qualname":"::flat::NormalForm::ColumnMajorPacked","value":"NormalForm::ColumnMajorPacked","parent":{"krate":0,"index":2934},"children":[],"decl_id":null,"docs":" The samples are in column-major form and all samples are packed.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2934},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":104060,"byte_end":104070,"line_start":938,"line_end":938,"column_start":10,"column_end":20},"name":"NormalForm","qualname":"::flat::NormalForm","value":"NormalForm::{Unaliased, PixelPacked, ImagePacked, RowMajorPacked, ColumnMajorPacked}","parent":null,"children":[{"krate":0,"index":2935},{"krate":0,"index":2937},{"krate":0,"index":2939},{"krate":0,"index":2941},{"krate":0,"index":2943}],"decl_id":null,"docs":" Different normal forms of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":105514,"byte_end":105524,"line_start":978,"line_end":978,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<View<Buffer, P>>::into_inner","value":"fn (self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":106007,"byte_end":106011,"line_start":988,"line_end":988,"column_start":12,"column_end":16},"name":"flat","qualname":"<View<Buffer, P>>::flat","value":"fn (&self) -> &FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner sample descriptor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":106290,"byte_end":106297,"line_start":996,"line_end":996,"column_start":12,"column_end":19},"name":"samples","qualname":"<View<Buffer, P>>::samples","value":"fn (&self) -> &Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":106616,"byte_end":106626,"line_start":1004,"line_end":1004,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<View<Buffer, P>>::get_sample","value":"fn (&self, channel: u8, x: u32, y: u32) -> Option<&P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":107500,"byte_end":107514,"line_start":1022,"line_end":1022,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<View<Buffer, P>>::get_mut_sample","value":"fn (&mut self, channel: u8, x: u32, y: u32) -> Option<&mut P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":108092,"byte_end":108102,"line_start":1037,"line_end":1037,"column_start":12,"column_end":22},"name":"min_length","qualname":"<View<Buffer, P>>::min_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":108436,"byte_end":108447,"line_start":1045,"line_end":1045,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<View<Buffer, P>>::image_slice","value":"fn (&self) -> &[P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":108904,"byte_end":108919,"line_start":1054,"line_end":1054,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<View<Buffer, P>>::image_mut_slice","value":"fn (&mut self) -> &mut [P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable portion of the buffer that holds sample values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":109443,"byte_end":109452,"line_start":1066,"line_end":1066,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<View<Buffer, P>>::shrink_to","value":"fn (&mut self, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":110437,"byte_end":110448,"line_start":1088,"line_end":1088,"column_start":12,"column_end":23},"name":"try_upgrade","qualname":"<View<Buffer, P>>::try_upgrade","value":"fn (self) -> Result<ViewMut<Buffer, P>, (Error, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this into an image with mutable pixels.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":111091,"byte_end":111101,"line_start":1110,"line_end":1110,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ViewMut<Buffer, P>>::into_inner","value":"fn (self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":111585,"byte_end":111589,"line_start":1120,"line_end":1120,"column_start":12,"column_end":16},"name":"flat","qualname":"<ViewMut<Buffer, P>>::flat","value":"fn (&self) -> &FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the sample buffer descriptor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":111962,"byte_end":111969,"line_start":1129,"line_end":1129,"column_start":12,"column_end":19},"name":"samples","qualname":"<ViewMut<Buffer, P>>::samples","value":"fn (&self) -> &Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":112211,"byte_end":112221,"line_start":1136,"line_end":1136,"column_start":12,"column_end":22},"name":"min_length","qualname":"<ViewMut<Buffer, P>>::min_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":112532,"byte_end":112542,"line_start":1144,"line_end":1144,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<ViewMut<Buffer, P>>::get_sample","value":"fn (&self, channel: u8, x: u32, y: u32) -> Option<&P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":113167,"byte_end":113181,"line_start":1160,"line_end":1160,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<ViewMut<Buffer, P>>::get_mut_sample","value":"fn (&mut self, channel: u8, x: u32, y: u32) -> Option<&mut P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected sample.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":113792,"byte_end":113803,"line_start":1174,"line_end":1174,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<ViewMut<Buffer, P>>::image_slice","value":"fn (&self) -> &[P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":114002,"byte_end":114017,"line_start":1179,"line_end":1179,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<ViewMut<Buffer, P>>::image_mut_slice","value":"fn (&mut self) -> &mut [P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable buffer that holds sample values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":114485,"byte_end":114494,"line_start":1189,"line_end":1189,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<ViewMut<Buffer, P>>::shrink_to","value":"fn (&mut self, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bmp","qualname":"::bmp","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\mod.rs","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":673}],"decl_id":null,"docs":"  Decoding and Encoding of BMP Images","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":2113,"byte_end":2136,"line_start":82,"line_end":82,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":587},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\decoder.rs","byte_start":138838,"byte_end":138848,"line_start":395,"line_end":395,"column_start":12,"column_end":22},"name":"BMPDecoder","qualname":"::bmp::decoder::BMPDecoder","value":"BMPDecoder {  }","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"decl_id":null,"docs":" A bmp decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\decoder.rs","byte_start":141411,"byte_end":141414,"line_start":482,"line_end":482,"column_start":12,"column_end":15},"name":"new","qualname":"<BMPDecoder<R>>::new","value":"fn (r: R) -> ImageResult<BMPDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\decoder.rs","byte_start":152077,"byte_end":152104,"line_start":791,"line_end":791,"column_start":12,"column_end":39},"name":"read_metadata_in_ico_format","qualname":"<BMPDecoder<R>>::read_metadata_in_ico_format","value":"fn (&mut self) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\decoder.rs","byte_start":152023,"byte_end":152046,"line_start":789,"line_end":789,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\encoder.rs","byte_start":173754,"byte_end":173764,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"BMPEncoder","qualname":"::bmp::encoder::BMPEncoder","value":"BMPEncoder {  }","parent":null,"children":[{"krate":0,"index":687}],"decl_id":null,"docs":" The representation of a BMP encoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\encoder.rs","byte_start":173923,"byte_end":173926,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<BMPEncoder>::new","value":"fn (w: &'a mut W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\encoder.rs","byte_start":174134,"byte_end":174140,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"encode","qualname":"<BMPEncoder>::encode","value":"fn (&mut self, image: &[u8], width: u32, height: u32, c: color::ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dxt","qualname":"::dxt","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":3030},{"krate":0,"index":3044},{"krate":0,"index":3043},{"krate":0,"index":3041},{"krate":0,"index":3039},{"krate":0,"index":3037},{"krate":0,"index":715},{"krate":0,"index":719},{"krate":0,"index":726},{"krate":0,"index":730},{"krate":0,"index":738},{"krate":0,"index":744},{"krate":0,"index":748},{"krate":0,"index":752},{"krate":0,"index":755},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":768},{"krate":0,"index":771},{"krate":0,"index":773},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":778},{"krate":0,"index":780},{"krate":0,"index":782},{"krate":0,"index":793},{"krate":0,"index":797},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":805},{"krate":0,"index":807}],"decl_id":null,"docs":"  Decoding of DXT (S3TC) compression","sig":null,"attributes":[{"value":"cfg(feature = \"dxt\")","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":2150,"byte_end":2173,"line_start":84,"line_end":84,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3031},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","byte_start":185695,"byte_end":185699,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"DXT1","qualname":"::dxt::DXTVariant::DXT1","value":"DXTVariant::DXT1","parent":{"krate":0,"index":3030},"children":[],"decl_id":null,"docs":" The DXT1 format. 48 bytes of RGB data in a 4x4 pixel square is\n compressed into an 8 byte block of DXT1 data\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3033},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","byte_start":185830,"byte_end":185834,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"DXT3","qualname":"::dxt::DXTVariant::DXT3","value":"DXTVariant::DXT3","parent":{"krate":0,"index":3030},"children":[],"decl_id":null,"docs":" The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel square is\n compressed into a 16 byte block of DXT3 data\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3035},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","byte_start":185965,"byte_end":185969,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"name":"DXT5","qualname":"::dxt::DXTVariant::DXT5","value":"DXTVariant::DXT5","parent":{"krate":0,"index":3030},"children":[],"decl_id":null,"docs":" The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel square is\n compressed into a 16 byte block of DXT5 data\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3030},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","byte_start":185554,"byte_end":185564,"line_start":19,"line_end":19,"column_start":10,"column_end":20},"name":"DXTVariant","qualname":"::dxt::DXTVariant","value":"DXTVariant::{DXT1, DXT3, DXT5}","parent":null,"children":[{"krate":0,"index":3031},{"krate":0,"index":3033},{"krate":0,"index":3035}],"decl_id":null,"docs":" What version of DXT compression are we using?\n Note that DXT2 and DXT4 are left away as they're\n just DXT3 and DXT5 with premultiplied alpha\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","byte_start":186589,"byte_end":186598,"line_start":50,"line_end":50,"column_start":12,"column_end":21},"name":"colortype","qualname":"<DXTVariant>::colortype","value":"fn (self) -> ColorType","parent":null,"children":[],"decl_id":null,"docs":" Returns the colortype that is stored in this DXT variant\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","byte_start":186809,"byte_end":186819,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"DXTDecoder","qualname":"::dxt::DXTDecoder","value":"DXTDecoder {  }","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725}],"decl_id":null,"docs":" DXT decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","byte_start":187399,"byte_end":187402,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<DXTDecoder<R>>::new","value":"fn (r: R, width: u32, height: u32, variant: DXTVariant) -> Result<DXTDecoder<R>, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new DXT decoder that decodes from the stream ```r```.\n As DXT is often stored as raw buffers with the width/height\n somewhere else the width and height of the image need\n to be passed in ```width``` and ```height```, as well as the\n DXT variant in ```variant```.\n width and height are required to be powers of 2 and at least 4.\n otherwise an error will be returned\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","byte_start":190616,"byte_end":190625,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"DXTReader","qualname":"::dxt::DXTReader","value":"DXTReader {  }","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":747}],"decl_id":null,"docs":" DXT reader\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":752},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","byte_start":190945,"byte_end":190955,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"DXTEncoder","qualname":"::dxt::DXTEncoder","value":"DXTEncoder {  }","parent":null,"children":[{"krate":0,"index":754}],"decl_id":null,"docs":" DXT encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","byte_start":191086,"byte_end":191089,"line_start":196,"line_end":196,"column_start":12,"column_end":15},"name":"new","qualname":"<DXTEncoder<W>>::new","value":"fn (w: W) -> DXTEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","byte_start":191352,"byte_end":191358,"line_start":204,"line_end":204,"column_start":12,"column_end":18},"name":"encode","qualname":"<DXTEncoder<W>>::encode","value":"fn (mut self, data: &[u8], width: u32, height: u32, variant: DXTVariant) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image data ```data```\n that has dimensions ```width``` and ```height```\n in ```DXTVariant``` ```variant```\n data is assumed to be in variant.colortype()\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":809},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gif","qualname":"::gif","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":817},{"krate":0,"index":820},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":838},{"krate":0,"index":841},{"krate":0,"index":848},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":866},{"krate":0,"index":870},{"krate":0,"index":874},{"krate":0,"index":885}],"decl_id":null,"docs":"  Decoding of GIF Images","sig":null,"attributes":[{"value":"cfg(feature = \"gif_codec\")","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":2187,"byte_end":2216,"line_start":86,"line_end":86,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","byte_start":214530,"byte_end":214537,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::gif::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":837}],"decl_id":null,"docs":" GIF decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","byte_start":214685,"byte_end":214688,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"fn (r: R) -> ImageResult<Decoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes the input steam ```r```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":870},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","byte_start":221144,"byte_end":221151,"line_start":245,"line_end":245,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::gif::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":873}],"decl_id":null,"docs":" GIF encoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","byte_start":221301,"byte_end":221304,"line_start":252,"line_end":252,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder<W>>::new","value":"fn (w: W) -> Encoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new GIF encoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","byte_start":221452,"byte_end":221458,"line_start":259,"line_end":259,"column_start":12,"column_end":18},"name":"encode","qualname":"<Encoder<W>>::encode","value":"fn (&mut self, frame: &Frame) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes a frame.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","byte_start":222108,"byte_end":222121,"line_start":274,"line_end":274,"column_start":12,"column_end":25},"name":"encode_frames","qualname":"<Encoder<W>>::encode_frames","value":"fn <F> (&mut self, frames: F) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes Frames.\n Consider using `try_encode_frames` instead to encode an `animation::Frames` like iterator.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","byte_start":222607,"byte_end":222624,"line_start":287,"line_end":287,"column_start":12,"column_end":29},"name":"try_encode_frames","qualname":"<Encoder<W>>::try_encode_frames","value":"fn <F> (&mut self, frames: F) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Try to encode a collection of `ImageResult<animation::Frame>` objects.\n Use this function to encode an `animation::Frames` like iterator.\n Whenever an `Err` item is encountered, that value is returned without further actions.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hdr","qualname":"::hdr","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\mod.rs","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":1033},{"krate":0,"index":1082},{"krate":0,"index":1083}],"decl_id":null,"docs":"  Decoding of Radiance HDR Images","sig":null,"attributes":[{"value":"cfg(feature = \"hdr\")","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":2230,"byte_end":2253,"line_start":88,"line_end":88,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":3046},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":224551,"byte_end":224561,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"HDRAdapter","qualname":"::hdr::decoder::HDRAdapter","value":"HDRAdapter {  }","parent":null,"children":[{"krate":0,"index":3048},{"krate":0,"index":3049},{"krate":0,"index":3050}],"decl_id":null,"docs":" Adapter to conform to ```ImageDecoder``` trait\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":224731,"byte_end":224734,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<HDRAdapter<R>>::new","value":"fn (r: R) -> ImageResult<HDRAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates adapter\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":225036,"byte_end":225049,"line_start":37,"line_end":37,"column_start":12,"column_end":25},"name":"new_nonstrict","qualname":"<HDRAdapter<R>>::new_nonstrict","value":"fn (r: R) -> ImageResult<HDRAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Allows reading old Radiance HDR images\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":934},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":227269,"byte_end":227278,"line_start":117,"line_end":117,"column_start":11,"column_end":20},"name":"SIGNATURE","qualname":"::hdr::decoder::SIGNATURE","value":"&[u8]","parent":null,"children":[],"decl_id":null,"docs":" Radiance HDR file signature\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3054},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":227396,"byte_end":227406,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"HDRDecoder","qualname":"::hdr::decoder::HDRDecoder","value":"HDRDecoder {  }","parent":null,"children":[{"krate":0,"index":3056},{"krate":0,"index":3057},{"krate":0,"index":3058},{"krate":0,"index":3059}],"decl_id":null,"docs":" An Radiance HDR decoder\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3063},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":227631,"byte_end":227641,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"RGBE8Pixel","qualname":"::hdr::decoder::RGBE8Pixel","value":"RGBE8Pixel { c, e }","parent":null,"children":[{"krate":0,"index":3064},{"krate":0,"index":3066}],"decl_id":null,"docs":" Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":227555,"byte_end":227565,"line_start":130,"line_end":130,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3064},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":227677,"byte_end":227678,"line_start":134,"line_end":134,"column_start":9,"column_end":10},"name":"c","qualname":"::hdr::decoder::RGBE8Pixel::c","value":"[u8; _]","parent":{"krate":0,"index":3063},"children":[],"decl_id":null,"docs":" Color components\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3066},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":227714,"byte_end":227715,"line_start":136,"line_end":136,"column_start":9,"column_end":10},"name":"e","qualname":"::hdr::decoder::RGBE8Pixel::e","value":"u8","parent":{"krate":0,"index":3063},"children":[],"decl_id":null,"docs":" Exponent\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":936},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":227776,"byte_end":227781,"line_start":140,"line_end":140,"column_start":8,"column_end":13},"name":"rgbe8","qualname":"::hdr::decoder::rgbe8","value":"fn (r: u8, g: u8, b: u8, e: u8) -> RGBE8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Creates ```RGBE8Pixel``` from components\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":227970,"byte_end":227976,"line_start":147,"line_end":147,"column_start":12,"column_end":18},"name":"to_hdr","qualname":"<RGBE8Pixel>::to_hdr","value":"fn (self) -> Rgb<f32>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```RGBE8Pixel``` into ```Rgb<f32>``` linearly\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":227949,"byte_end":227958,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":228736,"byte_end":228742,"line_start":169,"line_end":169,"column_start":12,"column_end":18},"name":"to_ldr","qualname":"<RGBE8Pixel>::to_ldr","value":"fn <T> (self) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```RGBE8Pixel``` into ```Rgb<T>``` with scale=1 and gamma=2.2","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":228715,"byte_end":228724,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":229128,"byte_end":229146,"line_start":182,"line_end":182,"column_start":12,"column_end":30},"name":"to_ldr_scale_gamma","qualname":"<RGBE8Pixel>::to_ldr_scale_gamma","value":"fn <T> (self, scale: f32, gamma: f32) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts RGBE8Pixel into Rgb<T> using provided scale and gamma","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":229107,"byte_end":229116,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":230333,"byte_end":230336,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"new","qualname":"<HDRDecoder<R>>::new","value":"fn (reader: R) -> ImageResult<HDRDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```r```\n if the header is valid, creates HDRDecoder\n strict mode is enabled\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":230744,"byte_end":230759,"line_start":224,"line_end":224,"column_start":12,"column_end":27},"name":"with_strictness","qualname":"<HDRDecoder<R>>::with_strictness","value":"fn (mut reader: R, strict: bool) -> ImageResult<HDRDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```reader```,\n if the header is valid, creates ```HDRDecoder```.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":233439,"byte_end":233447,"line_start":293,"line_end":293,"column_start":12,"column_end":20},"name":"metadata","qualname":"<HDRDecoder<R>>::metadata","value":"fn (&self) -> HDRMetadata","parent":null,"children":[],"decl_id":null,"docs":" Returns file metadata. Refer to ```HDRMetadata``` for details.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":233578,"byte_end":233595,"line_start":298,"line_end":298,"column_start":12,"column_end":29},"name":"read_image_native","qualname":"<HDRDecoder<R>>::read_image_native","value":"fn (mut self) -> ImageResult<Vec<RGBE8Pixel>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of RGBE8 pixels\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":234749,"byte_end":234769,"line_start":321,"line_end":321,"column_start":12,"column_end":32},"name":"read_image_transform","qualname":"<HDRDecoder<R>>::read_image_transform","value":"fn <T, F> (mut self, f: F) -> ImageResult<Vec<T>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of transformed pixels.","sig":null,"attributes":[{"value":"deprecated(since = \"0.21.3\", note =\n             \"For trivial types `T` this interface is less safe and less efficient than one taking\\\n                an output slice. Semantics may be confusing for non-trivial types. Consider upgrading to v0.22.\")","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":234481,"byte_end":234737,"line_start":317,"line_end":320,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":238452,"byte_end":238466,"line_start":407,"line_end":407,"column_start":12,"column_end":26},"name":"read_image_ldr","qualname":"<HDRDecoder<R>>::read_image_ldr","value":"fn (self) -> ImageResult<Vec<Rgb<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<u8> pixels.\n scale = 1, gamma = 2.2\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":238695,"byte_end":238709,"line_start":414,"line_end":414,"column_start":12,"column_end":26},"name":"read_image_hdr","qualname":"<HDRDecoder<R>>::read_image_hdr","value":"fn (self) -> ImageResult<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<f32> pixels.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":971},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":239439,"byte_end":239462,"line_start":438,"line_end":438,"column_start":12,"column_end":35},"name":"HDRImageDecoderIterator","qualname":"::hdr::decoder::HDRImageDecoderIterator","value":"HDRImageDecoderIterator {  }","parent":null,"children":[{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979}],"decl_id":null,"docs":" Scanline buffered pixel by pixel iterator\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3087},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":247258,"byte_end":247269,"line_start":667,"line_end":667,"column_start":12,"column_end":23},"name":"HDRMetadata","qualname":"::hdr::decoder::HDRMetadata","value":"HDRMetadata { width, height, orientation, exposure, color_correction, pixel_aspect_ratio, custom_attributes }","parent":null,"children":[{"krate":0,"index":3088},{"krate":0,"index":3089},{"krate":0,"index":3090},{"krate":0,"index":3091},{"krate":0,"index":3092},{"krate":0,"index":3093},{"krate":0,"index":3094}],"decl_id":null,"docs":" Metadata for Radiance HDR image\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3088},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":247407,"byte_end":247412,"line_start":670,"line_end":670,"column_start":9,"column_end":14},"name":"width","qualname":"::hdr::decoder::HDRMetadata::width","value":"u32","parent":{"krate":0,"index":3087},"children":[],"decl_id":null,"docs":" Width of decoded image. It could be either scanline length,\n or scanline count, depending on image orientation.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3089},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":247491,"byte_end":247497,"line_start":672,"line_end":672,"column_start":9,"column_end":15},"name":"height","qualname":"::hdr::decoder::HDRMetadata::height","value":"u32","parent":{"krate":0,"index":3087},"children":[],"decl_id":null,"docs":" Height of decoded image. It depends on orientation too.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3090},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":247772,"byte_end":247783,"line_start":676,"line_end":676,"column_start":9,"column_end":20},"name":"orientation","qualname":"::hdr::decoder::HDRMetadata::orientation","value":"((i8, i8), (i8, i8))","parent":{"krate":0,"index":3087},"children":[],"decl_id":null,"docs":" Orientation matrix. For standard orientation it is ((1,0),(0,1)) - left to right, top to bottom.\n First pair tells how resulting pixel coordinates change along a scanline.\n Second pair tells how they change from one scanline to the next.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3091},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":248008,"byte_end":248016,"line_start":681,"line_end":681,"column_start":9,"column_end":17},"name":"exposure","qualname":"::hdr::decoder::HDRMetadata::exposure","value":"std::option::Option<f32>","parent":{"krate":0,"index":3087},"children":[],"decl_id":null,"docs":" Divide color values by exposure to get to get physical radiance in\n watts/steradian/m<sup>2</sup>","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3092},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":248260,"byte_end":248276,"line_start":686,"line_end":686,"column_start":9,"column_end":25},"name":"color_correction","qualname":"::hdr::decoder::HDRMetadata::color_correction","value":"std::option::Option<(f32, f32, f32)>","parent":{"krate":0,"index":3087},"children":[],"decl_id":null,"docs":" Divide color values by corresponding tuple member (r, g, b) to get to get physical radiance\n in watts/steradian/m<sup>2</sup>","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3093},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":248355,"byte_end":248373,"line_start":688,"line_end":688,"column_start":9,"column_end":27},"name":"pixel_aspect_ratio","qualname":"::hdr::decoder::HDRMetadata::pixel_aspect_ratio","value":"std::option::Option<f32>","parent":{"krate":0,"index":3087},"children":[],"decl_id":null,"docs":" Pixel height divided by pixel width\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3094},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":248602,"byte_end":248619,"line_start":692,"line_end":692,"column_start":9,"column_end":26},"name":"custom_attributes","qualname":"::hdr::decoder::HDRMetadata::custom_attributes","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":3087},"children":[],"decl_id":null,"docs":" All lines contained in image header are put here. Ordering of lines is preserved.\n Lines in the form \"key=value\" are represented as (\"key\", \"value\").\n All other lines are (\"\", \"line\")\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":258542,"byte_end":258555,"line_start":957,"line_end":957,"column_start":8,"column_end":21},"name":"read_raw_file","qualname":"::hdr::decoder::read_raw_file","value":"fn <P> (path: P) -> ::std::io::Result<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Helper function for reading raw 3-channel f32 images\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\encoder.rs","byte_start":259342,"byte_end":259352,"line_start":6,"line_end":6,"column_start":12,"column_end":22},"name":"HDREncoder","qualname":"::hdr::encoder::HDREncoder","value":"HDREncoder {  }","parent":null,"children":[{"krate":0,"index":1044}],"decl_id":null,"docs":" Radiance HDR encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\encoder.rs","byte_start":259444,"byte_end":259447,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"new","qualname":"<HDREncoder<W>>::new","value":"fn (w: W) -> HDREncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\encoder.rs","byte_start":259610,"byte_end":259616,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"encode","qualname":"<HDREncoder<W>>::encode","value":"fn (mut self, data: &[Rgb<f32>], width: usize, height: usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```data```\n that has dimensions ```width``` and ```height```\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\encoder.rs","byte_start":267161,"byte_end":267169,"line_start":228,"line_end":228,"column_start":8,"column_end":16},"name":"to_rgbe8","qualname":"::hdr::encoder::to_rgbe8","value":"fn (pix: Rgb<f32>) -> RGBE8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Converts ```Rgb<f32>``` into ```RGBE8Pixel```\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1084},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\ico\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ico","qualname":"::ico","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\ico\\mod.rs","parent":null,"children":[{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1145}],"decl_id":null,"docs":"  Decoding and Encoding of ICO files","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":2267,"byte_end":2290,"line_start":90,"line_end":90,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1106},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\ico\\decoder.rs","byte_start":275382,"byte_end":275392,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"ICODecoder","qualname":"::ico::decoder::ICODecoder","value":"ICODecoder {  }","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109}],"decl_id":null,"docs":" An ico decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\ico\\decoder.rs","byte_start":275890,"byte_end":275893,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<ICODecoder<R>>::new","value":"fn (mut r: R) -> ImageResult<ICODecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1159},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\ico\\encoder.rs","byte_start":284334,"byte_end":284344,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"ICOEncoder","qualname":"::ico::encoder::ICOEncoder","value":"ICOEncoder {  }","parent":null,"children":[{"krate":0,"index":1161}],"decl_id":null,"docs":" ICO encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\ico\\encoder.rs","byte_start":284476,"byte_end":284479,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<ICOEncoder<W>>::new","value":"fn (w: W) -> ICOEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\ico\\encoder.rs","byte_start":284777,"byte_end":284783,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"encode","qualname":"<ICOEncoder<W>>::encode","value":"fn (mut self, data: &[u8], width: u32, height: u32, color: ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image``` that has dimensions ```width``` and\n ```height``` and ```ColorType``` ```c```.  The dimensions of the image\n must be between 1 and 256 (inclusive) or an error will be returned.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1172},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jpeg","qualname":"::jpeg","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\mod.rs","parent":null,"children":[{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1206},{"krate":0,"index":1310},{"krate":0,"index":1313}],"decl_id":null,"docs":" Decoding and Encoding of JPEG Images","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":2304,"byte_end":2328,"line_start":92,"line_end":92,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1185},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\decoder.rs","byte_start":287506,"byte_end":287517,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"JPEGDecoder","qualname":"::jpeg::decoder::JPEGDecoder","value":"JPEGDecoder {  }","parent":null,"children":[{"krate":0,"index":1187},{"krate":0,"index":1188}],"decl_id":null,"docs":" JPEG decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\decoder.rs","byte_start":287712,"byte_end":287715,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<JPEGDecoder<R>>::new","value":"fn (r: R) -> ImageResult<JPEGDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\encoder.rs","byte_start":298954,"byte_end":298965,"line_start":277,"line_end":277,"column_start":12,"column_end":23},"name":"JPEGEncoder","qualname":"::jpeg::encoder::JPEGEncoder","value":"JPEGEncoder {  }","parent":null,"children":[{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278}],"decl_id":null,"docs":" The representation of a JPEG encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\encoder.rs","byte_start":299321,"byte_end":299324,"line_start":291,"line_end":291,"column_start":12,"column_end":15},"name":"new","qualname":"<JPEGEncoder>::new","value":"fn (w: &mut W) -> JPEGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\encoder.rs","byte_start":299617,"byte_end":299633,"line_start":298,"line_end":298,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<JPEGEncoder>::new_with_quality","value":"fn (w: &mut W, quality: u8) -> JPEGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```, and has\n the quality parameter ```quality``` with a value in the range 1-100\n where 1 is the worst and 100 is the best.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\encoder.rs","byte_start":301920,"byte_end":301926,"line_start":370,"line_end":370,"column_start":12,"column_end":18},"name":"encode","qualname":"<JPEGEncoder>::encode","value":"fn (&mut self, image: &[u8], width: u32, height: u32, c: color::ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1329},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\png.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"png","qualname":"::png","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\png.rs","parent":null,"children":[{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1343},{"krate":0,"index":1347},{"krate":0,"index":1350},{"krate":0,"index":1357},{"krate":0,"index":1360},{"krate":0,"index":1365},{"krate":0,"index":1368},{"krate":0,"index":1371}],"decl_id":null,"docs":" Decoding and Encoding of PNG Images","sig":null,"attributes":[{"value":"cfg(feature = \"png_codec\")","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":2343,"byte_end":2372,"line_start":94,"line_end":94,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1343},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\png.rs","byte_start":324724,"byte_end":324734,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"PNGDecoder","qualname":"::png::PNGDecoder","value":"PNGDecoder {  }","parent":null,"children":[{"krate":0,"index":1345},{"krate":0,"index":1346}],"decl_id":null,"docs":" PNG decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1349},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\png.rs","byte_start":324911,"byte_end":324914,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<PNGDecoder<R>>::new","value":"fn (r: R) -> ImageResult<PNGDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1357},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\png.rs","byte_start":325865,"byte_end":325875,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"PNGEncoder","qualname":"::png::PNGEncoder","value":"PNGEncoder {  }","parent":null,"children":[{"krate":0,"index":1359}],"decl_id":null,"docs":" PNG encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\png.rs","byte_start":326006,"byte_end":326009,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<PNGEncoder<W>>::new","value":"fn (w: W) -> PNGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\png.rs","byte_start":326209,"byte_end":326215,"line_start":76,"line_end":76,"column_start":12,"column_end":18},"name":"encode","qualname":"<PNGEncoder<W>>::encode","value":"fn (self, data: &[u8], width: u32, height: u32, color: ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1374},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pnm","qualname":"::pnm","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\mod.rs","parent":null,"children":[{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1385},{"krate":0,"index":1389},{"krate":0,"index":1409},{"krate":0,"index":1546},{"krate":0,"index":1670}],"decl_id":null,"docs":" Decoding of netpbm image formats (pbm, pgm, ppm and pam).","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":2386,"byte_end":2409,"line_start":96,"line_end":96,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1454},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":338132,"byte_end":338142,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"PNMDecoder","qualname":"::pnm::decoder::PNMDecoder","value":"PNMDecoder {  }","parent":null,"children":[{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458}],"decl_id":null,"docs":" PNM decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":338332,"byte_end":338335,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<PNMDecoder<R>>::new","value":"fn (read: R) -> ImageResult<PNMDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```read```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":339804,"byte_end":339814,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PNMDecoder<R>>::into_inner","value":"fn (self) -> (R, PNMHeader)","parent":null,"children":[],"decl_id":null,"docs":" Extract the reader and header after an image has been read.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":353545,"byte_end":353552,"line_start":466,"line_end":466,"column_start":12,"column_end":19},"name":"subtype","qualname":"<PNMDecoder<R>>::subtype","value":"fn (&self) -> PNMSubtype","parent":null,"children":[],"decl_id":null,"docs":" Get the pnm subtype, depending on the magic constant contained in the header\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3162},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":373818,"byte_end":373820,"line_start":22,"line_end":22,"column_start":5,"column_end":7},"name":"U8","qualname":"::pnm::encoder::FlatSamples::U8","value":"FlatSamples::U8(&'a [u8])","parent":{"krate":0,"index":3160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3165},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":373836,"byte_end":373839,"line_start":23,"line_end":23,"column_start":5,"column_end":8},"name":"U16","qualname":"::pnm::encoder::FlatSamples::U16","value":"FlatSamples::U16(&'a [u16])","parent":{"krate":0,"index":3160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3160},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":373796,"byte_end":373807,"line_start":21,"line_end":21,"column_start":10,"column_end":21},"name":"FlatSamples","qualname":"::pnm::encoder::FlatSamples","value":"FlatSamples::{U8, U16}","parent":null,"children":[{"krate":0,"index":3162},{"krate":0,"index":3165}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1577},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":373920,"byte_end":373930,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"PNMEncoder","qualname":"::pnm::encoder::PNMEncoder","value":"PNMEncoder {  }","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1580}],"decl_id":null,"docs":" Encodes images to any of the `pnm` image formats.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1615},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":375304,"byte_end":375307,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<PNMEncoder<W>>::new","value":"fn (writer: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new PNMEncoder from the `writer`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1616},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":375857,"byte_end":375869,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"name":"with_subtype","qualname":"<PNMEncoder<W>>::with_subtype","value":"fn (self, subtype: PNMSubtype) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encode a specific pnm subtype image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1617},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":376575,"byte_end":376586,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"with_header","qualname":"<PNMEncoder<W>>::with_header","value":"fn (self, header: PNMHeader) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enforce the use of a chosen header.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1618},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":377157,"byte_end":377176,"line_start":126,"line_end":126,"column_start":12,"column_end":31},"name":"with_dynamic_header","qualname":"<PNMEncoder<W>>::with_dynamic_header","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create the header dynamically for each image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1619},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":377552,"byte_end":377558,"line_start":137,"line_end":137,"column_start":12,"column_end":18},"name":"encode","qualname":"<PNMEncoder<W>>::encode","value":"fn <'s, S> (&mut self, image: S, width: u32, height: u32, color: ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode an image whose samples are represented as `u8`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3174},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":395297,"byte_end":395303,"line_start":7,"line_end":7,"column_start":5,"column_end":11},"name":"Binary","qualname":"::pnm::header::SampleEncoding::Binary","value":"SampleEncoding::Binary","parent":{"krate":0,"index":3173},"children":[],"decl_id":null,"docs":" Samples are unsigned binary integers in big endian\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3176},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":395387,"byte_end":395392,"line_start":10,"line_end":10,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::pnm::header::SampleEncoding::Ascii","value":"SampleEncoding::Ascii","parent":{"krate":0,"index":3173},"children":[],"decl_id":null,"docs":" Samples are encoded as decimal ascii strings separated by whitespace\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3173},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":395217,"byte_end":395231,"line_start":5,"line_end":5,"column_start":10,"column_end":24},"name":"SampleEncoding","qualname":"::pnm::header::SampleEncoding","value":"SampleEncoding::{Binary, Ascii}","parent":null,"children":[{"krate":0,"index":3174},{"krate":0,"index":3176}],"decl_id":null,"docs":" The kind of encoding used to store sample values\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3188},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":395545,"byte_end":395551,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Bitmap","qualname":"::pnm::header::PNMSubtype::Bitmap","value":"PNMSubtype::Bitmap(SampleEncoding)","parent":{"krate":0,"index":3187},"children":[],"decl_id":null,"docs":" Magic numbers P1 and P4\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3191},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":395606,"byte_end":395613,"line_start":20,"line_end":20,"column_start":5,"column_end":12},"name":"Graymap","qualname":"::pnm::header::PNMSubtype::Graymap","value":"PNMSubtype::Graymap(SampleEncoding)","parent":{"krate":0,"index":3187},"children":[],"decl_id":null,"docs":" Magic numbers P2 and P5\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3194},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":395668,"byte_end":395674,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Pixmap","qualname":"::pnm::header::PNMSubtype::Pixmap","value":"PNMSubtype::Pixmap(SampleEncoding)","parent":{"krate":0,"index":3187},"children":[],"decl_id":null,"docs":" Magic numbers P3 and P6\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3197},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":395721,"byte_end":395733,"line_start":26,"line_end":26,"column_start":5,"column_end":17},"name":"ArbitraryMap","qualname":"::pnm::header::PNMSubtype::ArbitraryMap","value":"PNMSubtype::ArbitraryMap","parent":{"krate":0,"index":3187},"children":[],"decl_id":null,"docs":" Magic number P7\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3187},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":395496,"byte_end":395506,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"name":"PNMSubtype","qualname":"::pnm::header::PNMSubtype","value":"PNMSubtype::{Bitmap, Graymap, Pixmap, ArbitraryMap}","parent":null,"children":[{"krate":0,"index":3188},{"krate":0,"index":3191},{"krate":0,"index":3194},{"krate":0,"index":3197}],"decl_id":null,"docs":" Denotes the category of the magic number\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1672},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":396125,"byte_end":396134,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"PNMHeader","qualname":"::pnm::header::PNMHeader","value":"PNMHeader {  }","parent":null,"children":[{"krate":0,"index":1673},{"krate":0,"index":1674}],"decl_id":null,"docs":" Stores the complete header data of a file.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3209},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":396463,"byte_end":396475,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"BitmapHeader","qualname":"::pnm::header::BitmapHeader","value":"BitmapHeader { encoding, height, width }","parent":null,"children":[{"krate":0,"index":3210},{"krate":0,"index":3211},{"krate":0,"index":3212}],"decl_id":null,"docs":" Header produced by a `pbm` file (\"Portable Bit Map\")\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3210},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":396523,"byte_end":396531,"line_start":51,"line_end":51,"column_start":9,"column_end":17},"name":"encoding","qualname":"::pnm::header::BitmapHeader::encoding","value":"pnm::header::SampleEncoding","parent":{"krate":0,"index":3209},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3211},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":396591,"byte_end":396597,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::BitmapHeader::height","value":"u32","parent":{"krate":0,"index":3209},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3212},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":396645,"byte_end":396650,"line_start":57,"line_end":57,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::BitmapHeader::width","value":"u32","parent":{"krate":0,"index":3209},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3218},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":396759,"byte_end":396772,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"GraymapHeader","qualname":"::pnm::header::GraymapHeader","value":"GraymapHeader { encoding, height, width, maxwhite }","parent":null,"children":[{"krate":0,"index":3219},{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3222}],"decl_id":null,"docs":" Header produced by a `pgm` file (\"Portable Gray Map\")\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3219},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":396820,"byte_end":396828,"line_start":64,"line_end":64,"column_start":9,"column_end":17},"name":"encoding","qualname":"::pnm::header::GraymapHeader::encoding","value":"pnm::header::SampleEncoding","parent":{"krate":0,"index":3218},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3220},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":396888,"byte_end":396894,"line_start":67,"line_end":67,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::GraymapHeader::height","value":"u32","parent":{"krate":0,"index":3218},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3221},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":396942,"byte_end":396947,"line_start":70,"line_end":70,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::GraymapHeader::width","value":"u32","parent":{"krate":0,"index":3218},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3222},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":397009,"byte_end":397017,"line_start":73,"line_end":73,"column_start":9,"column_end":17},"name":"maxwhite","qualname":"::pnm::header::GraymapHeader::maxwhite","value":"u32","parent":{"krate":0,"index":3218},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3228},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":397127,"byte_end":397139,"line_start":78,"line_end":78,"column_start":12,"column_end":24},"name":"PixmapHeader","qualname":"::pnm::header::PixmapHeader","value":"PixmapHeader { encoding, height, width, maxval }","parent":null,"children":[{"krate":0,"index":3229},{"krate":0,"index":3230},{"krate":0,"index":3231},{"krate":0,"index":3232}],"decl_id":null,"docs":" Header produced by a `ppm` file (\"Portable Pixel Map\")\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3229},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":397187,"byte_end":397195,"line_start":80,"line_end":80,"column_start":9,"column_end":17},"name":"encoding","qualname":"::pnm::header::PixmapHeader::encoding","value":"pnm::header::SampleEncoding","parent":{"krate":0,"index":3228},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3230},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":397255,"byte_end":397261,"line_start":83,"line_end":83,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::PixmapHeader::height","value":"u32","parent":{"krate":0,"index":3228},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3231},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":397309,"byte_end":397314,"line_start":86,"line_end":86,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::PixmapHeader::width","value":"u32","parent":{"krate":0,"index":3228},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3232},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":397376,"byte_end":397382,"line_start":89,"line_end":89,"column_start":9,"column_end":15},"name":"maxval","qualname":"::pnm::header::PixmapHeader::maxval","value":"u32","parent":{"krate":0,"index":3228},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3238},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":397490,"byte_end":397505,"line_start":94,"line_end":94,"column_start":12,"column_end":27},"name":"ArbitraryHeader","qualname":"::pnm::header::ArbitraryHeader","value":"ArbitraryHeader { height, width, depth, maxval, tupltype }","parent":null,"children":[{"krate":0,"index":3239},{"krate":0,"index":3240},{"krate":0,"index":3241},{"krate":0,"index":3242},{"krate":0,"index":3243}],"decl_id":null,"docs":" Header produced by a `pam` file (\"Portable Arbitrary Map\")\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3239},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":397549,"byte_end":397555,"line_start":96,"line_end":96,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::ArbitraryHeader::height","value":"u32","parent":{"krate":0,"index":3238},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3240},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":397603,"byte_end":397608,"line_start":99,"line_end":99,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::ArbitraryHeader::width","value":"u32","parent":{"krate":0,"index":3238},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3241},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":397657,"byte_end":397662,"line_start":102,"line_end":102,"column_start":9,"column_end":14},"name":"depth","qualname":"::pnm::header::ArbitraryHeader::depth","value":"u32","parent":{"krate":0,"index":3238},"children":[],"decl_id":null,"docs":" Number of color channels\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3242},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":397724,"byte_end":397730,"line_start":105,"line_end":105,"column_start":9,"column_end":15},"name":"maxval","qualname":"::pnm::header::ArbitraryHeader::maxval","value":"u32","parent":{"krate":0,"index":3238},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3243},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":397791,"byte_end":397799,"line_start":108,"line_end":108,"column_start":9,"column_end":17},"name":"tupltype","qualname":"::pnm::header::ArbitraryHeader::tupltype","value":"std::option::Option<pnm::header::ArbitraryTuplType>","parent":{"krate":0,"index":3238},"children":[],"decl_id":null,"docs":" Color interpretation of image pixels\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3249},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":398002,"byte_end":398015,"line_start":115,"line_end":115,"column_start":5,"column_end":18},"name":"BlackAndWhite","qualname":"::pnm::header::ArbitraryTuplType::BlackAndWhite","value":"ArbitraryTuplType::BlackAndWhite","parent":{"krate":0,"index":3248},"children":[],"decl_id":null,"docs":" Pixels are either black (0) or white (1)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3251},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":398098,"byte_end":398116,"line_start":118,"line_end":118,"column_start":5,"column_end":23},"name":"BlackAndWhiteAlpha","qualname":"::pnm::header::ArbitraryTuplType::BlackAndWhiteAlpha","value":"ArbitraryTuplType::BlackAndWhiteAlpha","parent":{"krate":0,"index":3248},"children":[],"decl_id":null,"docs":" Pixels are either black (0) or white (1) and a second alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3253},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":398168,"byte_end":398177,"line_start":121,"line_end":121,"column_start":5,"column_end":14},"name":"Grayscale","qualname":"::pnm::header::ArbitraryTuplType::Grayscale","value":"ArbitraryTuplType::Grayscale","parent":{"krate":0,"index":3248},"children":[],"decl_id":null,"docs":" Pixels represent the amount of white\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3255},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":398235,"byte_end":398249,"line_start":124,"line_end":124,"column_start":5,"column_end":19},"name":"GrayscaleAlpha","qualname":"::pnm::header::ArbitraryTuplType::GrayscaleAlpha","value":"ArbitraryTuplType::GrayscaleAlpha","parent":{"krate":0,"index":3248},"children":[],"decl_id":null,"docs":" Grayscale with an additional alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3257},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":398297,"byte_end":398300,"line_start":127,"line_end":127,"column_start":5,"column_end":8},"name":"RGB","qualname":"::pnm::header::ArbitraryTuplType::RGB","value":"ArbitraryTuplType::RGB","parent":{"krate":0,"index":3248},"children":[],"decl_id":null,"docs":" Three channels: Red, Green, Blue\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3259},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":398354,"byte_end":398362,"line_start":130,"line_end":130,"column_start":5,"column_end":13},"name":"RGBAlpha","qualname":"::pnm::header::ArbitraryTuplType::RGBAlpha","value":"ArbitraryTuplType::RGBAlpha","parent":{"krate":0,"index":3248},"children":[],"decl_id":null,"docs":" Four channels: Red, Green, Blue, Alpha\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3261},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":398419,"byte_end":398425,"line_start":133,"line_end":133,"column_start":5,"column_end":11},"name":"Custom","qualname":"::pnm::header::ArbitraryTuplType::Custom","value":"ArbitraryTuplType::Custom(String)","parent":{"krate":0,"index":3248},"children":[],"decl_id":null,"docs":" An image format which is not standardized\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3248},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":397929,"byte_end":397946,"line_start":113,"line_end":113,"column_start":10,"column_end":27},"name":"ArbitraryTuplType","qualname":"::pnm::header::ArbitraryTuplType","value":"ArbitraryTuplType::{BlackAndWhite, BlackAndWhiteAlpha, Grayscale, GrayscaleAlpha, RGB, RGBAlpha, Custom}","parent":null,"children":[{"krate":0,"index":3249},{"krate":0,"index":3251},{"krate":0,"index":3253},{"krate":0,"index":3255},{"krate":0,"index":3257},{"krate":0,"index":3259},{"krate":0,"index":3261}],"decl_id":null,"docs":" Standardized tuple type specifiers in the header of a `pam`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":398546,"byte_end":398560,"line_start":138,"line_end":138,"column_start":12,"column_end":26},"name":"magic_constant","qualname":"<PNMSubtype>::magic_constant","value":"fn (self) -> &'static [u8; 2]","parent":null,"children":[],"decl_id":null,"docs":" Get the two magic constant bytes corresponding to this format subtype.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":399139,"byte_end":399154,"line_start":151,"line_end":151,"column_start":12,"column_end":27},"name":"sample_encoding","qualname":"<PNMSubtype>::sample_encoding","value":"fn (self) -> SampleEncoding","parent":null,"children":[],"decl_id":null,"docs":" Whether samples are stored as binary or as decimal ascii\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":399517,"byte_end":399524,"line_start":163,"line_end":163,"column_start":12,"column_end":19},"name":"subtype","qualname":"<PNMHeader>::subtype","value":"fn (&self) -> PNMSubtype","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the format subtype from which the header was created.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":400039,"byte_end":400044,"line_start":173,"line_end":173,"column_start":12,"column_end":17},"name":"width","qualname":"<PNMHeader>::width","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of the image this header is for.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":400462,"byte_end":400468,"line_start":183,"line_end":183,"column_start":12,"column_end":18},"name":"height","qualname":"<PNMHeader>::height","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of the image this header is for.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":400926,"byte_end":400940,"line_start":193,"line_end":193,"column_start":12,"column_end":26},"name":"maximal_sample","qualname":"<PNMHeader>::maximal_sample","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The biggest value a sample can have. In other words, the colour resolution.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":401358,"byte_end":401367,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"as_bitmap","qualname":"<PNMHeader>::as_bitmap","value":"fn (&self) -> Option<&BitmapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying bitmap header if any\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":401598,"byte_end":401608,"line_start":211,"line_end":211,"column_start":12,"column_end":22},"name":"as_graymap","qualname":"<PNMHeader>::as_graymap","value":"fn (&self) -> Option<&GraymapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying graymap header if any\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":401842,"byte_end":401851,"line_start":219,"line_end":219,"column_start":12,"column_end":21},"name":"as_pixmap","qualname":"<PNMHeader>::as_pixmap","value":"fn (&self) -> Option<&PixmapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying pixmap header if any\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":402084,"byte_end":402096,"line_start":227,"line_end":227,"column_start":12,"column_end":24},"name":"as_arbitrary","qualname":"<PNMHeader>::as_arbitrary","value":"fn (&self) -> Option<&ArbitraryHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying arbitrary header if any\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":402336,"byte_end":402341,"line_start":235,"line_end":235,"column_start":12,"column_end":17},"name":"write","qualname":"<PNMHeader>::write","value":"fn (&self, writer: &mut io::Write) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the header back into a binary stream\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1710},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tga\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tga","qualname":"::tga","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tga\\mod.rs","parent":null,"children":[{"krate":0,"index":1711},{"krate":0,"index":1712}],"decl_id":null,"docs":" Decoding of TGA Images","sig":null,"attributes":[{"value":"cfg(feature = \"tga\")","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":2423,"byte_end":2446,"line_start":98,"line_end":98,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1765},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tga\\decoder.rs","byte_start":411080,"byte_end":411090,"line_start":156,"line_end":156,"column_start":12,"column_end":22},"name":"TGADecoder","qualname":"::tga::decoder::TGADecoder","value":"TGADecoder {  }","parent":null,"children":[{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1777}],"decl_id":null,"docs":" The representation of a TGA decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tga\\decoder.rs","byte_start":411516,"byte_end":411519,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<TGADecoder<R>>::new","value":"fn (r: R) -> ImageResult<TGADecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream `r`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1804},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tga\\decoder.rs","byte_start":423750,"byte_end":423759,"line_start":532,"line_end":532,"column_start":12,"column_end":21},"name":"TGAReader","qualname":"::tga::decoder::TGAReader","value":"TGAReader {  }","parent":null,"children":[{"krate":0,"index":1806},{"krate":0,"index":1807}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1812},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tiff.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tiff","qualname":"::tiff","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tiff.rs","parent":null,"children":[{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1829},{"krate":0,"index":1832},{"krate":0,"index":1834},{"krate":0,"index":1836}],"decl_id":null,"docs":" Decoding and Encoding of TIFF Images","sig":null,"attributes":[{"value":"cfg(feature = \"tiff\")","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":2460,"byte_end":2484,"line_start":100,"line_end":100,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1824},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tiff.rs","byte_start":424529,"byte_end":424540,"line_start":18,"line_end":18,"column_start":12,"column_end":23},"name":"TIFFDecoder","qualname":"::tiff::TIFFDecoder","value":"TIFFDecoder {  }","parent":null,"children":[{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1828}],"decl_id":null,"docs":" Decoder for TIFF images.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1831},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tiff.rs","byte_start":424761,"byte_end":424764,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<TIFFDecoder<R>>::new","value":"fn (r: R) -> Result<TIFFDecoder<R>, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TIFFDecoder.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1843},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"webp","qualname":"::webp","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\mod.rs","parent":null,"children":[{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1879},{"krate":0,"index":1885}],"decl_id":null,"docs":" Decoding of Webp Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"webp\")","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":2499,"byte_end":2523,"line_start":102,"line_end":102,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1860},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\decoder.rs","byte_start":427121,"byte_end":427132,"line_start":17,"line_end":17,"column_start":12,"column_end":23},"name":"WebpDecoder","qualname":"::webp::decoder::WebpDecoder","value":"WebpDecoder {  }","parent":null,"children":[{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864}],"decl_id":null,"docs":" Webp Image format decoder. Currently only supportes the luma channel (meaning that decoded\n images will be grayscale).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1867},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\decoder.rs","byte_start":427344,"byte_end":427347,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<WebpDecoder<R>>::new","value":"fn (r: R) -> ImageResult<WebpDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new WebpDecoder from the Reader ```r```.\n This function takes ownership of the Reader.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1885},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vp8","qualname":"::webp::vp8","value":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","parent":null,"children":[{"krate":0,"index":1886},{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1910},{"krate":0,"index":1911},{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":3283},{"krate":0,"index":3306},{"krate":0,"index":3305},{"krate":0,"index":3303},{"krate":0,"index":3301},{"krate":0,"index":3299},{"krate":0,"index":3308},{"krate":0,"index":3328},{"krate":0,"index":3327},{"krate":0,"index":3325},{"krate":0,"index":3323},{"krate":0,"index":3321},{"krate":0,"index":3330},{"krate":0,"index":3368},{"krate":0,"index":3367},{"krate":0,"index":3365},{"krate":0,"index":3363},{"krate":0,"index":3361},{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1919},{"krate":0,"index":1921},{"krate":0,"index":1923},{"krate":0,"index":1925},{"krate":0,"index":1929},{"krate":0,"index":1931},{"krate":0,"index":1933},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1954},{"krate":0,"index":1957},{"krate":0,"index":1959},{"krate":0,"index":1961},{"krate":0,"index":1963},{"krate":0,"index":1965},{"krate":0,"index":1967},{"krate":0,"index":1973},{"krate":0,"index":3370},{"krate":0,"index":3383},{"krate":0,"index":3379},{"krate":0,"index":3378},{"krate":0,"index":3385},{"krate":0,"index":3400},{"krate":0,"index":3398},{"krate":0,"index":3396},{"krate":0,"index":3402},{"krate":0,"index":3415},{"krate":0,"index":3414},{"krate":0,"index":3412},{"krate":0,"index":1981},{"krate":0,"index":2004},{"krate":0,"index":2032},{"krate":0,"index":2035},{"krate":0,"index":2037},{"krate":0,"index":2039},{"krate":0,"index":2041},{"krate":0,"index":2043},{"krate":0,"index":2045},{"krate":0,"index":2047},{"krate":0,"index":2050},{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070}],"decl_id":null,"docs":" An implementation of the VP8 Video Codec","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3385},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":461067,"byte_end":461072,"line_start":789,"line_end":789,"column_start":12,"column_end":17},"name":"Frame","qualname":"::webp::vp8::Frame","value":"Frame { width, height, ybuf, keyframe, for_display, pixel_type }","parent":null,"children":[{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":3388},{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3395}],"decl_id":null,"docs":" A Representation of the last decoded video frame\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3386},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":461119,"byte_end":461124,"line_start":791,"line_end":791,"column_start":9,"column_end":14},"name":"width","qualname":"::webp::vp8::Frame::width","value":"u16","parent":{"krate":0,"index":3385},"children":[],"decl_id":null,"docs":" The width of the luma plane\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3387},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":461177,"byte_end":461183,"line_start":794,"line_end":794,"column_start":9,"column_end":15},"name":"height","qualname":"::webp::vp8::Frame::height","value":"u16","parent":{"krate":0,"index":3385},"children":[],"decl_id":null,"docs":" The height of the luma plane\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3388},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":461235,"byte_end":461239,"line_start":797,"line_end":797,"column_start":9,"column_end":13},"name":"ybuf","qualname":"::webp::vp8::Frame::ybuf","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":3385},"children":[],"decl_id":null,"docs":" The luma plane of the frame\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3389},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":461310,"byte_end":461318,"line_start":800,"line_end":800,"column_start":9,"column_end":17},"name":"keyframe","qualname":"::webp::vp8::Frame::keyframe","value":"bool","parent":{"krate":0,"index":3385},"children":[],"decl_id":null,"docs":" Indicates whether this frame is a keyframe\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3391},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":461414,"byte_end":461425,"line_start":805,"line_end":805,"column_start":9,"column_end":20},"name":"for_display","qualname":"::webp::vp8::Frame::for_display","value":"bool","parent":{"krate":0,"index":3385},"children":[],"decl_id":null,"docs":" Indicates whether this frame is intended for display\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3392},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":461556,"byte_end":461566,"line_start":810,"line_end":810,"column_start":9,"column_end":19},"name":"pixel_type","qualname":"::webp::vp8::Frame::pixel_type","value":"u8","parent":{"krate":0,"index":3385},"children":[],"decl_id":null,"docs":" The pixel type of the frame as defined by Section 9.2\n of the VP8 Specification\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1981},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":461942,"byte_end":461952,"line_start":838,"line_end":838,"column_start":12,"column_end":22},"name":"VP8Decoder","qualname":"::webp::vp8::VP8Decoder","value":"VP8Decoder {  }","parent":null,"children":[{"krate":0,"index":1983},{"krate":0,"index":1984},{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":1987},{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1992},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2000},{"krate":0,"index":2001},{"krate":0,"index":2002},{"krate":0,"index":2003}],"decl_id":null,"docs":" VP8 Decoder","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2006},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":462616,"byte_end":462619,"line_start":873,"line_end":873,"column_start":12,"column_end":15},"name":"new","qualname":"<VP8Decoder<R>>::new","value":"fn (r: R) -> VP8Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder.\n The reader must present a raw vp8 bitstream to the decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2028},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":482428,"byte_end":482440,"line_start":1486,"line_end":1486,"column_start":12,"column_end":24},"name":"decode_frame","qualname":"<VP8Decoder<R>>::decode_frame","value":"fn (&mut self) -> io::Result<&Frame>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the current frame and returns a reference to it\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2076},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\animation.rs","byte_start":500151,"byte_end":500157,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Frames","qualname":"::animation::Frames","value":"Frames {  }","parent":null,"children":[{"krate":0,"index":2078}],"decl_id":null,"docs":" An implementation dependent iterator, reading the frames as requested\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\animation.rs","byte_start":500333,"byte_end":500336,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"new","qualname":"<Frames>::new","value":"fn (iterator: Box<Iterator<Item = ImageResult<Frame>> + 'a>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Frames` from an implementation specific iterator.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\animation.rs","byte_start":500725,"byte_end":500739,"line_start":24,"line_end":24,"column_start":12,"column_end":26},"name":"collect_frames","qualname":"<Frames>::collect_frames","value":"fn (self) -> ImageResult<Vec<Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Steps through the iterator from the current frame until the end and pushes each frame into\n a `Vec`.\n If en error is encountered that error is returned instead.\n \n Note: This is equivalent to `Frames::collect::<ImageResult<Vec<Frame>>>()`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3417},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\animation.rs","byte_start":501028,"byte_end":501033,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"Frame","qualname":"::animation::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":3418},{"krate":0,"index":3419},{"krate":0,"index":3420},{"krate":0,"index":3421}],"decl_id":null,"docs":" A single animation frame\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\animation.rs","byte_start":501240,"byte_end":501243,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<Frame>::new","value":"fn (buffer: RgbaImage) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\animation.rs","byte_start":501452,"byte_end":501462,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Frame>::from_parts","value":"fn (buffer: RgbaImage, left: u32, top: u32, delay: Ratio<u16>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2090},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\animation.rs","byte_start":501679,"byte_end":501684,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"delay","qualname":"<Frame>::delay","value":"fn (&self) -> Ratio<u16>","parent":null,"children":[],"decl_id":null,"docs":" Delay of this frame\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\animation.rs","byte_start":501778,"byte_end":501784,"line_start":75,"line_end":75,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Frame>::buffer","value":"fn (&self) -> &RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\animation.rs","byte_start":501880,"byte_end":501891,"line_start":80,"line_end":80,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Frame>::into_buffer","value":"fn (self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2093},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\animation.rs","byte_start":501980,"byte_end":501984,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"name":"left","qualname":"<Frame>::left","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the x offset\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\animation.rs","byte_start":502066,"byte_end":502069,"line_start":90,"line_end":90,"column_start":12,"column_end":15},"name":"top","qualname":"<Frame>::top","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the y offset\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2127},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":502649,"byte_end":502654,"line_start":18,"line_end":18,"column_start":11,"column_end":16},"name":"Pixel","qualname":"::buffer::Pixel","value":"Pixel: Copy + Clone","parent":null,"children":[{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2131},{"krate":0,"index":2132},{"krate":0,"index":2133},{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2136},{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143},{"krate":0,"index":2144},{"krate":0,"index":2146},{"krate":0,"index":2148},{"krate":0,"index":2151},{"krate":0,"index":2154},{"krate":0,"index":2156},{"krate":0,"index":2158},{"krate":0,"index":2159}],"decl_id":null,"docs":" A generalized pixel.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2128},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":502718,"byte_end":502726,"line_start":20,"line_end":20,"column_start":10,"column_end":18},"name":"Subpixel","qualname":"::buffer::Pixel::Subpixel","value":"type Subpixel: Primitive;","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" The underlying subpixel type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":502806,"byte_end":502819,"line_start":23,"line_end":23,"column_start":8,"column_end":21},"name":"channel_count","qualname":"::buffer::Pixel::channel_count","value":"fn () -> u8","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Returns the number of channels of this pixel type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2130},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":502880,"byte_end":502888,"line_start":26,"line_end":26,"column_start":8,"column_end":16},"name":"channels","qualname":"::buffer::Pixel::channels","value":"fn (&self) -> &[Self::Subpixel]","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Returns the components as a slice.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":502976,"byte_end":502988,"line_start":29,"line_end":29,"column_start":8,"column_end":20},"name":"channels_mut","qualname":"::buffer::Pixel::channels_mut","value":"fn (&mut self) -> &mut [Self::Subpixel]","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Returns the components as a mutable slice\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":503159,"byte_end":503170,"line_start":33,"line_end":33,"column_start":8,"column_end":19},"name":"color_model","qualname":"::buffer::Pixel::color_model","value":"fn () -> &'static str","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Returns a string that can help to interpret the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2133},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":503250,"byte_end":503260,"line_start":36,"line_end":36,"column_start":8,"column_end":18},"name":"color_type","qualname":"::buffer::Pixel::color_type","value":"fn () -> ColorType","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Returns the ColorType for this pixel format\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2134},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":503466,"byte_end":503475,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"channels4","qualname":"::buffer::Pixel::channels4","value":"fn (&self) -> (Self::Subpixel, Self::Subpixel, Self::Subpixel, Self::Subpixel)","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Returns the channels of this pixel as a 4 tuple. If the pixel\n has less than 4 channels the remainder is filled with the maximum value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2135},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":503778,"byte_end":503791,"line_start":55,"line_end":55,"column_start":8,"column_end":21},"name":"from_channels","qualname":"::buffer::Pixel::from_channels","value":"fn (a: Self::Subpixel, b: Self::Subpixel, c: Self::Subpixel, d: Self::Subpixel) -> Self","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Construct a pixel from the 4 channels a, b, c and d.\n If the pixel does not contain 4 channels the extra are ignored.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":504145,"byte_end":504155,"line_start":66,"line_end":66,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::buffer::Pixel::from_slice","value":"fn (slice: &[Self::Subpixel]) -> &Self","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Returns a view into a slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2137},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":504435,"byte_end":504449,"line_start":72,"line_end":72,"column_start":8,"column_end":22},"name":"from_slice_mut","qualname":"::buffer::Pixel::from_slice_mut","value":"fn (slice: &mut [Self::Subpixel]) -> &mut Self","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Returns mutable view into a mutable slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2138},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":504536,"byte_end":504542,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"to_rgb","qualname":"::buffer::Pixel::to_rgb","value":"fn (&self) -> Rgb<Self::Subpixel>","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2139},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":504638,"byte_end":504645,"line_start":78,"line_end":78,"column_start":8,"column_end":15},"name":"to_rgba","qualname":"::buffer::Pixel::to_rgba","value":"fn (&self) -> Rgba<Self::Subpixel>","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2140},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":504721,"byte_end":504728,"line_start":81,"line_end":81,"column_start":8,"column_end":15},"name":"to_luma","qualname":"::buffer::Pixel::to_luma","value":"fn (&self) -> Luma<Self::Subpixel>","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Convert this pixel to luma\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2141},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":504826,"byte_end":504839,"line_start":84,"line_end":84,"column_start":8,"column_end":21},"name":"to_luma_alpha","qualname":"::buffer::Pixel::to_luma_alpha","value":"fn (&self) -> LumaA<Self::Subpixel>","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Convert this pixel to luma with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2142},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":504915,"byte_end":504921,"line_start":87,"line_end":87,"column_start":8,"column_end":14},"name":"to_bgr","qualname":"::buffer::Pixel::to_bgr","value":"fn (&self) -> Bgr<Self::Subpixel>","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Convert this pixel to BGR\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2143},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":505017,"byte_end":505024,"line_start":90,"line_end":90,"column_start":8,"column_end":15},"name":"to_bgra","qualname":"::buffer::Pixel::to_bgra","value":"fn (&self) -> Bgra<Self::Subpixel>","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Convert this pixel to BGR with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2144},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":505131,"byte_end":505134,"line_start":93,"line_end":93,"column_start":8,"column_end":11},"name":"map","qualname":"::buffer::Pixel::map","value":"fn <F> (&self, f: F) -> Self","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2146},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":505295,"byte_end":505300,"line_start":98,"line_end":98,"column_start":8,"column_end":13},"name":"apply","qualname":"::buffer::Pixel::apply","value":"fn <F> (&mut self, f: F) -> ()","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":505525,"byte_end":505539,"line_start":104,"line_end":104,"column_start":8,"column_end":22},"name":"map_with_alpha","qualname":"::buffer::Pixel::map_with_alpha","value":"fn <F, G> (&self, f: F, g: G) -> Self","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2151},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":505845,"byte_end":505861,"line_start":111,"line_end":111,"column_start":8,"column_end":24},"name":"apply_with_alpha","qualname":"::buffer::Pixel::apply_with_alpha","value":"fn <F, G> (&mut self, f: F, g: G) -> ()","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel. Works in-place.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2154},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":506112,"byte_end":506116,"line_start":118,"line_end":118,"column_start":8,"column_end":12},"name":"map2","qualname":"::buffer::Pixel::map2","value":"fn <F> (&self, other: &Self, f: F) -> Self","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":506356,"byte_end":506362,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"apply2","qualname":"::buffer::Pixel::apply2","value":"fn <F> (&mut self, other: &Self, f: F) -> ()","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise. Works in-place.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":506509,"byte_end":506515,"line_start":129,"line_end":129,"column_start":8,"column_end":14},"name":"invert","qualname":"::buffer::Pixel::invert","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Invert this pixel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2159},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":506626,"byte_end":506631,"line_start":132,"line_end":132,"column_start":8,"column_end":13},"name":"blend","qualname":"::buffer::Pixel::blend","value":"fn (&mut self, other: &Self) -> ()","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Blend the color of a given pixel into ourself, taking into account alpha channels\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2160},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":506701,"byte_end":506707,"line_start":136,"line_end":136,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::buffer::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":2163}],"decl_id":null,"docs":" Iterate over pixel refs.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2179},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":507476,"byte_end":507485,"line_start":175,"line_end":175,"column_start":12,"column_end":21},"name":"PixelsMut","qualname":"::buffer::PixelsMut","value":"PixelsMut {  }","parent":null,"children":[{"krate":0,"index":2182}],"decl_id":null,"docs":" Iterate over mutable pixel refs.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2198},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":508313,"byte_end":508328,"line_start":216,"line_end":216,"column_start":12,"column_end":27},"name":"EnumeratePixels","qualname":"::buffer::EnumeratePixels","value":"EnumeratePixels {  }","parent":null,"children":[{"krate":0,"index":2201},{"krate":0,"index":2202},{"krate":0,"index":2203},{"krate":0,"index":2204}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2214},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":509143,"byte_end":509161,"line_start":257,"line_end":257,"column_start":12,"column_end":30},"name":"EnumeratePixelsMut","qualname":"::buffer::EnumeratePixelsMut","value":"EnumeratePixelsMut {  }","parent":null,"children":[{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3424},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":509997,"byte_end":510008,"line_start":299,"line_end":299,"column_start":12,"column_end":23},"name":"ImageBuffer","qualname":"::buffer::ImageBuffer","value":"ImageBuffer {  }","parent":null,"children":[{"krate":0,"index":3427},{"krate":0,"index":3428},{"krate":0,"index":3429},{"krate":0,"index":3430}],"decl_id":null,"docs":" Generic image buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2233},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":510615,"byte_end":510623,"line_start":318,"line_end":318,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<ImageBuffer<P, Container>>::from_raw","value":"fn (width: u32, height: u32, buf: Container) -> Option<ImageBuffer<P, Container>>","parent":null,"children":[],"decl_id":null,"docs":" Contructs a buffer from a generic container\n (for example a `Vec` or a slice)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2234},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":511029,"byte_end":511037,"line_start":332,"line_end":332,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<ImageBuffer<P, Container>>::into_raw","value":"fn (self) -> Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2235},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":511139,"byte_end":511149,"line_start":337,"line_end":337,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<ImageBuffer<P, Container>>::dimensions","value":"fn (&self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2236},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":511258,"byte_end":511263,"line_start":342,"line_end":342,"column_start":12,"column_end":17},"name":"width","qualname":"<ImageBuffer<P, Container>>::width","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2237},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":511351,"byte_end":511357,"line_start":347,"line_end":347,"column_start":12,"column_end":18},"name":"height","qualname":"<ImageBuffer<P, Container>>::height","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2238},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":511471,"byte_end":511477,"line_start":352,"line_end":352,"column_start":12,"column_end":18},"name":"pixels","qualname":"<ImageBuffer<P, Container>>::pixels","value":"fn (&self) -> Pixels<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the pixels of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2239},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":511770,"byte_end":511786,"line_start":361,"line_end":361,"column_start":12,"column_end":28},"name":"enumerate_pixels","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels","value":"fn (&self) -> EnumeratePixels<P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a reference to them.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":512133,"byte_end":512142,"line_start":375,"line_end":375,"column_start":12,"column_end":21},"name":"get_pixel","qualname":"<ImageBuffer<P, Container>>::get_pixel","value":"fn (&self, x: u32, y: u32) -> &P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the pixel at location `(x, y)`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2248},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":513872,"byte_end":513885,"line_start":416,"line_end":416,"column_start":12,"column_end":25},"name":"sample_layout","qualname":"<ImageBuffer<P, Container>>::sample_layout","value":"fn (&self) -> SampleLayout","parent":null,"children":[],"decl_id":null,"docs":" Get the format of the buffer when viewed as a matrix of samples.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2249},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":514501,"byte_end":514518,"line_start":427,"line_end":427,"column_start":12,"column_end":29},"name":"into_flat_samples","qualname":"<ImageBuffer<P, Container>>::into_flat_samples","value":"fn (self) -> FlatSamples<Container>","parent":null,"children":[],"decl_id":null,"docs":" Return the raw sample buffer with its stride an dimension information.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2250},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":514967,"byte_end":514982,"line_start":442,"line_end":442,"column_start":12,"column_end":27},"name":"as_flat_samples","qualname":"<ImageBuffer<P, Container>>::as_flat_samples","value":"fn (&self) -> FlatSamples<&[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2254},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":515504,"byte_end":515514,"line_start":461,"line_end":461,"column_start":12,"column_end":22},"name":"pixels_mut","qualname":"<ImageBuffer<P, Container>>::pixels_mut","value":"fn (&mut self) -> PixelsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable pixels of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2255},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":515829,"byte_end":515849,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"enumerate_pixels_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels_mut","value":"fn (&mut self) -> EnumeratePixelsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a mutable reference to them.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2256},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":516238,"byte_end":516251,"line_start":485,"line_end":485,"column_start":12,"column_end":25},"name":"get_pixel_mut","qualname":"<ImageBuffer<P, Container>>::get_pixel_mut","value":"fn (&mut self, x: u32, y: u32) -> &mut P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2257},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":516700,"byte_end":516709,"line_start":497,"line_end":497,"column_start":12,"column_end":21},"name":"put_pixel","qualname":"<ImageBuffer<P, Container>>::put_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: P) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Puts a pixel at location `(x, y)`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2261},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":517124,"byte_end":517128,"line_start":511,"line_end":511,"column_start":12,"column_end":16},"name":"save","qualname":"<ImageBuffer<P, Container>>::save","value":"fn <Q> (&self, path: Q) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2306},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":521489,"byte_end":521492,"line_start":673,"line_end":673,"column_start":12,"column_end":15},"name":"new","qualname":"<ImageBuffer<P, Vec<<P>::Subpixel>>>::new","value":"fn (width: u32, height: u32) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new image buffer based on a `Vec<P::Subpixel>`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2307},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":522030,"byte_end":522040,"line_start":689,"line_end":689,"column_start":12,"column_end":22},"name":"from_pixel","qualname":"<ImageBuffer<P, Vec<<P>::Subpixel>>>::from_pixel","value":"fn (width: u32, height: u32, pixel: P) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by copying a pixel","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2308},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":522555,"byte_end":522562,"line_start":704,"line_end":704,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<ImageBuffer<P, Vec<<P>::Subpixel>>>::from_fn","value":"fn <F> (width: u32, height: u32, mut f: F) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by repeated application of the supplied function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2310},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":522973,"byte_end":522981,"line_start":717,"line_end":717,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<ImageBuffer<P, Vec<<P>::Subpixel>>>::from_vec","value":"fn (width: u32, height: u32, buf: Vec<P::Subpixel>) -> Option<ImageBuffer<P, Vec<P::Subpixel>>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an image buffer out of an existing buffer.\n Returns None if the buffer is not big enough.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2311},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":523268,"byte_end":523276,"line_start":727,"line_end":727,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ImageBuffer<P, Vec<<P>::Subpixel>>>::into_vec","value":"fn (self) -> Vec<P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the image buffer and returns the underlying data\n as an owned buffer\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2312},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":523404,"byte_end":523417,"line_start":733,"line_end":733,"column_start":11,"column_end":24},"name":"ConvertBuffer","qualname":"::buffer::ConvertBuffer","value":"ConvertBuffer<T>","parent":null,"children":[{"krate":0,"index":2314}],"decl_id":null,"docs":" Provides color conversions for whole image buffers.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2314},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":523604,"byte_end":523611,"line_start":738,"line_end":738,"column_start":8,"column_end":15},"name":"convert","qualname":"::buffer::ConvertBuffer::convert","value":"fn (&self) -> T","parent":{"krate":0,"index":2312},"children":[],"decl_id":null,"docs":" Converts `self` to a buffer of type T","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2316},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":523879,"byte_end":523893,"line_start":746,"line_end":746,"column_start":12,"column_end":26},"name":"expand_palette","qualname":"<GrayImage>::expand_palette","value":"fn (self, palette: &[(u8, u8, u8)], transparent_idx: Option<u8>) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Expands a color palette by re-using the existing buffer.\n Assumes 8 bit per pixel. Uses an optionally transparent index to\n adjust it's alpha value accordingly.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2325},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":525637,"byte_end":525645,"line_start":798,"line_end":798,"column_start":10,"column_end":18},"name":"RgbImage","qualname":"::buffer::RgbImage","value":"ImageBuffer<Rgb<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb image buffer\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2326},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":525734,"byte_end":525743,"line_start":800,"line_end":800,"column_start":10,"column_end":19},"name":"RgbaImage","qualname":"::buffer::RgbaImage","value":"ImageBuffer<Rgba<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb + alpha channel image buffer\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2327},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":525823,"byte_end":525832,"line_start":802,"line_end":802,"column_start":10,"column_end":19},"name":"GrayImage","qualname":"::buffer::GrayImage","value":"ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale image buffer\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2328},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":525928,"byte_end":525942,"line_start":804,"line_end":804,"column_start":10,"column_end":24},"name":"GrayAlphaImage","qualname":"::buffer::GrayAlphaImage","value":"ImageBuffer<LumaA<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale + alpha channel image buffer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3436},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":529818,"byte_end":529822,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Gray","qualname":"::color::ColorType::Gray","value":"ColorType::Gray(u8)","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":" Pixel is grayscale\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3439},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":529876,"byte_end":529879,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"RGB","qualname":"::color::ColorType::RGB","value":"ColorType::RGB(u8)","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":" Pixel contains R, G and B channels\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3442},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":529937,"byte_end":529944,"line_start":18,"line_end":18,"column_start":5,"column_end":12},"name":"Palette","qualname":"::color::ColorType::Palette","value":"ColorType::Palette(u8)","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":" Pixel is an index into a color palette\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3445},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":530004,"byte_end":530009,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"GrayA","qualname":"::color::ColorType::GrayA","value":"ColorType::GrayA(u8)","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":" Pixel is grayscale with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3448},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":530063,"byte_end":530067,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"RGBA","qualname":"::color::ColorType::RGBA","value":"ColorType::RGBA(u8)","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":" Pixel is RGB with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3451},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":530121,"byte_end":530124,"line_start":27,"line_end":27,"column_start":5,"column_end":8},"name":"BGR","qualname":"::color::ColorType::BGR","value":"ColorType::BGR(u8)","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":" Pixel contains B, G and R channels\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3454},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":530178,"byte_end":530182,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"BGRA","qualname":"::color::ColorType::BGRA","value":"ColorType::BGRA(u8)","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":" Pixel is BGR with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3435},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":529775,"byte_end":529784,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"ColorType","qualname":"::color::ColorType","value":"ColorType::{Gray, RGB, Palette, GrayA, RGBA, BGR, BGRA}","parent":null,"children":[{"krate":0,"index":3436},{"krate":0,"index":3439},{"krate":0,"index":3442},{"krate":0,"index":3445},{"krate":0,"index":3448},{"krate":0,"index":3451},{"krate":0,"index":3454}],"decl_id":null,"docs":" An enumeration over supported color types and their bit depths\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3740},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":535404,"byte_end":535407,"line_start":228,"line_end":228,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::color::Rgb","value":"Rgb { data }","parent":null,"children":[{"krate":0,"index":3742}],"decl_id":null,"docs":"RGB colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":531209,"byte_end":531219,"line_start":69,"line_end":69,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":531220,"byte_end":531242,"line_start":70,"line_end":70,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":3470},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":535404,"byte_end":535407,"line_start":228,"line_end":228,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::color::Rgb","value":"fn <T> (data: [T; 3]) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":531304,"byte_end":531342,"line_start":72,"line_end":72,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3764},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":535454,"byte_end":535457,"line_start":229,"line_end":229,"column_start":5,"column_end":8},"name":"Bgr","qualname":"::color::Bgr","value":"Bgr { data }","parent":null,"children":[{"krate":0,"index":3766}],"decl_id":null,"docs":"BGR colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":531209,"byte_end":531219,"line_start":69,"line_end":69,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":531220,"byte_end":531242,"line_start":70,"line_end":70,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":3515},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":535454,"byte_end":535457,"line_start":229,"line_end":229,"column_start":5,"column_end":8},"name":"Bgr","qualname":"::color::Bgr","value":"fn <T> (data: [T; 3]) -> Bgr<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":531304,"byte_end":531342,"line_start":72,"line_end":72,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3788},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":535504,"byte_end":535508,"line_start":230,"line_end":230,"column_start":5,"column_end":9},"name":"Luma","qualname":"::color::Luma","value":"Luma { data }","parent":null,"children":[{"krate":0,"index":3790}],"decl_id":null,"docs":"Grayscale colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":531209,"byte_end":531219,"line_start":69,"line_end":69,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":531220,"byte_end":531242,"line_start":70,"line_end":70,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":3560},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":535504,"byte_end":535508,"line_start":230,"line_end":230,"column_start":5,"column_end":9},"name":"Luma","qualname":"::color::Luma","value":"fn <T> (data: [T; 1]) -> Luma<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":531304,"byte_end":531342,"line_start":72,"line_end":72,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3812},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":535560,"byte_end":535564,"line_start":231,"line_end":231,"column_start":5,"column_end":9},"name":"Rgba","qualname":"::color::Rgba","value":"Rgba { data }","parent":null,"children":[{"krate":0,"index":3814}],"decl_id":null,"docs":"RGB colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":531209,"byte_end":531219,"line_start":69,"line_end":69,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":531220,"byte_end":531242,"line_start":70,"line_end":70,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":3605},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":535560,"byte_end":535564,"line_start":231,"line_end":231,"column_start":5,"column_end":9},"name":"Rgba","qualname":"::color::Rgba","value":"fn <T> (data: [T; 4]) -> Rgba<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":531304,"byte_end":531342,"line_start":72,"line_end":72,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3836},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":535629,"byte_end":535633,"line_start":232,"line_end":232,"column_start":5,"column_end":9},"name":"Bgra","qualname":"::color::Bgra","value":"Bgra { data }","parent":null,"children":[{"krate":0,"index":3838}],"decl_id":null,"docs":"BGR colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":531209,"byte_end":531219,"line_start":69,"line_end":69,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":531220,"byte_end":531242,"line_start":70,"line_end":70,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":3650},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":535629,"byte_end":535633,"line_start":232,"line_end":232,"column_start":5,"column_end":9},"name":"Bgra","qualname":"::color::Bgra","value":"fn <T> (data: [T; 4]) -> Bgra<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":531304,"byte_end":531342,"line_start":72,"line_end":72,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3860},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":535698,"byte_end":535703,"line_start":233,"line_end":233,"column_start":5,"column_end":10},"name":"LumaA","qualname":"::color::LumaA","value":"LumaA { data }","parent":null,"children":[{"krate":0,"index":3862}],"decl_id":null,"docs":"Grayscale colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":531209,"byte_end":531219,"line_start":69,"line_end":69,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":531220,"byte_end":531242,"line_start":70,"line_end":70,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":3695},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":535698,"byte_end":535703,"line_start":233,"line_end":233,"column_start":5,"column_end":10},"name":"LumaA","qualname":"::color::LumaA","value":"fn <T> (data: [T; 2]) -> LumaA<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":531304,"byte_end":531342,"line_start":72,"line_end":72,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":2344},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":535844,"byte_end":535853,"line_start":237,"line_end":237,"column_start":11,"column_end":20},"name":"FromColor","qualname":"::color::FromColor","value":"FromColor<Other>","parent":null,"children":[{"krate":0,"index":2346}],"decl_id":null,"docs":" Provides color conversions for the different pixel types.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2346},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":535943,"byte_end":535953,"line_start":239,"line_end":239,"column_start":8,"column_end":18},"name":"from_color","qualname":"::color::FromColor::from_color","value":"fn (&mut self, &Other) -> ()","parent":{"krate":0,"index":2344},"children":[],"decl_id":null,"docs":" Changes `self` to represent `Other` in the color space of `Self`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3885},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":557902,"byte_end":557912,"line_start":40,"line_end":40,"column_start":5,"column_end":15},"name":"ImageLuma8","qualname":"::dynimage::DynamicImage::ImageLuma8","value":"DynamicImage::ImageLuma8(GrayImage)","parent":{"krate":0,"index":3884},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3888},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":557988,"byte_end":557999,"line_start":43,"line_end":43,"column_start":5,"column_end":16},"name":"ImageLumaA8","qualname":"::dynimage::DynamicImage::ImageLumaA8","value":"DynamicImage::ImageLumaA8(GrayAlphaImage)","parent":{"krate":0,"index":3884},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma with alpha\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3891},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":558068,"byte_end":558077,"line_start":46,"line_end":46,"column_start":5,"column_end":14},"name":"ImageRgb8","qualname":"::dynimage::DynamicImage::ImageRgb8","value":"DynamicImage::ImageRgb8(RgbImage)","parent":{"krate":0,"index":3884},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3894},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":558151,"byte_end":558161,"line_start":49,"line_end":49,"column_start":5,"column_end":15},"name":"ImageRgba8","qualname":"::dynimage::DynamicImage::ImageRgba8","value":"DynamicImage::ImageRgba8(RgbaImage)","parent":{"krate":0,"index":3884},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb with alpha\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3897},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":558225,"byte_end":558234,"line_start":52,"line_end":52,"column_start":5,"column_end":14},"name":"ImageBgr8","qualname":"::dynimage::DynamicImage::ImageBgr8","value":"DynamicImage::ImageBgr8(BgrImage)","parent":{"krate":0,"index":3884},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Bgr\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3900},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":558308,"byte_end":558318,"line_start":55,"line_end":55,"column_start":5,"column_end":15},"name":"ImageBgra8","qualname":"::dynimage::DynamicImage::ImageBgra8","value":"DynamicImage::ImageBgra8(BgraImage)","parent":{"krate":0,"index":3884},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Bgr with alpha\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3884},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":557836,"byte_end":557848,"line_start":38,"line_end":38,"column_start":10,"column_end":22},"name":"DynamicImage","qualname":"::dynimage::DynamicImage","value":"DynamicImage::{ImageLuma8, ImageLumaA8, ImageRgb8, ImageRgba8, ImageBgr8, ImageBgra8}","parent":null,"children":[{"krate":0,"index":3885},{"krate":0,"index":3888},{"krate":0,"index":3891},{"krate":0,"index":3894},{"krate":0,"index":3897},{"krate":0,"index":3900}],"decl_id":null,"docs":" A Dynamic Image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2524},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":561099,"byte_end":561108,"line_start":106,"line_end":106,"column_start":12,"column_end":21},"name":"new_luma8","qualname":"<DynamicImage>::new_luma8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2525},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":561311,"byte_end":561322,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"new_luma_a8","qualname":"<DynamicImage>::new_luma_a8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey\n pixels with transparency.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2526},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":561499,"byte_end":561507,"line_start":117,"line_end":117,"column_start":12,"column_end":20},"name":"new_rgb8","qualname":"<DynamicImage>::new_rgb8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2527},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":561683,"byte_end":561692,"line_start":122,"line_end":122,"column_start":12,"column_end":21},"name":"new_rgba8","qualname":"<DynamicImage>::new_rgba8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2528},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":561869,"byte_end":561878,"line_start":127,"line_end":127,"column_start":12,"column_end":21},"name":"new_bgra8","qualname":"<DynamicImage>::new_bgra8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of BGRA pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2529},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":562054,"byte_end":562062,"line_start":132,"line_end":132,"column_start":12,"column_end":20},"name":"new_bgr8","qualname":"<DynamicImage>::new_bgr8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of BGR pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":562226,"byte_end":562232,"line_start":138,"line_end":138,"column_start":12,"column_end":18},"name":"to_rgb","qualname":"<DynamicImage>::to_rgb","value":"fn (&self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2531},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":562401,"byte_end":562408,"line_start":145,"line_end":145,"column_start":12,"column_end":19},"name":"to_rgba","qualname":"<DynamicImage>::to_rgba","value":"fn (&self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2532},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":562578,"byte_end":562584,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"to_bgr","qualname":"<DynamicImage>::to_bgr","value":"fn (&self) -> BgrImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an BGR image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2533},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":562753,"byte_end":562760,"line_start":160,"line_end":160,"column_start":12,"column_end":19},"name":"to_bgra","qualname":"<DynamicImage>::to_bgra","value":"fn (&self) -> BgraImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an BGRA image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2534},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":562929,"byte_end":562936,"line_start":167,"line_end":167,"column_start":12,"column_end":19},"name":"to_luma","qualname":"<DynamicImage>::to_luma","value":"fn (&self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2535},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":563106,"byte_end":563119,"line_start":174,"line_end":174,"column_start":12,"column_end":25},"name":"to_luma_alpha","qualname":"<DynamicImage>::to_luma_alpha","value":"fn (&self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2536},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":563315,"byte_end":563319,"line_start":181,"line_end":181,"column_start":12,"column_end":16},"name":"crop","qualname":"<DynamicImage>::crop","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut out of this image delimited by the bounding rectangle.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2537},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":563548,"byte_end":563555,"line_start":186,"line_end":186,"column_start":12,"column_end":19},"name":"as_rgb8","qualname":"<DynamicImage>::as_rgb8","value":"fn (&self) -> Option<&RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGB image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":563770,"byte_end":563781,"line_start":194,"line_end":194,"column_start":12,"column_end":23},"name":"as_mut_rgb8","qualname":"<DynamicImage>::as_mut_rgb8","value":"fn (&mut self) -> Option<&mut RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGB image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2539},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":564001,"byte_end":564008,"line_start":203,"line_end":203,"column_start":12,"column_end":19},"name":"as_bgr8","qualname":"<DynamicImage>::as_bgr8","value":"fn (&self) -> Option<&BgrImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit BGR image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2540},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":564223,"byte_end":564234,"line_start":211,"line_end":211,"column_start":12,"column_end":23},"name":"as_mut_bgr8","qualname":"<DynamicImage>::as_mut_bgr8","value":"fn (&mut self) -> Option<&mut BgrImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit BGR image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2541},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":564454,"byte_end":564462,"line_start":219,"line_end":219,"column_start":12,"column_end":20},"name":"as_rgba8","qualname":"<DynamicImage>::as_rgba8","value":"fn (&self) -> Option<&RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGBA image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2542},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":564680,"byte_end":564692,"line_start":227,"line_end":227,"column_start":12,"column_end":24},"name":"as_mut_rgba8","qualname":"<DynamicImage>::as_mut_rgba8","value":"fn (&mut self) -> Option<&mut RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2543},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":564914,"byte_end":564922,"line_start":235,"line_end":235,"column_start":12,"column_end":20},"name":"as_bgra8","qualname":"<DynamicImage>::as_bgra8","value":"fn (&self) -> Option<&BgraImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit BGRA image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2544},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":565140,"byte_end":565152,"line_start":243,"line_end":243,"column_start":12,"column_end":24},"name":"as_mut_bgra8","qualname":"<DynamicImage>::as_mut_bgra8","value":"fn (&mut self) -> Option<&mut BgraImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2545},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":565379,"byte_end":565387,"line_start":251,"line_end":251,"column_start":12,"column_end":20},"name":"as_luma8","qualname":"<DynamicImage>::as_luma8","value":"fn (&self) -> Option<&GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2546},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":565610,"byte_end":565622,"line_start":259,"line_end":259,"column_start":12,"column_end":24},"name":"as_mut_luma8","qualname":"<DynamicImage>::as_mut_luma8","value":"fn (&mut self) -> Option<&mut GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2547},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":565871,"byte_end":565885,"line_start":267,"line_end":267,"column_start":12,"column_end":26},"name":"as_luma_alpha8","qualname":"<DynamicImage>::as_luma_alpha8","value":"fn (&self) -> Option<&GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2548},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":566136,"byte_end":566154,"line_start":275,"line_end":275,"column_start":12,"column_end":30},"name":"as_mut_luma_alpha8","qualname":"<DynamicImage>::as_mut_luma_alpha8","value":"fn (&mut self) -> Option<&mut GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2549},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":566386,"byte_end":566396,"line_start":283,"line_end":283,"column_start":12,"column_end":22},"name":"raw_pixels","qualname":"<DynamicImage>::raw_pixels","value":"fn (&self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return this image's pixels as a byte vector.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2550},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":566512,"byte_end":566527,"line_start":288,"line_end":288,"column_start":12,"column_end":27},"name":"as_flat_samples","qualname":"<DynamicImage>::as_flat_samples","value":"fn (&self) -> FlatSamples<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2551},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":566675,"byte_end":566680,"line_start":293,"line_end":293,"column_start":12,"column_end":17},"name":"color","qualname":"<DynamicImage>::color","value":"fn (&self) -> color::ColorType","parent":null,"children":[],"decl_id":null,"docs":" Return this image's color type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2552},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":567228,"byte_end":567237,"line_start":305,"line_end":305,"column_start":12,"column_end":21},"name":"grayscale","qualname":"<DynamicImage>::grayscale","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a grayscale version of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2553},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":567960,"byte_end":567966,"line_start":318,"line_end":318,"column_start":12,"column_end":18},"name":"invert","qualname":"<DynamicImage>::invert","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invert the colors of this image.\n This method operates inplace.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2554},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":568330,"byte_end":568336,"line_start":326,"line_end":326,"column_start":12,"column_end":18},"name":"resize","qualname":"<DynamicImage>::resize","value":"fn (&self, nwidth: u32, nheight: u32, filter: imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by ```nwidth``` and ```nheight```.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2555},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":568800,"byte_end":568812,"line_start":336,"line_end":336,"column_start":12,"column_end":24},"name":"resize_exact","qualname":"<DynamicImage>::resize_exact","value":"fn (&self, nwidth: u32, nheight: u32, filter: imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. Does not preserve aspect ratio.\n ```nwidth``` and ```nheight``` are the new image's dimensions\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2556},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":569503,"byte_end":569512,"line_start":353,"line_end":353,"column_start":12,"column_end":21},"name":"thumbnail","qualname":"<DynamicImage>::thumbnail","value":"fn (&self, nwidth: u32, nheight: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to fit within a specific size.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by ```nwidth``` and ```nheight```.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2557},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":570120,"byte_end":570135,"line_start":365,"line_end":365,"column_start":12,"column_end":27},"name":"thumbnail_exact","qualname":"<DynamicImage>::thumbnail_exact","value":"fn (&self, nwidth: u32, nheight: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to a specific size.\n Returns a new image. Does not preserve aspect ratio.\n ```nwidth``` and ```nheight``` are the new image's dimensions.\n This method uses a fast integer algorithm where each source\n pixel contributes to exactly one target pixel.\n May give aliasing artifacts if new size is close to old size.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2558},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":570655,"byte_end":570669,"line_start":375,"line_end":375,"column_start":12,"column_end":26},"name":"resize_to_fill","qualname":"<DynamicImage>::resize_to_fill","value":"fn (&self, nwidth: u32, nheight: u32, filter: imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the larger (relative to aspect ratio) of the bounds\n specified by ```nwidth``` and ```nheight```, then cropped to\n fit within the other bound.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2559},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":571489,"byte_end":571493,"line_start":398,"line_end":398,"column_start":12,"column_end":16},"name":"blur","qualname":"<DynamicImage>::blur","value":"fn (&self, sigma: f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on this image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2560},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":571871,"byte_end":571880,"line_start":407,"line_end":407,"column_start":12,"column_end":21},"name":"unsharpen","qualname":"<DynamicImage>::unsharpen","value":"fn (&self, sigma: f32, threshold: i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on this image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is a control of how much to sharpen.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2561},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":572089,"byte_end":572098,"line_start":412,"line_end":412,"column_start":12,"column_end":21},"name":"filter3x3","qualname":"<DynamicImage>::filter3x3","value":"fn (&self, kernel: &[f32]) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Filters this image with the specified 3x3 kernel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2562},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":572508,"byte_end":572523,"line_start":423,"line_end":423,"column_start":12,"column_end":27},"name":"adjust_contrast","qualname":"<DynamicImage>::adjust_contrast","value":"fn (&self, c: f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of this image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2563},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":572823,"byte_end":572831,"line_start":430,"line_end":430,"column_start":12,"column_end":20},"name":"brighten","qualname":"<DynamicImage>::brighten","value":"fn (&self, value: i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Brighten the pixels of this image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2564},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":573179,"byte_end":573188,"line_start":438,"line_end":438,"column_start":12,"column_end":21},"name":"huerotate","qualname":"<DynamicImage>::huerotate","value":"fn (&self, value: i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2565},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":573347,"byte_end":573352,"line_start":443,"line_end":443,"column_start":12,"column_end":17},"name":"flipv","qualname":"<DynamicImage>::flipv","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image vertically\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2566},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":573498,"byte_end":573503,"line_start":448,"line_end":448,"column_start":12,"column_end":17},"name":"fliph","qualname":"<DynamicImage>::fliph","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image horizontally\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":573662,"byte_end":573670,"line_start":453,"line_end":453,"column_start":12,"column_end":20},"name":"rotate90","qualname":"<DynamicImage>::rotate90","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 90 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":573823,"byte_end":573832,"line_start":458,"line_end":458,"column_start":12,"column_end":21},"name":"rotate180","qualname":"<DynamicImage>::rotate180","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 180 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":573986,"byte_end":573995,"line_start":463,"line_end":463,"column_start":12,"column_end":21},"name":"rotate270","qualname":"<DynamicImage>::rotate270","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 270 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2570},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":574150,"byte_end":574158,"line_start":468,"line_end":468,"column_start":12,"column_end":20},"name":"write_to","qualname":"<DynamicImage>::write_to","value":"fn <W, F> (&self, w: &mut W, format: F) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode this image and write it to ```w```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2573},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":577404,"byte_end":577408,"line_start":558,"line_end":558,"column_start":12,"column_end":16},"name":"save","qualname":"<DynamicImage>::save","value":"fn <Q> (&self, path: Q) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2592},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":583128,"byte_end":583132,"line_start":722,"line_end":722,"column_start":8,"column_end":12},"name":"open","qualname":"::dynimage::open","value":"fn <P> (path: P) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Open the image located at the path specified.\n The image's format is determined from the path's file extension.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2597},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":584742,"byte_end":584753,"line_start":770,"line_end":770,"column_start":8,"column_end":19},"name":"save_buffer","qualname":"::dynimage::save_buffer","value":"fn <P> (path: P, buf: &[u8], width: u32, height: u32, color: color::ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2602},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":586790,"byte_end":586794,"line_start":827,"line_end":827,"column_start":8,"column_end":12},"name":"load","qualname":"::dynimage::load","value":"fn <R> (r: R, format: ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a Reader\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2606},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":589224,"byte_end":589240,"line_start":882,"line_end":882,"column_start":8,"column_end":24},"name":"load_from_memory","qualname":"::dynimage::load_from_memory","value":"fn (buffer: &[u8]) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2607},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":589425,"byte_end":589453,"line_start":888,"line_end":888,"column_start":8,"column_end":36},"name":"load_from_memory_with_format","qualname":"::dynimage::load_from_memory_with_format","value":"fn (buf: &[u8], format: ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":589400,"byte_end":589417,"line_start":887,"line_end":887,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2608},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":589836,"byte_end":589848,"line_start":898,"line_end":898,"column_start":8,"column_end":20},"name":"guess_format","qualname":"::dynimage::guess_format","value":"fn (buffer: &[u8]) -> ImageResult<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Guess image format from memory block","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3906},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":594930,"byte_end":594941,"line_start":21,"line_end":21,"column_start":5,"column_end":16},"name":"FormatError","qualname":"::image::ImageError::FormatError","value":"ImageError::FormatError(String)","parent":{"krate":0,"index":3905},"children":[],"decl_id":null,"docs":" The Image is not formatted properly\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3909},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":595021,"byte_end":595035,"line_start":24,"line_end":24,"column_start":5,"column_end":19},"name":"DimensionError","qualname":"::image::ImageError::DimensionError","value":"ImageError::DimensionError","parent":{"krate":0,"index":3905},"children":[],"decl_id":null,"docs":" The Image's dimensions are either too small or too large\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3911},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":595097,"byte_end":595113,"line_start":27,"line_end":27,"column_start":5,"column_end":21},"name":"UnsupportedError","qualname":"::image::ImageError::UnsupportedError","value":"ImageError::UnsupportedError(String)","parent":{"krate":0,"index":3905},"children":[],"decl_id":null,"docs":" The Decoder does not support this image format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3914},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":595181,"byte_end":595197,"line_start":30,"line_end":30,"column_start":5,"column_end":21},"name":"UnsupportedColor","qualname":"::image::ImageError::UnsupportedColor","value":"ImageError::UnsupportedColor(ColorType)","parent":{"krate":0,"index":3905},"children":[],"decl_id":null,"docs":" The Decoder does not support this color type\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3917},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":595295,"byte_end":595308,"line_start":34,"line_end":34,"column_start":5,"column_end":18},"name":"NotEnoughData","qualname":"::image::ImageError::NotEnoughData","value":"ImageError::NotEnoughData","parent":{"krate":0,"index":3905},"children":[],"decl_id":null,"docs":" Not enough data was provided to the Decoder\n to decode the image\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3919},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":595370,"byte_end":595377,"line_start":37,"line_end":37,"column_start":5,"column_end":12},"name":"IoError","qualname":"::image::ImageError::IoError","value":"ImageError::IoError(io::Error)","parent":{"krate":0,"index":3905},"children":[],"decl_id":null,"docs":" An I/O Error occurred while decoding the image\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3922},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":595441,"byte_end":595449,"line_start":40,"line_end":40,"column_start":5,"column_end":13},"name":"ImageEnd","qualname":"::image::ImageError::ImageEnd","value":"ImageError::ImageEnd","parent":{"krate":0,"index":3905},"children":[],"decl_id":null,"docs":" The end of the image has been reached\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3924},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":595523,"byte_end":595541,"line_start":43,"line_end":43,"column_start":5,"column_end":23},"name":"InsufficientMemory","qualname":"::image::ImageError::InsufficientMemory","value":"ImageError::InsufficientMemory","parent":{"krate":0,"index":3905},"children":[],"decl_id":null,"docs":" There is not enough memory to complete the given operation\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3905},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":594869,"byte_end":594879,"line_start":19,"line_end":19,"column_start":10,"column_end":20},"name":"ImageError","qualname":"::image::ImageError","value":"ImageError::{FormatError, DimensionError, UnsupportedError, UnsupportedColor, NotEnoughData, IoError, ImageEnd, InsufficientMemory}","parent":null,"children":[{"krate":0,"index":3906},{"krate":0,"index":3909},{"krate":0,"index":3911},{"krate":0,"index":3914},{"krate":0,"index":3917},{"krate":0,"index":3919},{"krate":0,"index":3922},{"krate":0,"index":3924}],"decl_id":null,"docs":" An enumeration of Image errors\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2633},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":597699,"byte_end":597710,"line_start":108,"line_end":108,"column_start":10,"column_end":21},"name":"ImageResult","qualname":"::image::ImageResult","value":"Result<T, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Result of an image decoding/encoding process\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3929},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":597946,"byte_end":597949,"line_start":115,"line_end":115,"column_start":5,"column_end":8},"name":"PNG","qualname":"::image::ImageFormat::PNG","value":"ImageFormat::PNG","parent":{"krate":0,"index":3928},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3931},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":597988,"byte_end":597992,"line_start":118,"line_end":118,"column_start":5,"column_end":9},"name":"JPEG","qualname":"::image::ImageFormat::JPEG","value":"ImageFormat::JPEG","parent":{"krate":0,"index":3928},"children":[],"decl_id":null,"docs":" An Image in JPEG Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3933},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":598030,"byte_end":598033,"line_start":121,"line_end":121,"column_start":5,"column_end":8},"name":"GIF","qualname":"::image::ImageFormat::GIF","value":"ImageFormat::GIF","parent":{"krate":0,"index":3928},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3935},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":598072,"byte_end":598076,"line_start":124,"line_end":124,"column_start":5,"column_end":9},"name":"WEBP","qualname":"::image::ImageFormat::WEBP","value":"ImageFormat::WEBP","parent":{"krate":0,"index":3928},"children":[],"decl_id":null,"docs":" An Image in WEBP Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3937},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":598122,"byte_end":598125,"line_start":127,"line_end":127,"column_start":5,"column_end":8},"name":"PNM","qualname":"::image::ImageFormat::PNM","value":"ImageFormat::PNM","parent":{"krate":0,"index":3928},"children":[],"decl_id":null,"docs":" An Image in general PNM Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3939},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":598164,"byte_end":598168,"line_start":130,"line_end":130,"column_start":5,"column_end":9},"name":"TIFF","qualname":"::image::ImageFormat::TIFF","value":"ImageFormat::TIFF","parent":{"krate":0,"index":3928},"children":[],"decl_id":null,"docs":" An Image in TIFF Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3941},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":598206,"byte_end":598209,"line_start":133,"line_end":133,"column_start":5,"column_end":8},"name":"TGA","qualname":"::image::ImageFormat::TGA","value":"ImageFormat::TGA","parent":{"krate":0,"index":3928},"children":[],"decl_id":null,"docs":" An Image in TGA Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3943},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":598247,"byte_end":598250,"line_start":136,"line_end":136,"column_start":5,"column_end":8},"name":"BMP","qualname":"::image::ImageFormat::BMP","value":"ImageFormat::BMP","parent":{"krate":0,"index":3928},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3945},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":598288,"byte_end":598291,"line_start":139,"line_end":139,"column_start":5,"column_end":8},"name":"ICO","qualname":"::image::ImageFormat::ICO","value":"ImageFormat::ICO","parent":{"krate":0,"index":3928},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3947},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":598338,"byte_end":598341,"line_start":142,"line_end":142,"column_start":5,"column_end":8},"name":"HDR","qualname":"::image::ImageFormat::HDR","value":"ImageFormat::HDR","parent":{"krate":0,"index":3928},"children":[],"decl_id":null,"docs":" An Image in Radiance HDR Format\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3928},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":597897,"byte_end":597908,"line_start":113,"line_end":113,"column_start":10,"column_end":21},"name":"ImageFormat","qualname":"::image::ImageFormat","value":"ImageFormat::{PNG, JPEG, GIF, WEBP, PNM, TIFF, TGA, BMP, ICO, HDR}","parent":null,"children":[{"krate":0,"index":3929},{"krate":0,"index":3931},{"krate":0,"index":3933},{"krate":0,"index":3935},{"krate":0,"index":3937},{"krate":0,"index":3939},{"krate":0,"index":3941},{"krate":0,"index":3943},{"krate":0,"index":3945},{"krate":0,"index":3947}],"decl_id":null,"docs":" An enumeration of supported image formats.\n Not all formats support both encoding and decoding.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3959},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":598543,"byte_end":598546,"line_start":150,"line_end":150,"column_start":5,"column_end":8},"name":"PNG","qualname":"::image::ImageOutputFormat::PNG","value":"ImageOutputFormat::PNG","parent":{"krate":0,"index":3958},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"png_codec\")","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":598478,"byte_end":598507,"line_start":148,"line_end":148,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3961},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":598637,"byte_end":598641,"line_start":154,"line_end":154,"column_start":5,"column_end":9},"name":"JPEG","qualname":"::image::ImageOutputFormat::JPEG","value":"ImageOutputFormat::JPEG(u8)","parent":{"krate":0,"index":3958},"children":[],"decl_id":null,"docs":" An Image in JPEG Format with specified quality\n","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":598553,"byte_end":598577,"line_start":152,"line_end":152,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3964},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":598723,"byte_end":598726,"line_start":158,"line_end":158,"column_start":5,"column_end":8},"name":"PNM","qualname":"::image::ImageOutputFormat::PNM","value":"ImageOutputFormat::PNM(PNMSubtype)","parent":{"krate":0,"index":3958},"children":[],"decl_id":null,"docs":" An Image in one of the PNM Formats\n","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":598652,"byte_end":598675,"line_start":156,"line_end":156,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3967},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":598810,"byte_end":598813,"line_start":162,"line_end":162,"column_start":5,"column_end":8},"name":"GIF","qualname":"::image::ImageOutputFormat::GIF","value":"ImageOutputFormat::GIF","parent":{"krate":0,"index":3958},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"gif_codec\")","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":598745,"byte_end":598774,"line_start":160,"line_end":160,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3969},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":598879,"byte_end":598882,"line_start":166,"line_end":166,"column_start":5,"column_end":8},"name":"ICO","qualname":"::image::ImageOutputFormat::ICO","value":"ImageOutputFormat::ICO","parent":{"krate":0,"index":3958},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":598820,"byte_end":598843,"line_start":164,"line_end":164,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3971},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":598948,"byte_end":598951,"line_start":170,"line_end":170,"column_start":5,"column_end":8},"name":"BMP","qualname":"::image::ImageOutputFormat::BMP","value":"ImageOutputFormat::BMP","parent":{"krate":0,"index":3958},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":598889,"byte_end":598912,"line_start":168,"line_end":168,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3973},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":599203,"byte_end":599214,"line_start":175,"line_end":175,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::image::ImageOutputFormat::Unsupported","value":"ImageOutputFormat::Unsupported(String)","parent":{"krate":0,"index":3958},"children":[],"decl_id":null,"docs":" A value for signalling an error: An unsupported format was requested\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3958},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":598454,"byte_end":598471,"line_start":147,"line_end":147,"column_start":10,"column_end":27},"name":"ImageOutputFormat","qualname":"::image::ImageOutputFormat","value":"ImageOutputFormat::{PNG, JPEG, PNM, GIF, ICO, BMP, Unsupported}","parent":null,"children":[{"krate":0,"index":3959},{"krate":0,"index":3961},{"krate":0,"index":3964},{"krate":0,"index":3967},{"krate":0,"index":3969},{"krate":0,"index":3971},{"krate":0,"index":3973}],"decl_id":null,"docs":" An enumeration of supported image formats for encoding.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3985},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":606492,"byte_end":606500,"line_start":356,"line_end":356,"column_start":12,"column_end":20},"name":"Progress","qualname":"::image::Progress","value":"Progress {  }","parent":null,"children":[{"krate":0,"index":3986},{"krate":0,"index":3987}],"decl_id":null,"docs":" Represents the progress of an image operation.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2653},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":606592,"byte_end":606604,"line_start":362,"line_end":362,"column_start":11,"column_end":23},"name":"ImageDecoder","qualname":"::image::ImageDecoder","value":"ImageDecoder: Sized","parent":null,"children":[{"krate":0,"index":2654},{"krate":0,"index":2655},{"krate":0,"index":2656},{"krate":0,"index":2657},{"krate":0,"index":2658},{"krate":0,"index":2659},{"krate":0,"index":2660},{"krate":0,"index":2661},{"krate":0,"index":2663}],"decl_id":null,"docs":" The trait that all decoders implement\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2654},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":606677,"byte_end":606683,"line_start":364,"line_end":364,"column_start":10,"column_end":16},"name":"Reader","qualname":"::image::ImageDecoder::Reader","value":"type Reader: Read;","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":" The type of reader produced by `into_reader`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2655},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":606768,"byte_end":606778,"line_start":367,"line_end":367,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::ImageDecoder::dimensions","value":"fn (&self) -> (u64, u64)","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":" Returns a tuple containing the width and height of the image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2656},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":606876,"byte_end":606885,"line_start":370,"line_end":370,"column_start":8,"column_end":17},"name":"colortype","qualname":"::image::ImageDecoder::colortype","value":"fn (&self) -> ColorType","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":" Returns the color type of the image e.g. RGB(8) (8bit RGB)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2657},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":607178,"byte_end":607189,"line_start":375,"line_end":375,"column_start":8,"column_end":19},"name":"into_reader","qualname":"::image::ImageDecoder::into_reader","value":"fn (self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":" Returns a reader that can be used to obtain the bytes of the image. For the best\n performance, always try to read at least `scanline_bytes` from the reader at a time. Reading\n fewer bytes will cause the reader to perform internal buffering.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2658},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":607361,"byte_end":607370,"line_start":379,"line_end":379,"column_start":8,"column_end":17},"name":"row_bytes","qualname":"::image::ImageDecoder::row_bytes","value":"fn (&self) -> u64","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":" Returns the number of bytes in a single row of the image. All decoders will pad image rows\n to a byte boundary.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2659},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":607544,"byte_end":607555,"line_start":384,"line_end":384,"column_start":8,"column_end":19},"name":"total_bytes","qualname":"::image::ImageDecoder::total_bytes","value":"fn (&self) -> u64","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":" Returns the total number of bytes in the image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2660},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":607788,"byte_end":607802,"line_start":390,"line_end":390,"column_start":8,"column_end":22},"name":"scanline_bytes","qualname":"::image::ImageDecoder::scanline_bytes","value":"fn (&self) -> u64","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":" Returns the minimum number of bytes that can be efficiently read from this decoder. This may\n be as few as 1 or as many as `total_bytes()`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2661},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":607904,"byte_end":607914,"line_start":395,"line_end":395,"column_start":8,"column_end":18},"name":"read_image","qualname":"::image::ImageDecoder::read_image","value":"fn (self) -> ImageResult<Vec<u8>>","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":" Returns all the bytes in the image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2663},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":608126,"byte_end":608150,"line_start":401,"line_end":401,"column_start":8,"column_end":32},"name":"read_image_with_progress","qualname":"::image::ImageDecoder::read_image_with_progress","value":"fn <F> (self, progress_callback: F) -> ImageResult<Vec<u8>>","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":" Same as `read_image` but periodically calls the provided callback to give updates on loading\n progress.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2665},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":609265,"byte_end":609280,"line_start":438,"line_end":438,"column_start":11,"column_end":26},"name":"ImageDecoderExt","qualname":"::image::ImageDecoderExt","value":"ImageDecoderExt: ImageDecoder + Sized","parent":null,"children":[{"krate":0,"index":2666},{"krate":0,"index":2668}],"decl_id":null,"docs":" ImageDecoderExt trait\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2666},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":609361,"byte_end":609370,"line_start":440,"line_end":440,"column_start":8,"column_end":17},"name":"read_rect","qualname":"::image::ImageDecoderExt::read_rect","value":"fn (&mut self, x: u64, y: u64, width: u64, height: u64, buf: &mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":2665},"children":[],"decl_id":null,"docs":" Read a rectangular section of the image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2668},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":609681,"byte_end":609704,"line_start":452,"line_end":452,"column_start":8,"column_end":31},"name":"read_rect_with_progress","qualname":"::image::ImageDecoderExt::read_rect_with_progress","value":"fn <F> (&mut self, x: u64, y: u64, width: u64, height: u64, buf: &mut [u8], progress_callback: F) -> ImageResult<()>","parent":{"krate":0,"index":2665},"children":[],"decl_id":null,"docs":" Read a rectangular section of the image, periodically reporting progress.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2670},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":609935,"byte_end":609951,"line_start":464,"line_end":464,"column_start":11,"column_end":27},"name":"AnimationDecoder","qualname":"::image::AnimationDecoder","value":"AnimationDecoder<'a>","parent":null,"children":[{"krate":0,"index":2672}],"decl_id":null,"docs":" AnimationDecoder trait\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2672},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":610023,"byte_end":610034,"line_start":466,"line_end":466,"column_start":8,"column_end":19},"name":"into_frames","qualname":"::image::AnimationDecoder::into_frames","value":"fn (self) -> Frames<'a>","parent":{"krate":0,"index":2670},"children":[],"decl_id":null,"docs":" Consume the decoder producing a series of frames.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2673},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":610099,"byte_end":610105,"line_start":470,"line_end":470,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::image::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2679},{"krate":0,"index":2680}],"decl_id":null,"docs":" Immutable pixel iterator\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2686},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":610887,"byte_end":610896,"line_start":503,"line_end":503,"column_start":12,"column_end":21},"name":"MutPixels","qualname":"::image::MutPixels","value":"MutPixels {  }","parent":null,"children":[{"krate":0,"index":2689},{"krate":0,"index":2690},{"krate":0,"index":2691},{"krate":0,"index":2692},{"krate":0,"index":2693}],"decl_id":null,"docs":" Mutable pixel iterator","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2699},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":611897,"byte_end":611913,"line_start":543,"line_end":543,"column_start":11,"column_end":27},"name":"GenericImageView","qualname":"::image::GenericImageView","value":"GenericImageView","parent":null,"children":[{"krate":0,"index":2700},{"krate":0,"index":2701},{"krate":0,"index":2702},{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2707},{"krate":0,"index":2708},{"krate":0,"index":2709},{"krate":0,"index":2710},{"krate":0,"index":2711}],"decl_id":null,"docs":" Trait to inspect an image.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2700},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":611952,"byte_end":611957,"line_start":545,"line_end":545,"column_start":10,"column_end":15},"name":"Pixel","qualname":"::image::GenericImageView::Pixel","value":"type Pixel: Pixel;","parent":{"krate":0,"index":2699},"children":[],"decl_id":null,"docs":" The type of pixel.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2701},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":612191,"byte_end":612205,"line_start":550,"line_end":550,"column_start":10,"column_end":24},"name":"InnerImageView","qualname":"::image::GenericImageView::InnerImageView","value":"type InnerImageView: GenericImageView<Pixel = Self::Pixel>;","parent":{"krate":0,"index":2699},"children":[],"decl_id":null,"docs":" Underlying image type. This is mainly used by SubImages in order to\n always have a reference to the original image. This allows for less\n indirections and it eases the use of nested SubImages.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2702},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":612298,"byte_end":612308,"line_start":553,"line_end":553,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::GenericImageView::dimensions","value":"fn (&self) -> (u32, u32)","parent":{"krate":0,"index":2699},"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2703},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":612372,"byte_end":612377,"line_start":556,"line_end":556,"column_start":8,"column_end":13},"name":"width","qualname":"::image::GenericImageView::width","value":"fn (&self) -> u32","parent":{"krate":0,"index":2699},"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2704},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":612492,"byte_end":612498,"line_start":562,"line_end":562,"column_start":8,"column_end":14},"name":"height","qualname":"::image::GenericImageView::height","value":"fn (&self) -> u32","parent":{"krate":0,"index":2699},"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2705},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":612625,"byte_end":612631,"line_start":568,"line_end":568,"column_start":8,"column_end":14},"name":"bounds","qualname":"::image::GenericImageView::bounds","value":"fn (&self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":2699},"children":[],"decl_id":null,"docs":" The bounding rectangle of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":612748,"byte_end":612757,"line_start":571,"line_end":571,"column_start":8,"column_end":17},"name":"in_bounds","qualname":"::image::GenericImageView::in_bounds","value":"fn (&self, x: u32, y: u32) -> bool","parent":{"krate":0,"index":2699},"children":[],"decl_id":null,"docs":" Returns true if this x, y coordinate is contained inside the image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2707},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":613080,"byte_end":613089,"line_start":583,"line_end":583,"column_start":8,"column_end":17},"name":"get_pixel","qualname":"::image::GenericImageView::get_pixel","value":"fn (&self, x: u32, y: u32) -> Self::Pixel","parent":{"krate":0,"index":2699},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2708},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":613276,"byte_end":613292,"line_start":588,"line_end":588,"column_start":15,"column_end":31},"name":"unsafe_get_pixel","qualname":"::image::GenericImageView::unsafe_get_pixel","value":"fn (&self, x: u32, y: u32) -> Self::Pixel","parent":{"krate":0,"index":2699},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2709},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":613524,"byte_end":613530,"line_start":595,"line_end":595,"column_start":8,"column_end":14},"name":"pixels","qualname":"::image::GenericImageView::pixels","value":"fn (&self) -> Pixels<Self>","parent":{"krate":0,"index":2699},"children":[],"decl_id":null,"docs":" Returns an Iterator over the pixels of this image.\n The iterator yields the coordinates of each pixel\n along with their value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2710},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":613800,"byte_end":613805,"line_start":608,"line_end":608,"column_start":8,"column_end":13},"name":"inner","qualname":"::image::GenericImageView::inner","value":"fn (&self) -> &Self::InnerImageView","parent":{"krate":0,"index":2699},"children":[],"decl_id":null,"docs":" Returns a reference to the underlying image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2711},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":613918,"byte_end":613922,"line_start":611,"line_end":611,"column_start":8,"column_end":12},"name":"view","qualname":"::image::GenericImageView::view","value":"fn (&self, x: u32, y: u32, width: u32, height: u32) -> SubImage<&Self::InnerImageView>","parent":{"krate":0,"index":2699},"children":[],"decl_id":null,"docs":" Returns an subimage that is an immutable view into this image.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2712},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":614121,"byte_end":614133,"line_start":617,"line_end":617,"column_start":11,"column_end":23},"name":"GenericImage","qualname":"::image::GenericImage","value":"GenericImage: GenericImageView","parent":null,"children":[{"krate":0,"index":2713},{"krate":0,"index":2714},{"krate":0,"index":2715},{"krate":0,"index":2716},{"krate":0,"index":2717},{"krate":0,"index":2718},{"krate":0,"index":2719},{"krate":0,"index":2721},{"krate":0,"index":2722}],"decl_id":null,"docs":" A trait for manipulating images.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2713},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":614378,"byte_end":614388,"line_start":621,"line_end":621,"column_start":10,"column_end":20},"name":"InnerImage","qualname":"::image::GenericImage::InnerImage","value":"type InnerImage: GenericImage<Pixel = Self::Pixel>;","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" Underlying image type. This is mainly used by SubImages in order to\n always have a reference to the original image. This allows for less\n indirections and it eases the use of nested SubImages.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":614578,"byte_end":614591,"line_start":628,"line_end":628,"column_start":8,"column_end":21},"name":"get_pixel_mut","qualname":"::image::GenericImage::get_pixel_mut","value":"fn (&mut self, x: u32, y: u32) -> &mut Self::Pixel","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2715},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":614765,"byte_end":614774,"line_start":635,"line_end":635,"column_start":8,"column_end":17},"name":"put_pixel","qualname":"::image::GenericImage::put_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: Self::Pixel) -> ()","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2716},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":614966,"byte_end":614982,"line_start":640,"line_end":640,"column_start":15,"column_end":31},"name":"unsafe_put_pixel","qualname":"::image::GenericImage::unsafe_put_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: Self::Pixel) -> ()","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" Puts a pixel at location (x, y)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2717},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":615249,"byte_end":615260,"line_start":647,"line_end":647,"column_start":8,"column_end":19},"name":"blend_pixel","qualname":"::image::GenericImage::blend_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: Self::Pixel) -> ()","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y), taking into account alpha channels","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":615609,"byte_end":615619,"line_start":655,"line_end":655,"column_start":8,"column_end":18},"name":"pixels_mut","qualname":"::image::GenericImage::pixels_mut","value":"fn (&mut self) -> MutPixels<Self>","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" Returns an Iterator over mutable pixels of this image.\n The iterator yields the coordinates of each pixel\n along with a mutable reference to them.\n","sig":null,"attributes":[{"value":"deprecated(note =\n             \"This cannot be implemented safely in Rust. Please use the image buffer directly.\")","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":615483,"byte_end":615601,"line_start":652,"line_end":654,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":2719},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":616253,"byte_end":616262,"line_start":677,"line_end":677,"column_start":8,"column_end":17},"name":"copy_from","qualname":"::image::GenericImage::copy_from","value":"fn <O> (&mut self, other: &O, x: u32, y: u32) -> bool","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" Copies all of the pixels from another image into this image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2721},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":616894,"byte_end":616903,"line_start":697,"line_end":697,"column_start":8,"column_end":17},"name":"inner_mut","qualname":"::image::GenericImage::inner_mut","value":"fn (&mut self) -> &mut Self::InnerImage","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2722},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":617008,"byte_end":617017,"line_start":700,"line_end":700,"column_start":8,"column_end":17},"name":"sub_image","qualname":"::image::GenericImage::sub_image","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32) -> SubImage<&mut Self::InnerImage>","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" Returns a subimage that is a view into this image.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2723},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":617265,"byte_end":617273,"line_start":712,"line_end":712,"column_start":12,"column_end":20},"name":"SubImage","qualname":"::image::SubImage","value":"SubImage {  }","parent":null,"children":[{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2729}],"decl_id":null,"docs":" A View into another image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2736},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":617661,"byte_end":617664,"line_start":728,"line_end":728,"column_start":12,"column_end":15},"name":"new","qualname":"<SubImage<I>>::new","value":"fn (image: I, x: u32, y: u32, width: u32, height: u32) -> SubImage<I>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new subimage\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":617953,"byte_end":617966,"line_start":739,"line_end":739,"column_start":12,"column_end":25},"name":"change_bounds","qualname":"<SubImage<I>>::change_bounds","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Change the coordinates of this subimage.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2738},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":618200,"byte_end":618208,"line_start":747,"line_end":747,"column_start":12,"column_end":20},"name":"to_image","qualname":"<SubImage<I>>::to_image","value":"fn (&self) -> ImageBuffer<DerefPixel<I>, Vec<DerefSubpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert this subimage to an ImageBuffer\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2762},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\traits.rs","byte_start":625864,"byte_end":625873,"line_start":9,"line_end":9,"column_start":11,"column_end":20},"name":"Primitive","qualname":"::traits::Primitive","value":"Primitive: Copy + NumCast + Num + PartialOrd<Self> + Clone + Bounded","parent":null,"children":[],"decl_id":null,"docs":" Primitive trait from old stdlib\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2775},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\traits.rs","byte_start":626395,"byte_end":626406,"line_start":26,"line_end":26,"column_start":11,"column_end":22},"name":"Enlargeable","qualname":"::traits::Enlargeable","value":"Enlargeable: Sized + Bounded + NumCast","parent":null,"children":[{"krate":0,"index":2776},{"krate":0,"index":2777}],"decl_id":null,"docs":" An Enlargable::Larger value should be enough to calculate\n the sum (average) of a few hundred or thousand Enlargeable values.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2776},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\traits.rs","byte_start":626445,"byte_end":626451,"line_start":27,"line_end":27,"column_start":10,"column_end":16},"name":"Larger","qualname":"::traits::Enlargeable::Larger","value":"type Larger: Primitive + AddAssign + 'static;","parent":{"krate":0,"index":2775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2777},"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\traits.rs","byte_start":626494,"byte_end":626504,"line_start":29,"line_end":29,"column_start":8,"column_end":18},"name":"clamp_from","qualname":"::traits::Enlargeable::clamp_from","value":"fn (n: Self::Larger) -> Self","parent":{"krate":0,"index":2775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\math\\nq.rs","byte_start":5312,"byte_end":5320,"line_start":73,"line_end":73,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\colorops.rs","byte_start":37065,"byte_end":37072,"line_start":194,"line_end":194,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\colorops.rs","byte_start":37522,"byte_end":37530,"line_start":215,"line_end":215,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\sample.rs","byte_start":50196,"byte_end":50208,"line_start":300,"line_end":300,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":70642,"byte_end":70654,"line_start":108,"line_end":108,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":378},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":83286,"byte_end":83289,"line_start":421,"line_end":421,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":83547,"byte_end":83558,"line_start":436,"line_end":436,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":391},{"krate":0,"index":393},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":105332,"byte_end":105336,"line_start":971,"line_end":971,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":110907,"byte_end":110914,"line_start":1103,"line_end":1103,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":115291,"byte_end":115302,"line_start":1217,"line_end":1217,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":115911,"byte_end":115922,"line_start":1236,"line_end":1236,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":116526,"byte_end":116530,"line_start":1254,"line_end":1254,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":117787,"byte_end":117794,"line_start":1299,"line_end":1299,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":119071,"byte_end":119078,"line_start":1344,"line_end":1344,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":119976,"byte_end":119986,"line_start":1373,"line_end":1373,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":120378,"byte_end":120388,"line_start":1384,"line_end":1384,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\decoder.rs","byte_start":129030,"byte_end":129041,"line_start":95,"line_end":95,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\decoder.rs","byte_start":136681,"byte_end":136689,"line_start":327,"line_end":327,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\decoder.rs","byte_start":138147,"byte_end":138156,"line_start":373,"line_end":373,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\decoder.rs","byte_start":139447,"byte_end":139462,"line_start":428,"line_end":428,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\decoder.rs","byte_start":141318,"byte_end":141328,"line_start":480,"line_end":480,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\decoder.rs","byte_start":171773,"byte_end":171783,"line_start":1258,"line_end":1258,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\decoder.rs","byte_start":172333,"byte_end":172343,"line_start":1282,"line_end":1282,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\encoder.rs","byte_start":173828,"byte_end":173838,"line_start":15,"line_end":15,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","byte_start":185979,"byte_end":185989,"line_start":31,"line_end":31,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","byte_start":186948,"byte_end":186958,"line_start":67,"line_end":67,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":728},{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","byte_start":188593,"byte_end":188603,"line_start":113,"line_end":113,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","byte_start":189751,"byte_end":189761,"line_start":152,"line_end":152,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","byte_start":190719,"byte_end":190728,"line_start":182,"line_end":182,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","byte_start":190996,"byte_end":191006,"line_start":194,"line_end":194,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","byte_start":214594,"byte_end":214601,"line_start":50,"line_end":50,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","byte_start":214927,"byte_end":214934,"line_start":62,"line_end":62,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","byte_start":215907,"byte_end":215923,"line_start":104,"line_end":104,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","byte_start":217983,"byte_end":217999,"line_start":158,"line_end":158,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","byte_start":220972,"byte_end":220979,"line_start":238,"line_end":238,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","byte_start":221242,"byte_end":221249,"line_start":250,"line_end":250,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","byte_start":223482,"byte_end":223492,"line_start":312,"line_end":312,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":224680,"byte_end":224690,"line_start":24,"line_end":24,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":226027,"byte_end":226037,"line_start":69,"line_end":69,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":226615,"byte_end":226625,"line_start":94,"line_end":94,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":227869,"byte_end":227879,"line_start":144,"line_end":144,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":230164,"byte_end":230174,"line_start":209,"line_end":209,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":962},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":236192,"byte_end":236203,"line_start":356,"line_end":356,"column_start":39,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":238890,"byte_end":238900,"line_start":420,"line_end":420,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":239800,"byte_end":239823,"line_start":448,"line_end":448,"column_start":18,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":240116,"byte_end":240139,"line_start":461,"line_end":461,"column_start":31,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":241846,"byte_end":241869,"line_start":510,"line_end":510,"column_start":40,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":248652,"byte_end":248663,"line_start":695,"line_end":695,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1005},{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":255345,"byte_end":255351,"line_start":866,"line_end":866,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":255635,"byte_end":255641,"line_start":874,"line_end":874,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\encoder.rs","byte_start":259393,"byte_end":259403,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1047},{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\encoder.rs","byte_start":262210,"byte_end":262221,"line_start":91,"line_end":91,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\encoder.rs","byte_start":262347,"byte_end":262358,"line_start":97,"line_end":97,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1063},{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\encoder.rs","byte_start":263059,"byte_end":263079,"line_start":126,"line_end":126,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\encoder.rs","byte_start":263338,"byte_end":263358,"line_start":136,"line_end":136,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\ico\\decoder.rs","byte_start":275797,"byte_end":275807,"line_start":40,"line_end":40,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\ico\\decoder.rs","byte_start":278301,"byte_end":278309,"line_start":115,"line_end":115,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1133},{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\ico\\decoder.rs","byte_start":279564,"byte_end":279574,"line_start":161,"line_end":161,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\ico\\encoder.rs","byte_start":284385,"byte_end":284395,"line_start":20,"line_end":20,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\decoder.rs","byte_start":287618,"byte_end":287629,"line_start":14,"line_end":14,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\decoder.rs","byte_start":288240,"byte_end":288251,"line_start":34,"line_end":34,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\decoder.rs","byte_start":289659,"byte_end":289668,"line_start":88,"line_end":88,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\decoder.rs","byte_start":289980,"byte_end":289990,"line_start":99,"line_end":99,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\encoder.rs","byte_start":296130,"byte_end":296139,"line_start":166,"line_end":166,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\encoder.rs","byte_start":299226,"byte_end":299237,"line_start":289,"line_end":289,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\png.rs","byte_start":324817,"byte_end":324827,"line_start":25,"line_end":25,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\png.rs","byte_start":325295,"byte_end":325305,"line_start":39,"line_end":39,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\png.rs","byte_start":325916,"byte_end":325926,"line_start":67,"line_end":67,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1362},{"krate":0,"index":1363}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\png.rs","byte_start":326611,"byte_end":326620,"line_start":85,"line_end":85,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\png.rs","byte_start":327713,"byte_end":327723,"line_start":115,"line_end":115,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1372}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\autobreak.rs","byte_start":333979,"byte_end":333988,"line_start":15,"line_end":15,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1400},{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\autobreak.rs","byte_start":335249,"byte_end":335258,"line_start":58,"line_end":58,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1404},{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\autobreak.rs","byte_start":335884,"byte_end":335893,"line_start":82,"line_end":82,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":338236,"byte_end":338246,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":351437,"byte_end":351446,"line_start":407,"line_end":407,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":351485,"byte_end":351495,"line_start":409,"line_end":409,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":351928,"byte_end":351938,"line_start":429,"line_end":429,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1504},{"krate":0,"index":1506}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":353620,"byte_end":353629,"line_start":471,"line_end":471,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":355012,"byte_end":355014,"line_start":514,"line_end":514,"column_start":17,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":355710,"byte_end":355713,"line_start":543,"line_end":543,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1526}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":356968,"byte_end":356974,"line_start":582,"line_end":582,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1531}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":358474,"byte_end":358479,"line_start":632,"line_end":632,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1537}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":359305,"byte_end":359317,"line_start":662,"line_end":662,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":359442,"byte_end":359455,"line_start":668,"line_end":668,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":359835,"byte_end":359847,"line_start":680,"line_end":680,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1543}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":360223,"byte_end":360238,"line_start":692,"line_end":692,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1545}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":374982,"byte_end":374992,"line_start":76,"line_end":76,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":382264,"byte_end":382282,"line_start":272,"line_end":272,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1627}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":383407,"byte_end":383422,"line_start":307,"line_end":307,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1632}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":383910,"byte_end":383927,"line_start":324,"line_end":324,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1635}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":387431,"byte_end":387449,"line_start":415,"line_end":415,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1638}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":389580,"byte_end":389593,"line_start":474,"line_end":474,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1641},{"krate":0,"index":1642}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":389895,"byte_end":389907,"line_start":487,"line_end":487,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1649},{"krate":0,"index":1651}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":391324,"byte_end":391335,"line_start":532,"line_end":532,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":393046,"byte_end":393057,"line_start":586,"line_end":586,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1662}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":393176,"byte_end":393187,"line_start":592,"line_end":592,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1665}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":393288,"byte_end":393301,"line_start":598,"line_end":598,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1668}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":398443,"byte_end":398453,"line_start":136,"line_end":136,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1689},{"krate":0,"index":1691}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":399423,"byte_end":399432,"line_start":161,"line_end":161,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1693},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":405608,"byte_end":405617,"line_start":314,"line_end":314,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1703}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":405810,"byte_end":405819,"line_start":323,"line_end":323,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":406013,"byte_end":406022,"line_start":332,"line_end":332,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1707}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":406217,"byte_end":406226,"line_start":341,"line_end":341,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1709}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tga\\decoder.rs","byte_start":407130,"byte_end":407139,"line_start":21,"line_end":21,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tga\\decoder.rs","byte_start":408984,"byte_end":408990,"line_start":84,"line_end":84,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1756},{"krate":0,"index":1757}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tga\\decoder.rs","byte_start":410315,"byte_end":410323,"line_start":129,"line_end":129,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1763},{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tga\\decoder.rs","byte_start":411427,"byte_end":411437,"line_start":175,"line_end":175,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":1794},{"krate":0,"index":1795}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tga\\decoder.rs","byte_start":423006,"byte_end":423016,"line_start":501,"line_end":501,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tga\\decoder.rs","byte_start":423854,"byte_end":423863,"line_start":536,"line_end":536,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1810}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tiff.rs","byte_start":424674,"byte_end":424685,"line_start":26,"line_end":26,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1831}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tiff.rs","byte_start":425108,"byte_end":425118,"line_start":43,"line_end":43,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1833}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tiff.rs","byte_start":425508,"byte_end":425517,"line_start":53,"line_end":53,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1835}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tiff.rs","byte_start":426047,"byte_end":426058,"line_start":66,"line_end":66,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":1842}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\decoder.rs","byte_start":427205,"byte_end":427216,"line_start":23,"line_end":23,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\decoder.rs","byte_start":429353,"byte_end":429364,"line_start":101,"line_end":101,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1878}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":458129,"byte_end":458139,"line_start":674,"line_end":674,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1974},{"krate":0,"index":1975},{"krate":0,"index":1976},{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":462492,"byte_end":462502,"line_start":870,"line_end":870,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2006},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2018},{"krate":0,"index":2022},{"krate":0,"index":2023},{"krate":0,"index":2024},{"krate":0,"index":2028}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":483941,"byte_end":483949,"line_start":1529,"line_end":1529,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2033},{"krate":0,"index":2034}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":484566,"byte_end":484574,"line_start":1552,"line_end":1552,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2036}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":484639,"byte_end":484649,"line_start":1558,"line_end":1558,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2038}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":484938,"byte_end":484948,"line_start":1570,"line_end":1570,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2040}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":485015,"byte_end":485024,"line_start":1576,"line_end":1576,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2042}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":485561,"byte_end":485570,"line_start":1594,"line_end":1594,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2044}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\animation.rs","byte_start":500236,"byte_end":500242,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2081},{"krate":0,"index":2082}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\animation.rs","byte_start":500829,"byte_end":500835,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2085},{"krate":0,"index":2086}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\animation.rs","byte_start":501191,"byte_end":501196,"line_start":48,"line_end":48,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2094}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":506833,"byte_end":506839,"line_start":143,"line_end":143,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2167},{"krate":0,"index":2168}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":507083,"byte_end":507089,"line_start":155,"line_end":155,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2173}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":507238,"byte_end":507244,"line_start":164,"line_end":164,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2177}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":507614,"byte_end":507623,"line_start":182,"line_end":182,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2186},{"krate":0,"index":2187}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":507879,"byte_end":507888,"line_start":194,"line_end":194,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2192}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":508037,"byte_end":508046,"line_start":203,"line_end":203,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2196}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":508495,"byte_end":508510,"line_start":226,"line_end":226,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2208},{"krate":0,"index":2209}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":508978,"byte_end":508993,"line_start":247,"line_end":247,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2213}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":509331,"byte_end":509349,"line_start":267,"line_end":267,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2224},{"krate":0,"index":2225}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":509825,"byte_end":509843,"line_start":288,"line_end":288,"column_start":47,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2229}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":510196,"byte_end":510207,"line_start":307,"line_end":307,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2243},{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2250}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":515285,"byte_end":515296,"line_start":454,"line_end":454,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":2256},{"krate":0,"index":2257}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":516819,"byte_end":516830,"line_start":502,"line_end":502,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2261}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":517452,"byte_end":517463,"line_start":526,"line_end":526,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2266},{"krate":0,"index":2267}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":517727,"byte_end":517738,"line_start":539,"line_end":539,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2271}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":518004,"byte_end":518015,"line_start":550,"line_end":550,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2275},{"krate":0,"index":2276}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":518286,"byte_end":518297,"line_start":563,"line_end":563,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2280}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":518558,"byte_end":518569,"line_start":574,"line_end":574,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2284}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":518928,"byte_end":518939,"line_start":589,"line_end":589,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2288},{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":2292},{"krate":0,"index":2293},{"krate":0,"index":2294}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":519763,"byte_end":519774,"line_start":622,"line_end":622,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2301},{"krate":0,"index":2302},{"krate":0,"index":2303}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":521228,"byte_end":521239,"line_start":664,"line_end":664,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2306},{"krate":0,"index":2307},{"krate":0,"index":2308},{"krate":0,"index":2310},{"krate":0,"index":2311}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":523673,"byte_end":523682,"line_start":742,"line_end":742,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2316}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":525080,"byte_end":525091,"line_start":780,"line_end":780,"column_start":67,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":2324}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":536033,"byte_end":536034,"line_start":243,"line_end":243,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2349}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":536190,"byte_end":536194,"line_start":251,"line_end":251,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2352}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":536573,"byte_end":536577,"line_start":261,"line_end":261,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2355}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":536959,"byte_end":536963,"line_start":271,"line_end":271,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2358}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":537341,"byte_end":537345,"line_start":282,"line_end":282,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2361}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":537725,"byte_end":537729,"line_start":293,"line_end":293,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2364}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":537924,"byte_end":537929,"line_start":301,"line_end":301,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2367}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":538346,"byte_end":538351,"line_start":312,"line_end":312,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2370}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":538767,"byte_end":538772,"line_start":323,"line_end":323,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2373}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":539190,"byte_end":539195,"line_start":334,"line_end":334,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2376}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":539614,"byte_end":539619,"line_start":345,"line_end":345,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2379}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":539878,"byte_end":539882,"line_start":355,"line_end":355,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2382}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":540183,"byte_end":540187,"line_start":366,"line_end":366,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2385}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":540489,"byte_end":540493,"line_start":377,"line_end":377,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2388}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":540795,"byte_end":540799,"line_start":389,"line_end":389,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2391}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":541102,"byte_end":541106,"line_start":402,"line_end":402,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2394}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":541431,"byte_end":541435,"line_start":416,"line_end":416,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2397}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":541737,"byte_end":541741,"line_start":428,"line_end":428,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2400}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":542044,"byte_end":542048,"line_start":440,"line_end":440,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2403}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":542349,"byte_end":542353,"line_start":451,"line_end":451,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2406}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":542654,"byte_end":542658,"line_start":462,"line_end":462,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2409}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":542984,"byte_end":542987,"line_start":477,"line_end":477,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2412}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":543257,"byte_end":543260,"line_start":488,"line_end":488,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2415}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":543528,"byte_end":543531,"line_start":498,"line_end":498,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2418}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":543796,"byte_end":543799,"line_start":508,"line_end":508,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2421}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":544063,"byte_end":544066,"line_start":518,"line_end":518,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2424}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":544352,"byte_end":544355,"line_start":530,"line_end":530,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2427}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":544623,"byte_end":544626,"line_start":540,"line_end":540,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2430}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":544891,"byte_end":544894,"line_start":551,"line_end":551,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2433}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":545164,"byte_end":545167,"line_start":561,"line_end":561,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2436}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":545431,"byte_end":545434,"line_start":571,"line_end":571,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2439}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":545803,"byte_end":545808,"line_start":588,"line_end":588,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2444}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":546825,"byte_end":546829,"line_start":621,"line_end":621,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2447}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":546939,"byte_end":546943,"line_start":627,"line_end":627,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2450}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":549175,"byte_end":549179,"line_start":685,"line_end":685,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2453}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":551409,"byte_end":551412,"line_start":741,"line_end":741,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2456}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":551521,"byte_end":551524,"line_start":747,"line_end":747,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2459}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":551736,"byte_end":551741,"line_start":760,"line_end":760,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2464}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":551917,"byte_end":551921,"line_start":769,"line_end":769,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2467}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":552121,"byte_end":552125,"line_start":780,"line_end":780,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2470}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":552341,"byte_end":552345,"line_start":791,"line_end":791,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2473}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":552561,"byte_end":552564,"line_start":802,"line_end":802,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2476}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":552829,"byte_end":552832,"line_start":816,"line_end":816,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2479}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":561006,"byte_end":561018,"line_start":104,"line_end":104,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":2529},{"krate":0,"index":2530},{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2535},{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2540},{"krate":0,"index":2541},{"krate":0,"index":2542},{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2545},{"krate":0,"index":2546},{"krate":0,"index":2547},{"krate":0,"index":2548},{"krate":0,"index":2549},{"krate":0,"index":2550},{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2553},{"krate":0,"index":2554},{"krate":0,"index":2555},{"krate":0,"index":2556},{"krate":0,"index":2557},{"krate":0,"index":2558},{"krate":0,"index":2559},{"krate":0,"index":2560},{"krate":0,"index":2561},{"krate":0,"index":2562},{"krate":0,"index":2563},{"krate":0,"index":2564},{"krate":0,"index":2565},{"krate":0,"index":2566},{"krate":0,"index":2567},{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2573}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":577617,"byte_end":577629,"line_start":569,"line_end":569,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2581}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":578149,"byte_end":578161,"line_start":591,"line_end":591,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2583},{"krate":0,"index":2584},{"krate":0,"index":2585},{"krate":0,"index":2586},{"krate":0,"index":2587}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":595568,"byte_end":595578,"line_start":46,"line_end":46,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2627}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":596787,"byte_end":596797,"line_start":79,"line_end":79,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2629},{"krate":0,"index":2630}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":597542,"byte_end":597552,"line_start":101,"line_end":101,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2632}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":599254,"byte_end":599271,"line_start":178,"line_end":178,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2636}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":600406,"byte_end":600421,"line_start":212,"line_end":212,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2644},{"krate":0,"index":2645}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":610249,"byte_end":610255,"line_start":478,"line_end":478,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2684},{"krate":0,"index":2685}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":611045,"byte_end":611054,"line_start":511,"line_end":511,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2697},{"krate":0,"index":2698}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":617603,"byte_end":617611,"line_start":726,"line_end":726,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2736},{"krate":0,"index":2737},{"krate":0,"index":2738}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":618748,"byte_end":618756,"line_start":767,"line_end":767,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2747}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":619577,"byte_end":619585,"line_start":799,"line_end":799,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2754},{"krate":0,"index":2755}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":1991,"byte_end":1995,"line_start":73,"line_end":73,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":92}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\math\\mod.rs","byte_start":2943,"byte_end":2945,"line_start":2,"line_end":2,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":93}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\math\\mod.rs","byte_start":2955,"byte_end":2960,"line_start":3,"line_end":3,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":131}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":2036,"byte_end":2044,"line_start":76,"line_end":76,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":134}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\mod.rs","byte_start":18358,"byte_end":18366,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":185}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":2090,"byte_end":2094,"line_start":79,"line_end":79,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":341}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":2145,"byte_end":2148,"line_start":83,"line_end":83,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":498}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":2182,"byte_end":2185,"line_start":85,"line_end":85,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":699}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":2225,"byte_end":2228,"line_start":87,"line_end":87,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":809}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":2262,"byte_end":2265,"line_start":89,"line_end":89,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":888}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":2299,"byte_end":2302,"line_start":91,"line_end":91,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1084}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":2337,"byte_end":2341,"line_start":93,"line_end":93,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1172}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":2381,"byte_end":2384,"line_start":95,"line_end":95,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1329}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":2418,"byte_end":2421,"line_start":97,"line_end":97,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1374}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":2455,"byte_end":2458,"line_start":99,"line_end":99,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1710}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":2493,"byte_end":2497,"line_start":101,"line_end":101,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1812}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src/lib.rs","byte_start":2532,"byte_end":2536,"line_start":103,"line_end":103,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1843}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\mod.rs","byte_start":426738,"byte_end":426741,"line_start":8,"line_end":8,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1885}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\math\\nq.rs","byte_start":5312,"byte_end":5320,"line_start":73,"line_end":73,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\colorops.rs","byte_start":37065,"byte_end":37072,"line_start":194,"line_end":194,"column_start":19,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2808},"to":{"krate":0,"index":224}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\colorops.rs","byte_start":37522,"byte_end":37530,"line_start":215,"line_end":215,"column_start":23,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":109},"to":{"krate":0,"index":224}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\imageops\\sample.rs","byte_start":50196,"byte_end":50208,"line_start":300,"line_end":300,"column_start":34,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":70642,"byte_end":70654,"line_start":108,"line_end":108,"column_start":6,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":83286,"byte_end":83289,"line_start":421,"line_end":421,"column_start":6,"column_end":9},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":83547,"byte_end":83558,"line_start":436,"line_end":436,"column_start":14,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":105332,"byte_end":105336,"line_start":971,"line_end":971,"column_start":24,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":110907,"byte_end":110914,"line_start":1103,"line_end":1103,"column_start":24,"column_end":31},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2899},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":115291,"byte_end":115302,"line_start":1217,"line_end":1217,"column_start":40,"column_end":51},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2829},"to":{"krate":2,"index":1779}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":115911,"byte_end":115922,"line_start":1236,"line_end":1236,"column_start":43,"column_end":54},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2829},"to":{"krate":2,"index":1783}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":116526,"byte_end":116530,"line_start":1254,"line_end":1254,"column_start":45,"column_end":49},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2886},"to":{"krate":0,"index":2699}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":117787,"byte_end":117794,"line_start":1299,"line_end":1299,"column_start":45,"column_end":52},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2899},"to":{"krate":0,"index":2699}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":119071,"byte_end":119078,"line_start":1344,"line_end":1344,"column_start":41,"column_end":48},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2899},"to":{"krate":0,"index":2712}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":119976,"byte_end":119986,"line_start":1373,"line_end":1373,"column_start":22,"column_end":32},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3905},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\flat.rs","byte_start":120378,"byte_end":120388,"line_start":1384,"line_end":1384,"column_start":21,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2934},"to":{"krate":2,"index":2076}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\decoder.rs","byte_start":129030,"byte_end":129041,"line_start":95,"line_end":95,"column_start":23,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":554},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\decoder.rs","byte_start":136681,"byte_end":136689,"line_start":327,"line_end":327,"column_start":6,"column_end":14},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\decoder.rs","byte_start":138147,"byte_end":138156,"line_start":373,"line_end":373,"column_start":6,"column_end":15},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3015},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\decoder.rs","byte_start":139447,"byte_end":139462,"line_start":428,"line_end":428,"column_start":32,"column_end":47},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":620},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\decoder.rs","byte_start":141318,"byte_end":141328,"line_start":480,"line_end":480,"column_start":22,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\decoder.rs","byte_start":171773,"byte_end":171783,"line_start":1258,"line_end":1258,"column_start":39,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":587},"to":{"krate":0,"index":2653}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\decoder.rs","byte_start":172333,"byte_end":172343,"line_start":1282,"line_end":1282,"column_start":42,"column_end":52},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":587},"to":{"krate":0,"index":2665}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\bmp\\encoder.rs","byte_start":173828,"byte_end":173838,"line_start":15,"line_end":15,"column_start":25,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","byte_start":185979,"byte_end":185989,"line_start":31,"line_end":31,"column_start":6,"column_end":16},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3030},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","byte_start":186948,"byte_end":186958,"line_start":67,"line_end":67,"column_start":15,"column_end":25},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","byte_start":188593,"byte_end":188603,"line_start":113,"line_end":113,"column_start":32,"column_end":42},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":719},"to":{"krate":0,"index":2653}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","byte_start":189751,"byte_end":189761,"line_start":152,"line_end":152,"column_start":42,"column_end":52},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":719},"to":{"krate":0,"index":2665}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","byte_start":190719,"byte_end":190728,"line_start":182,"line_end":182,"column_start":24,"column_end":33},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":744},"to":{"krate":1,"index":2848}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dxt.rs","byte_start":190996,"byte_end":191006,"line_start":194,"line_end":194,"column_start":16,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","byte_start":214594,"byte_end":214601,"line_start":50,"line_end":50,"column_start":15,"column_end":22},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","byte_start":214927,"byte_end":214934,"line_start":62,"line_end":62,"column_start":32,"column_end":39},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":835},"to":{"krate":0,"index":2653}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","byte_start":215907,"byte_end":215923,"line_start":104,"line_end":104,"column_start":15,"column_end":31},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","byte_start":217983,"byte_end":217999,"line_start":158,"line_end":158,"column_start":28,"column_end":44},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":848},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","byte_start":220972,"byte_end":220979,"line_start":238,"line_end":238,"column_start":49,"column_end":56},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":835},"to":{"krate":0,"index":2670}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","byte_start":221242,"byte_end":221249,"line_start":250,"line_end":250,"column_start":16,"column_end":23},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\gif.rs","byte_start":223482,"byte_end":223492,"line_start":312,"line_end":312,"column_start":35,"column_end":45},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3905},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":224680,"byte_end":224690,"line_start":24,"line_end":24,"column_start":18,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":226027,"byte_end":226037,"line_start":69,"line_end":69,"column_start":35,"column_end":45},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3046},"to":{"krate":0,"index":2653}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":226615,"byte_end":226625,"line_start":94,"line_end":94,"column_start":45,"column_end":55},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3046},"to":{"krate":0,"index":2665}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":227869,"byte_end":227879,"line_start":144,"line_end":144,"column_start":6,"column_end":16},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":230164,"byte_end":230174,"line_start":209,"line_end":209,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3054},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":236192,"byte_end":236203,"line_start":356,"line_end":356,"column_start":39,"column_end":50},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":955},"to":{"krate":2,"index":1534}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":238890,"byte_end":238900,"line_start":420,"line_end":420,"column_start":35,"column_end":45},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3054},"to":{"krate":2,"index":3808}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":239800,"byte_end":239823,"line_start":448,"line_end":448,"column_start":18,"column_end":41},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":240116,"byte_end":240139,"line_start":461,"line_end":461,"column_start":31,"column_end":54},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":971},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":241846,"byte_end":241869,"line_start":510,"line_end":510,"column_start":40,"column_end":63},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":971},"to":{"krate":2,"index":3796}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":248652,"byte_end":248663,"line_start":695,"line_end":695,"column_start":6,"column_end":17},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":255345,"byte_end":255351,"line_start":866,"line_end":866,"column_start":46,"column_end":52},"kind":{"Impl":{"id":48}},"from":{"krate":2,"index":29136},"to":{"krate":0,"index":1010}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\decoder.rs","byte_start":255635,"byte_end":255641,"line_start":874,"line_end":874,"column_start":46,"column_end":52},"kind":{"Impl":{"id":49}},"from":{"krate":2,"index":29136},"to":{"krate":0,"index":1010}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\encoder.rs","byte_start":259393,"byte_end":259403,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1042},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\encoder.rs","byte_start":262210,"byte_end":262221,"line_start":91,"line_end":91,"column_start":10,"column_end":21},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1054},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\encoder.rs","byte_start":262347,"byte_end":262358,"line_start":97,"line_end":97,"column_start":23,"column_end":34},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1054},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\encoder.rs","byte_start":263059,"byte_end":263079,"line_start":126,"line_end":126,"column_start":10,"column_end":30},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1066},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\hdr\\encoder.rs","byte_start":263338,"byte_end":263358,"line_start":136,"line_end":136,"column_start":23,"column_end":43},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1066},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\ico\\decoder.rs","byte_start":275797,"byte_end":275807,"line_start":40,"line_end":40,"column_start":22,"column_end":32},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\ico\\decoder.rs","byte_start":278301,"byte_end":278309,"line_start":115,"line_end":115,"column_start":6,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\ico\\decoder.rs","byte_start":279564,"byte_end":279574,"line_start":161,"line_end":161,"column_start":39,"column_end":49},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1106},"to":{"krate":0,"index":2653}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\ico\\encoder.rs","byte_start":284385,"byte_end":284395,"line_start":20,"line_end":20,"column_start":16,"column_end":26},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\decoder.rs","byte_start":287618,"byte_end":287629,"line_start":14,"line_end":14,"column_start":15,"column_end":26},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\decoder.rs","byte_start":288240,"byte_end":288251,"line_start":34,"line_end":34,"column_start":32,"column_end":43},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1185},"to":{"krate":0,"index":2653}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\decoder.rs","byte_start":289659,"byte_end":289668,"line_start":88,"line_end":88,"column_start":42,"column_end":51},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3435},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\decoder.rs","byte_start":289980,"byte_end":289990,"line_start":99,"line_end":99,"column_start":36,"column_end":46},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3905},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\encoder.rs","byte_start":296130,"byte_end":296139,"line_start":166,"line_end":166,"column_start":25,"column_end":34},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\jpeg\\encoder.rs","byte_start":299226,"byte_end":299237,"line_start":289,"line_end":289,"column_start":20,"column_end":31},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\png.rs","byte_start":324817,"byte_end":324827,"line_start":25,"line_end":25,"column_start":15,"column_end":25},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\png.rs","byte_start":325295,"byte_end":325305,"line_start":39,"line_end":39,"column_start":32,"column_end":42},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1343},"to":{"krate":0,"index":2653}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\png.rs","byte_start":325916,"byte_end":325926,"line_start":67,"line_end":67,"column_start":16,"column_end":26},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\png.rs","byte_start":326611,"byte_end":326620,"line_start":85,"line_end":85,"column_start":48,"column_end":57},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3435},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\png.rs","byte_start":327713,"byte_end":327723,"line_start":115,"line_end":115,"column_start":35,"column_end":45},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3905},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\autobreak.rs","byte_start":333979,"byte_end":333988,"line_start":15,"line_end":15,"column_start":20,"column_end":29},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\autobreak.rs","byte_start":335249,"byte_end":335258,"line_start":58,"line_end":58,"column_start":34,"column_end":43},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1391},"to":{"krate":1,"index":2902}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\autobreak.rs","byte_start":335884,"byte_end":335893,"line_start":82,"line_end":82,"column_start":29,"column_end":38},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1391},"to":{"krate":2,"index":1725}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":338236,"byte_end":338246,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":341693,"byte_end":341700,"line_start":150,"line_end":150,"column_start":21,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2924},"to":{"krate":0,"index":1467}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":351437,"byte_end":351446,"line_start":407,"line_end":407,"column_start":32,"column_end":41},"kind":{"Impl":{"id":74}},"from":{"krate":1,"index":2310},"to":{"krate":0,"index":1467}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":351485,"byte_end":351495,"line_start":409,"line_end":409,"column_start":32,"column_end":42},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1454},"to":{"krate":0,"index":2653}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":351928,"byte_end":351938,"line_start":429,"line_end":429,"column_start":15,"column_end":25},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":353620,"byte_end":353629,"line_start":471,"line_end":471,"column_start":6,"column_end":15},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":355012,"byte_end":355014,"line_start":514,"line_end":514,"column_start":17,"column_end":19},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1444},"to":{"krate":0,"index":1440}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":355710,"byte_end":355713,"line_start":543,"line_end":543,"column_start":17,"column_end":20},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1446},"to":{"krate":0,"index":1440}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":356968,"byte_end":356974,"line_start":582,"line_end":582,"column_start":17,"column_end":23},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1448},"to":{"krate":0,"index":1440}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":358474,"byte_end":358479,"line_start":632,"line_end":632,"column_start":17,"column_end":22},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1450},"to":{"krate":0,"index":1440}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":359305,"byte_end":359317,"line_start":662,"line_end":662,"column_start":31,"column_end":43},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3209},"to":{"krate":0,"index":1452}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":359442,"byte_end":359455,"line_start":668,"line_end":668,"column_start":31,"column_end":44},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":3218},"to":{"krate":0,"index":1452}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":359835,"byte_end":359847,"line_start":680,"line_end":680,"column_start":31,"column_end":43},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":3228},"to":{"krate":0,"index":1452}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\decoder.rs","byte_start":360223,"byte_end":360238,"line_start":692,"line_end":692,"column_start":31,"column_end":46},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":3238},"to":{"krate":0,"index":1452}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":374982,"byte_end":374992,"line_start":76,"line_end":76,"column_start":16,"column_end":26},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":382264,"byte_end":382282,"line_start":272,"line_end":272,"column_start":10,"column_end":28},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":383407,"byte_end":383422,"line_start":307,"line_end":307,"column_start":10,"column_end":25},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":383910,"byte_end":383927,"line_start":324,"line_end":324,"column_start":10,"column_end":27},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":387431,"byte_end":387449,"line_start":415,"line_end":415,"column_start":10,"column_end":28},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":389580,"byte_end":389593,"line_start":474,"line_end":474,"column_start":10,"column_end":23},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":389895,"byte_end":389907,"line_start":487,"line_end":487,"column_start":10,"column_end":22},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":391324,"byte_end":391335,"line_start":532,"line_end":532,"column_start":10,"column_end":21},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":393046,"byte_end":393057,"line_start":586,"line_end":586,"column_start":29,"column_end":40},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3160},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":393176,"byte_end":393187,"line_start":592,"line_end":592,"column_start":30,"column_end":41},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3160},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\encoder.rs","byte_start":393288,"byte_end":393301,"line_start":598,"line_end":598,"column_start":10,"column_end":23},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":398443,"byte_end":398453,"line_start":136,"line_end":136,"column_start":6,"column_end":16},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":399423,"byte_end":399432,"line_start":161,"line_end":161,"column_start":6,"column_end":15},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":405608,"byte_end":405617,"line_start":314,"line_end":314,"column_start":29,"column_end":38},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1672},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":405810,"byte_end":405819,"line_start":323,"line_end":323,"column_start":30,"column_end":39},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1672},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":406013,"byte_end":406022,"line_start":332,"line_end":332,"column_start":29,"column_end":38},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1672},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\pnm\\header.rs","byte_start":406217,"byte_end":406226,"line_start":341,"line_end":341,"column_start":32,"column_end":41},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1672},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tga\\decoder.rs","byte_start":407130,"byte_end":407139,"line_start":21,"line_end":21,"column_start":6,"column_end":15},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tga\\decoder.rs","byte_start":408984,"byte_end":408990,"line_start":84,"line_end":84,"column_start":6,"column_end":12},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tga\\decoder.rs","byte_start":410315,"byte_end":410323,"line_start":129,"line_end":129,"column_start":6,"column_end":14},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tga\\decoder.rs","byte_start":411427,"byte_end":411437,"line_start":175,"line_end":175,"column_start":22,"column_end":32},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tga\\decoder.rs","byte_start":423006,"byte_end":423016,"line_start":501,"line_end":501,"column_start":39,"column_end":49},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1765},"to":{"krate":0,"index":2653}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tga\\decoder.rs","byte_start":423854,"byte_end":423863,"line_start":536,"line_end":536,"column_start":31,"column_end":40},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1804},"to":{"krate":1,"index":2848}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tiff.rs","byte_start":424674,"byte_end":424685,"line_start":26,"line_end":26,"column_start":9,"column_end":20},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tiff.rs","byte_start":425108,"byte_end":425118,"line_start":43,"line_end":43,"column_start":32,"column_end":42},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3905},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tiff.rs","byte_start":425508,"byte_end":425517,"line_start":53,"line_end":53,"column_start":32,"column_end":41},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3435},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\tiff.rs","byte_start":426047,"byte_end":426058,"line_start":66,"line_end":66,"column_start":39,"column_end":50},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1824},"to":{"krate":0,"index":2653}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\decoder.rs","byte_start":427205,"byte_end":427216,"line_start":23,"line_end":23,"column_start":15,"column_end":26},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\decoder.rs","byte_start":429353,"byte_end":429364,"line_start":101,"line_end":101,"column_start":32,"column_end":43},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1860},"to":{"krate":0,"index":2653}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":458129,"byte_end":458139,"line_start":674,"line_end":674,"column_start":6,"column_end":16},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":462492,"byte_end":462502,"line_start":870,"line_end":870,"column_start":15,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":483941,"byte_end":483949,"line_start":1529,"line_end":1529,"column_start":6,"column_end":14},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":484566,"byte_end":484574,"line_start":1552,"line_end":1552,"column_start":18,"column_end":26},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3283},"to":{"krate":2,"index":2204}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":484639,"byte_end":484649,"line_start":1558,"line_end":1558,"column_start":6,"column_end":16},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":484938,"byte_end":484948,"line_start":1570,"line_end":1570,"column_start":18,"column_end":28},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3308},"to":{"krate":2,"index":2204}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":485015,"byte_end":485024,"line_start":1576,"line_end":1576,"column_start":6,"column_end":15},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\webp\\vp8.rs","byte_start":485561,"byte_end":485570,"line_start":1594,"line_end":1594,"column_start":18,"column_end":27},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3330},"to":{"krate":2,"index":2204}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\animation.rs","byte_start":500236,"byte_end":500242,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\animation.rs","byte_start":500829,"byte_end":500835,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2076},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\animation.rs","byte_start":501191,"byte_end":501196,"line_start":48,"line_end":48,"column_start":6,"column_end":11},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":502656,"byte_end":502660,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":1542},"to":{"krate":0,"index":2127}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":502663,"byte_end":502668,"line_start":18,"line_end":18,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2179},"to":{"krate":0,"index":2127}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":506833,"byte_end":506839,"line_start":143,"line_end":143,"column_start":38,"column_end":44},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2160},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":507083,"byte_end":507089,"line_start":155,"line_end":155,"column_start":47,"column_end":53},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2160},"to":{"krate":2,"index":3796}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":507238,"byte_end":507244,"line_start":164,"line_end":164,"column_start":49,"column_end":55},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2160},"to":{"krate":2,"index":3767}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":507614,"byte_end":507623,"line_start":182,"line_end":182,"column_start":38,"column_end":47},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2179},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":507879,"byte_end":507888,"line_start":194,"line_end":194,"column_start":47,"column_end":56},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2179},"to":{"krate":2,"index":3796}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":508037,"byte_end":508046,"line_start":203,"line_end":203,"column_start":49,"column_end":58},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2179},"to":{"krate":2,"index":3767}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":508495,"byte_end":508510,"line_start":226,"line_end":226,"column_start":38,"column_end":53},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2198},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":508978,"byte_end":508993,"line_start":247,"line_end":247,"column_start":47,"column_end":62},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2198},"to":{"krate":2,"index":3796}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":509331,"byte_end":509349,"line_start":267,"line_end":267,"column_start":38,"column_end":56},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2214},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":509825,"byte_end":509843,"line_start":288,"line_end":288,"column_start":47,"column_end":65},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2214},"to":{"krate":2,"index":3796}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":510196,"byte_end":510207,"line_start":307,"line_end":307,"column_start":20,"column_end":31},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":3424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":515285,"byte_end":515296,"line_start":454,"line_end":454,"column_start":20,"column_end":31},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":3424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":516819,"byte_end":516830,"line_start":502,"line_end":502,"column_start":20,"column_end":31},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":517452,"byte_end":517463,"line_start":526,"line_end":526,"column_start":30,"column_end":41},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3424},"to":{"krate":2,"index":1703}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":517727,"byte_end":517738,"line_start":539,"line_end":539,"column_start":33,"column_end":44},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3424},"to":{"krate":2,"index":1714}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":518004,"byte_end":518015,"line_start":550,"line_end":550,"column_start":42,"column_end":53},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3424},"to":{"krate":2,"index":1779}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":518286,"byte_end":518297,"line_start":563,"line_end":563,"column_start":45,"column_end":56},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3424},"to":{"krate":2,"index":1783}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":518558,"byte_end":518569,"line_start":574,"line_end":574,"column_start":30,"column_end":41},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3424},"to":{"krate":2,"index":2179}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":518928,"byte_end":518939,"line_start":589,"line_end":589,"column_start":41,"column_end":52},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3424},"to":{"krate":0,"index":2699}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":519763,"byte_end":519774,"line_start":622,"line_end":622,"column_start":37,"column_end":48},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3424},"to":{"krate":0,"index":2712}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":521228,"byte_end":521239,"line_start":664,"line_end":664,"column_start":26,"column_end":37},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":523673,"byte_end":523682,"line_start":742,"line_end":742,"column_start":6,"column_end":15},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\buffer.rs","byte_start":525080,"byte_end":525091,"line_start":780,"line_end":780,"column_start":67,"column_end":78},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3424},"to":{"krate":0,"index":2312}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":536033,"byte_end":536034,"line_start":243,"line_end":243,"column_start":32,"column_end":33},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2348},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":536190,"byte_end":536194,"line_start":251,"line_end":251,"column_start":53,"column_end":57},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3788},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":536573,"byte_end":536577,"line_start":261,"line_end":261,"column_start":53,"column_end":57},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3788},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":536959,"byte_end":536963,"line_start":271,"line_end":271,"column_start":52,"column_end":56},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3788},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":537341,"byte_end":537345,"line_start":282,"line_end":282,"column_start":52,"column_end":56},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3788},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":537725,"byte_end":537729,"line_start":293,"line_end":293,"column_start":54,"column_end":58},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3788},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":537924,"byte_end":537929,"line_start":301,"line_end":301,"column_start":53,"column_end":58},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3860},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":538346,"byte_end":538351,"line_start":312,"line_end":312,"column_start":53,"column_end":58},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3860},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":538767,"byte_end":538772,"line_start":323,"line_end":323,"column_start":52,"column_end":57},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3860},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":539190,"byte_end":539195,"line_start":334,"line_end":334,"column_start":52,"column_end":57},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3860},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":539614,"byte_end":539619,"line_start":345,"line_end":345,"column_start":53,"column_end":58},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3860},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":539878,"byte_end":539882,"line_start":355,"line_end":355,"column_start":52,"column_end":56},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3812},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":540183,"byte_end":540187,"line_start":366,"line_end":366,"column_start":52,"column_end":56},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3812},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":540489,"byte_end":540493,"line_start":377,"line_end":377,"column_start":53,"column_end":57},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3812},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":540795,"byte_end":540799,"line_start":389,"line_end":389,"column_start":54,"column_end":58},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3812},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":541102,"byte_end":541106,"line_start":402,"line_end":402,"column_start":53,"column_end":57},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3812},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":541431,"byte_end":541435,"line_start":416,"line_end":416,"column_start":52,"column_end":56},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3836},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":541737,"byte_end":541741,"line_start":428,"line_end":428,"column_start":52,"column_end":56},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3836},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":542044,"byte_end":542048,"line_start":440,"line_end":440,"column_start":53,"column_end":57},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3836},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":542349,"byte_end":542353,"line_start":451,"line_end":451,"column_start":54,"column_end":58},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3836},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":542654,"byte_end":542658,"line_start":462,"line_end":462,"column_start":53,"column_end":57},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3836},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":542984,"byte_end":542987,"line_start":477,"line_end":477,"column_start":53,"column_end":56},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3740},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":543257,"byte_end":543260,"line_start":488,"line_end":488,"column_start":53,"column_end":56},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3740},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":543528,"byte_end":543531,"line_start":498,"line_end":498,"column_start":52,"column_end":55},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3740},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":543796,"byte_end":543799,"line_start":508,"line_end":508,"column_start":54,"column_end":57},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3740},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":544063,"byte_end":544066,"line_start":518,"line_end":518,"column_start":53,"column_end":56},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3740},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":544352,"byte_end":544355,"line_start":530,"line_end":530,"column_start":53,"column_end":56},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3764},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":544623,"byte_end":544626,"line_start":540,"line_end":540,"column_start":52,"column_end":55},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3764},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":544891,"byte_end":544894,"line_start":551,"line_end":551,"column_start":53,"column_end":56},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3764},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":545164,"byte_end":545167,"line_start":561,"line_end":561,"column_start":54,"column_end":57},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3764},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":545431,"byte_end":545434,"line_start":571,"line_end":571,"column_start":53,"column_end":56},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3764},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":545803,"byte_end":545808,"line_start":588,"line_end":588,"column_start":30,"column_end":35},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3860},"to":{"krate":0,"index":2440}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":546825,"byte_end":546829,"line_start":621,"line_end":621,"column_start":30,"column_end":34},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3788},"to":{"krate":0,"index":2440}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":546939,"byte_end":546943,"line_start":627,"line_end":627,"column_start":30,"column_end":34},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3812},"to":{"krate":0,"index":2440}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":549175,"byte_end":549179,"line_start":685,"line_end":685,"column_start":30,"column_end":34},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3836},"to":{"krate":0,"index":2440}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":551409,"byte_end":551412,"line_start":741,"line_end":741,"column_start":30,"column_end":33},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3740},"to":{"krate":0,"index":2440}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":551521,"byte_end":551524,"line_start":747,"line_end":747,"column_start":30,"column_end":33},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3764},"to":{"krate":0,"index":2440}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":551736,"byte_end":551741,"line_start":760,"line_end":760,"column_start":31,"column_end":36},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3860},"to":{"krate":0,"index":2460}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":551917,"byte_end":551921,"line_start":769,"line_end":769,"column_start":31,"column_end":35},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3788},"to":{"krate":0,"index":2460}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":552121,"byte_end":552125,"line_start":780,"line_end":780,"column_start":31,"column_end":35},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3812},"to":{"krate":0,"index":2460}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":552341,"byte_end":552345,"line_start":791,"line_end":791,"column_start":31,"column_end":35},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3836},"to":{"krate":0,"index":2460}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":552561,"byte_end":552564,"line_start":802,"line_end":802,"column_start":31,"column_end":34},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3740},"to":{"krate":0,"index":2460}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\color.rs","byte_start":552829,"byte_end":552832,"line_start":816,"line_end":816,"column_start":31,"column_end":34},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3764},"to":{"krate":0,"index":2460}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":561006,"byte_end":561018,"line_start":104,"line_end":104,"column_start":6,"column_end":18},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":577617,"byte_end":577629,"line_start":569,"line_end":569,"column_start":27,"column_end":39},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3884},"to":{"krate":0,"index":2699}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\dynimage.rs","byte_start":578149,"byte_end":578161,"line_start":591,"line_end":591,"column_start":23,"column_end":35},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3884},"to":{"krate":0,"index":2712}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":595568,"byte_end":595578,"line_start":46,"line_end":46,"column_start":23,"column_end":33},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3905},"to":{"krate":2,"index":7491}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":596787,"byte_end":596797,"line_start":79,"line_end":79,"column_start":16,"column_end":26},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3905},"to":{"krate":1,"index":1623}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":597542,"byte_end":597552,"line_start":101,"line_end":101,"column_start":26,"column_end":36},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3905},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":599254,"byte_end":599271,"line_start":178,"line_end":178,"column_start":28,"column_end":45},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3958},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":600406,"byte_end":600421,"line_start":212,"line_end":212,"column_start":6,"column_end":21},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":606606,"byte_end":606611,"line_start":362,"line_end":362,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":2653}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":609282,"byte_end":609294,"line_start":438,"line_end":438,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":2653},"to":{"krate":0,"index":2665}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":609297,"byte_end":609302,"line_start":438,"line_end":438,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":2665}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":610249,"byte_end":610255,"line_start":478,"line_end":478,"column_start":44,"column_end":50},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2673},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":611045,"byte_end":611054,"line_start":511,"line_end":511,"column_start":45,"column_end":54},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2686},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":614135,"byte_end":614151,"line_start":617,"line_end":617,"column_start":25,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":2699},"to":{"krate":0,"index":2712}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":617603,"byte_end":617611,"line_start":726,"line_end":726,"column_start":9,"column_end":17},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":618748,"byte_end":618756,"line_start":767,"line_end":767,"column_start":30,"column_end":38},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":2723},"to":{"krate":0,"index":2699}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\image.rs","byte_start":619577,"byte_end":619585,"line_start":799,"line_end":799,"column_start":26,"column_end":34},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2723},"to":{"krate":0,"index":2712}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\traits.rs","byte_start":625875,"byte_end":625879,"line_start":9,"line_end":9,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1542},"to":{"krate":0,"index":2762}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\traits.rs","byte_start":625882,"byte_end":625889,"line_start":9,"line_end":9,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":18,"index":179},"to":{"krate":0,"index":2762}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\traits.rs","byte_start":625892,"byte_end":625895,"line_start":9,"line_end":9,"column_start":39,"column_end":42},"kind":"SuperTrait","from":{"krate":18,"index":571},"to":{"krate":0,"index":2762}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\traits.rs","byte_start":625898,"byte_end":625908,"line_start":9,"line_end":9,"column_start":45,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":2762}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\traits.rs","byte_start":625917,"byte_end":625922,"line_start":9,"line_end":9,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":2179},"to":{"krate":0,"index":2762}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\traits.rs","byte_start":625925,"byte_end":625932,"line_start":9,"line_end":9,"column_start":72,"column_end":79},"kind":"SuperTrait","from":{"krate":18,"index":96},"to":{"krate":0,"index":2762}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\traits.rs","byte_start":626408,"byte_end":626413,"line_start":26,"line_end":26,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":2775}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\traits.rs","byte_start":626416,"byte_end":626423,"line_start":26,"line_end":26,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":18,"index":96},"to":{"krate":0,"index":2775}},{"span":{"file_name":"C:\\Users\\Ollie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.21.3\\./src\\traits.rs","byte_start":626426,"byte_end":626433,"line_start":26,"line_end":26,"column_start":42,"column_end":49},"kind":"SuperTrait","from":{"krate":18,"index":179},"to":{"krate":0,"index":2775}}]}